<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（五）Hexo博客优化和补充]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%94%EF%BC%89Hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E5%92%8C%E8%A1%A5%E5%85%85%2F</url>
    <content type="text"><![CDATA[​ var ap = new APlayer({ element: document.getElementById("aplayer-rCzrkFsX"), narrow: false, autoplay: false, showlrc: 3, music: { title: "从前慢", author: "刘胡轶", url: "http://oxv1k8kvi.bkt.clouddn.com/%E4%BB%8E%E5%89%8D%E6%85%A2.M4A", pic: "http://oxv1k8kvi.bkt.clouddn.com/18-4-2/49973905.jpg", lrc: "http://oxv1k8kvi.bkt.clouddn.com/liuhuyi.lrc" } }); window.aplayers || (window.aplayers = []); window.aplayers.push(ap); 博文压缩SEO SEO（Search Engine Optimization），汉译为搜索引擎优化。搜索引擎优化是一种利用搜索引擎的搜索规则来提高目前网站在有关搜索引擎内的自然排名的方式 遇到问题1 注意备份2 大小写问题参考链接 想让你的博客被更多的人在搜索引擎中搜到吗？]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（四）Hexo高阶之第三方插件]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%9B%9B%EF%BC%89Hexo%E9%AB%98%E9%98%B6%E4%B9%8B%E7%AC%AC%E4%B8%89%E6%96%B9%E6%8F%92%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[Hexo 静态站点具有一定的局限性，需要借助第三方插件来扩展站点的功能。 网上很多教程都是直接添加某些代码，但有很多大神的代码已经merge到源码了，修改就比较简单了，true or false，开启或关闭功能，有些功能可能还需要在第三方服务上注册账号，获取API和APK 。 利用Hexo搭建博客的人很多，但不都是千篇一律的，有些好的还是要借鉴的，更好的是能够有自己的风格，自己写的扩展功能也能够merge到Hexo源码~~~ RSS 什么是RSS？ 简易信息聚合（也叫聚合内容）是一种RSS基于XML标准，在互联网上被广泛采用的内容包装和投递协议。RSS(Really Simple Syndication)是一种描述和同步网站内容的格式，是使用最广泛的XML应用。RSS搭建了信息迅速传播的一个技术平台，使得每个人都成为潜在的信息提供者。发布一个RSS文件后，这个RSS Feed中包含的信息就能直接被其他站点调用，而且由于这些数据都是标准的XML格式，所以也能在其他的终端和服务中使用，是一种描述和同步网站内容的格式。——百度百科 1 生成RSS文件安装hexo-generator-feed插件 1$ npm install --save hexo-generator-feed 打开站点配置文件 ，字段Extensions，添加如下 123# Extensions## Plugins: http://hexo.io/plugins/plugins: hexo-generate-feed 打开主题配置文件 ，字段rss，添加如下 1rss: /atom.xml 配置完成，执行下列命令，可以看到/public文件夹中多了一个atom.xml文件 1$ hexo g 发布之后，在侧边栏会生成一个RSS图标 2 RSS迁移安装hexo-migrator-rss插件 1$ npm install --save hexo-migrator-rss 执行下列命令，从 RSS 迁移所有文章。source 可以是文件路径或网址。 1$ hexo migrate rss &lt;source&gt; 评论系统 NexT支持多款评论系统 如果想要取消某个页面or文章的评论，在文章的属性中增加comments: false 1 Valine 一款基于Leancloud的快速、简洁且高效的无后端评论系统。 支持匿名评论 效果图： 获取APP ID 和 APP KEY 点击注册账号 点击创建应用 进入应用 &gt; 设置 &gt; 应用Key，可以看到APP ID 和 APP KEY 配置 打开主题配置文件 ，字段Valine 12345678910111213# Valine.# You can get your appid and appkey from https://leancloud.cn# more info please open https://valine.js.orgvaline: enable: true appid: # 填写获取的APP ID appkey: # 填写获取的APP KEY notify: true # 邮件提醒 verify: true # 验证码 placeholder: Just go go # 评论提示语 avatar: mm # 头像，具体看Valine官网 guest_info: nick,mail,link # 评论者相关属性 pageSize: 10 # 分页 2 畅言 需要实名登录，最不能接受的是还要绑定手机 获取APP ID 和 APP KEY 点击注册账号 比较麻烦的是站点需要备案，没有备案只能使用15天 有种投机取巧的方式，自行搜索 进入 &gt; 后台总览 ，就可以看到了 配置 打开主题配置文件 ，字段changyan 1234changyan: enable: true appid: # 填写获取的APP ID appkey: # 填写获取的APP KEY ​ 访问统计页脚设计：/themes/next/layout/_partials/footer.swig 文章设置：/themes/next/layout/_macro/post.swig 1 不蒜子统计进入主题配置文件 ，字段busuanzi 相关设置文件/themes/next/layout/_third-party/analytics/busuanzi-counter.swig 123456789101112131415busuanzi_count: # count values only if the other configs are false enable: true # custom uv span for the whole site 整个网站访问用户量 site_uv: true site_uv_header: 本站访客数 site_uv_footer: 人次 # custom pv span for the whole site 整个网站访问总次数 site_pv: true site_pv_header: 本站总访问量 site_pv_footer: 次 # custom pv span for one page only 一篇文章的阅读次数 page_pv: true page_pv_header: 本文总阅读量 page_pv_footer: 次 2 LeanCloud统计1234leancloud_visitors: # 文章阅读次数统计 enable: true appid: # 填写获取的APP ID appkey: # 填写获取的APP KEY 3 字数统计 安装插件 1$ npm install --save hexo-wordcount 配置 123456post_wordcount: item_text: true wordcount: false # 文章字数 min2read: false # 阅读时长预计 totalcount: true # 全站字数 separated_meta: false # 分行 博文置顶修改插件hero-generator-index ，文件node_modules/hexo-generator-index/lib/generator.js 12345678910111213141516// var posts = locals.posts.sort(config.index_generator.order_by);// 改为var posts = locals.posts;posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 只有一篇文章top有定义，将排在最前面 return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排&#125;); 文章属性添加top值，数值越大越靠前 1top: # 数值 文章搜索 安装插件 1$ npm install hexo-generator-searchdb --save 站点配置文件 ，添加 12345search: path: search.xml field: post format: html limit: 10000 主题配置文件 ，字段local_search 123456789# Local search# Dependencies: https://github.com/flashlab/hexo-generator-searchlocal_search: enable: ture # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1 ​ 添加挂件 安装插件 1$ npm install -save hexo-helper-live2d 安装挂件 预览 1$ npm install --save live2d-widget-model-xxx # xxx为挂件名 配置 站点配置文件 ，添加 123456789101112live2d: enable: true scriptFrom: local model: # 挂件模型 use: live2d-widget-model-hijiki display: # 位置 # position: right width: 80 height: 160 bottom: -120 mobile: # 手机显示 show: false ​ 在线联系 基于DaoVoice实现 注册账号 邀请码 832ef3b6 获取API 应用设置 &gt; 安装到网站 配置 文件/themes/next/layout/_partials/head.swig ，添加 123456789&#123;% if theme.daovoice %&#125; &lt;script&gt; (function(i,s,o,g,r,a,m)&#123;i["DaoVoiceObject"]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset="utf-8";m.parentNode.insertBefore(a,m)&#125;)(window,document,"script",('https:' == document.location.protocol ? 'https:' : 'http:') + "//widget.daovoice.io/widget/0f81ff2f.js","daovoice") daovoice('init', &#123; app_id: "&#123;&#123;theme.daovoice_app_id&#125;&#125;" &#125;); daovoice('update'); &lt;/script&gt;&#123;% endif %&#125; 主题配置文件 ， 添加 123# Online contact daovoice: truedaovoice_app_id: # 你获取的API 效果 当有人发信息给你的时候，你可以通过DaoVoice在线交流，也可以关注DaoVoice小程序，绑定你的账号 网易云音乐参考链接 Next文档 hexo的next主题个性化配置教程 Valine – 一款极简的评论系统 hexo-helper-live2d]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（三）Hexo个性化配置进阶]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89Hexo%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E8%BF%9B%E9%98%B6%2F</url>
    <content type="text"><![CDATA[所谓的进阶，无非就是换个主题呀，添加一些小功能…… 看个人喜好吧！ 说到底，大部分都是参照网上的~~~ 主题安装 Hexo官网提供了丰富的主题，挑选一款适合自己的，执行以下命令： basic1$ git clone [主题地址] [存放位置] 例如我选择的主题是Next 1$ git clone https://github.com/iissnan/hexo-theme-next themes/next 完成之后，在themes目录下就会多了一个主题next的文件夹 点击预览 themes 进入站点配置文件 ，找到theme字段，修改为 1theme: next 进入主题配置文件 ，找到scheme字段，里面有next主题四种模板。 12345# Schemesscheme: Muse# scheme: Mist# scheme: Pisces# scheme: Gemini 首先使用命令，打开http://localhost:4000在本地预览，切换scheme刷新下页面看看效果 1$ hexo s -g Next主题主题目录 .├── _config.yml├── languages├── layout├── scripts└── source 具体解释 基础配置进入站点配置文件 ，字段Site 1234567# Sitetitle: Danboard # 网站标题subtitle: 踮起脚尖，另一种高度 # 副标题description: # 描述，显示在侧边栏author: Danboard # 作者language: zh-Hans # 语言timezone: Asia/Shanghai # 时间 站点logo进入主题配置文件 ，字段favicon 12345favicon: small: /images/favicon-16x16-next.png medium: /images/favicon-32x32-next.png apple_touch_icon: /images/apple-touch-icon-next.png safari_pinned_tab: /images/logo.svg 图标推荐： Font Awesome 阿里图标 下载图标，指定大小，修改名称，存放在source/images/内 菜单进入主题配置文件 ，字段menu 默认支持Font Awesome图标，所以||后只要跟上图标名就ok，可以自行更换 123456789menu: home: / || home #about: /about/ || user #tags: /tags/ || tags #categories: /categories/ || th archives: /archives/ || archive #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbea 选择自己想要的菜单项，取消注释 新建一个about（关于我）页面 1$ hexo new page &quot;about&quot; 在hexo/source/下生成about/index.md ，编辑index.md文档 新建一个tags（标签）页面 1$ hexo new page &quot;tages&quot; 在hexo/source/下生成tages/index.md ，修改如下 1type: tages 新建一个categories（分类）页面 1$ hexo new page &quot;categories&quot; 在hexo/source/下生成/index.md ，修改如下 1type: categories 新建一个腾讯公益404页面 在hexo/source/下新建一个404.html的文件，内容如下： 123456789101112131415161718&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv="content-type" content="text/html;charset=utf-8;"/&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /&gt; &lt;meta name="robots" content="all" /&gt; &lt;meta name="robots" content="index,follow"/&gt; &lt;link rel="stylesheet" type="text/css" href="https://qzone.qq.com/gy/404/style/404style.css"&gt;&lt;/head&gt;&lt;body&gt; &lt;script type="text/plain" src="http://www.qq.com/404/search_children.js" charset="utf-8" homePageUrl="/" homePageName="返回主页"&gt; &lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/data.js" charset="utf-8"&gt;&lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/page.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt; 修改菜单 1commonweal: /404.html || heartbea 侧边栏 进入主题配置文件 ，字段sidebar 12345678sidebar: position: left # 靠左 #position: right # 靠右 #display: post # 默认，在文章页面（拥有目录列表）时显示 #display: always # 在所有页面中都显示 display: hide # 在所有页面中都隐藏（可以手动展开） #display: remove # 完全移除 头像 添加头像 进入主题配置文件 ，字段avatar 12avatar: /images/avatar.png # 放在source/images/# avatar: http://example.com/avatar.png # 网上链接 url 圆形头像 文件\themes\next\source\css\_common\components\sidebar\sidebar-author.styl ，添加代码： 12345678.site-author-image &#123; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf;&#125; 头像旋转 同上，添加代码： 1234567891011121314151617181920212223242526272829.site-author-image &#123; /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.5s ease-out; -moz-transition: -moz-transform 1.5s ease-out; transition: transform 1.5s ease-out;&#125;img:hover &#123; /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;/* Z 轴旋转动画 */@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125;@-webkit-keyframes play &#123; // 同上&#125;@-moz-keyframes play &#123; // 同上&#125; 社交链接 进入主题配置文件 ，字段social 12345678910111213141516social: GitHub: https://github.com/XXX || github #E-Mail: mailto:yourname@gmail.com || envelope #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skypesocial_icons: enable: true icons_only: false transition: false 推荐阅读 or 友情链接 进入主题配置文件 ，字段Blogrolls 1234567# Blog rollslinks_icon: linklinks_title: 友情链接# links_layout: block # 块级 分行显示links_layout: inline # 内联 同行显示links: # 添加友链 SYSU: http://www.sysu.edu.cn/ GitHub边角效果： 文件themes/next/layout/_layout.swig ，复制代码放在&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;下，修改href为自己的github地址 GitHub corner fork me on GitHub ​ 动画效果 背景动画 进入主题配置文件 ，字段canvas_nest 12345# 4种，开启true，关闭falsecanvas_nest: falsethree_waves: falsecanvas_lines: truecanvas_sphere: false 进度条 进入主题配置文件 ，字段Progress 1234# Progress bar in the top during page loading.pace: truepace_theme: pace-theme-flash 文章编辑 首页预览多篇文章，通过阅读全文打开 &lt;!--more--&gt;截断 推荐 在想要显示在首页的文字下方添加标签&lt;!--more--&gt; 文章属性description 123456---title: 文章标题date: 发布时间tages: 文章标签description: 摘要，显示在首页--- 自动显示 进入主题配置文件 ，字段auto_excerpt 123auto_excerpt: enable: true length: 150 # 截取长度为150个字符 文章背景 添加边框阴影，突出文章，打开文件themes/next/source/css/_custom/custom.styl ，该文件可以让自定义一些布局，通过浏览器的开发者工具找到对应标签，就可以进行设置了。 12345678.post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; background-color: #fff; -webkit-box-shadow: 0 0 10px rgba(202, 203, 204, .5); -moz-box-shadow: 0 0 10px rgba(202, 203, 204, .5);&#125; 文章分割线 文章添加边框阴影后，分割线就显得有点多余，在custom.styl文件中添加 1234.posts-expand .post-eof &#123; margin: 0px; background-color: rgba(255, 255, 255, 0);&#125; 代码高亮 进入主题配置文件 ，字段highlight 123# Available value:# normal | night | night eighties | night blue | night brighthighlight_theme: normal 文章打赏 进入主题配置文件 ，字段reward，将支付宝or微信收款二维码图片保存到文件夹/themes/next/source/images/下 12345# Reward#reward_comment: Donate comment herewechatpay: /images/wechatpay.jpgalipay: /images/alipay.jpg# bitcoin: /images/bitcoin.png 文章分享 Next这里提供了三种：jiathis、百度、豆瓣，效果都差不多 自定义文件都在themes/next/layout/_partials/share/ jiathis分享 1jiathis: true 百度分享 1234baidushare: type: button# Available value: # 两种样式 下方 | 侧边# button | slide 豆瓣（自己试了，不能用） 1duoshuo_share: true 文章加密 这只是一种障眼法 文件/themes/next/layout/_partials/head.swig ，添加如下代码 12345678910&lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密码错误！'); history.back(); &#125; &#125; &#125;)();&lt;/script&gt; 文章属性添加 1password: # 你设定的密码 ​ 参考链接 Next文档 hexo的next主题个性化配置教程]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[端口占用的解决方法]]></title>
    <url>%2F%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[有时候明明打开了服务器，端口也配置好了，就是不能访问，这时候可能要考虑是否是端口被占用了，端口被占用有时候是没有提示的。解决的话，有两种方法：第一种，改端口；第二种，禁用占用该端口的软件。下面只介绍后者： 打开命令管理器，快捷键win+R 查找占用端口的程序对应的PID 1netstat -ano|findstr [端口号] 稍微接解释一下netstat，详细资料可以输入 netstat ? 或是找度娘 -a 显示所有连接和侦听端口。 -n 以数字形式显示地址和端口号。 -o 显示拥有的与每个连接关联的进程 ID。 （合并指令 -ano 就是列出所有端口的情况了） findstr 在端口使用情况中找到我们需要的端口 根据PID查找端口占用的程序 1tasklist|findstr [PID] tasklist：显示在本地或远程机器上当前运行的进程列表 解除占用 打开任务管理器，选择详细信息 ，点击程序，再点右下方的结束任务就ok了。]]></content>
      <categories>
        <category>网络</category>
      </categories>
      <tags>
        <tag>port</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（二）配置Hexo博客基础框架]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89%E9%85%8D%E7%BD%AEHexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E6%A1%86%E6%9E%B6%2F</url>
    <content type="text"><![CDATA[什么是 Hexo？ Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。—来自“Hexo文档” 配置环境 Node.js Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。 什么是npm？ 允许用户从NPM服务器下载别人编写的第三方包到本地使用。 允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。 允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。 总而言之，就是要使用npm来安装Hexo ​ 安装Hexo 打开Git Bash 或是 命令管理器，执行以下命令就可以了，这样本地就有了hexo的包 路径一般在C:/Users/用户名/AppData/Roaming/npm/hexo 1$ npm install hexo-cli -g 部署博客 hexo实例 创建一个文件夹，存放blog的配置文件 执行hexo命令 1$npm init 初始完成，可以看到文件夹中多了以下文件： node_modules：依赖包（一些黑操作，官网有相应的包，也可以自己编写）scaffolds：文章模板（post默认、page、draft）source：存放文章（/_post/xx.md）themes：主题（默认landscape，有点丑，hexo官网预览，下载自己心仪的主题）_config.yml：整个博客的配置（themes中也有一个同名文件，为了区分前者称为站点配置文件 ，后者称为主题配置文件） package.json：应用程序的信息 部署到github 打开站点配置文件 ：_config.yml，Ctrl+F找到deploy，进行如下配置，最后保存 1234deploy: type: git repo: 你的github项目地址 branch: master 你的github项目地址 执行下面命令 123$ hexo clean$ hexo generate$ hexo server hexo文件解释与命令，请参照Hexo文档 进行本地预览 打开浏览器输入：localhost:4000 hexo server默认打开的是4000端口 如果不能打开，有可能是4000端口被其他程序给占用了 第一种方法，请看端口被占用的解决方法 第二种方法，切换端口 1$ hexo server -p [端口号] ​ 上传到GitHub服务器 如果预览没问题的话，就可以上传到服务器了 123$ hexo clean$ hexo generate$ hexo deploy ​ 发布文章 1$ hexo new [layout] &lt;title&gt; layout：文件夹scaffolds中的文章模板（post默认、page、draft），也可以自定义 title：文章标题 最后还是一样预览再发布到github服务器就ok啦~ ​ 参考链接 Hexo文档 使用hexo+github搭建免费个人博客详细教程]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[好久不见]]></title>
    <url>%2F%E5%A5%BD%E4%B9%85%E4%B8%8D%E8%A7%81%2F</url>
    <content type="text"><![CDATA[美好的一天吧！！！ 我想把它记录下来。 想都不曾想过，想想从高一到现在，恍惚已经隔了六年了，时间模糊了记忆，再一次近距离的交流和接触。 高一之后的联系就仅限于在线了，一年比一年少，少到了快遗忘。傻傻的我，认识的时候，就不知道该如何去交流。 你的信息大部分我应该不会错过，每一次都在心里默念了一遍，就算是回复了，默默做一个窥屏党，适当的时候就点一个赞，基本没有我的评论。每一次你给我的评论，不知道都会有一些算是小激动（我也说不清楚）吧，就算是一条普普通通的评论，都会犹豫要不要回复，怎么回复，我是及时看了，但总不会及时回复。 前不久知道了我在广州，说有时间可以约，不敢相信，想象不到“好久不见”会是怎样一个画面，觉得“有时间”会是多久呢？不到一个月，感觉真奇妙！ “你想不想去长隆？”“你明天有没有课？” 你的邀约，我觉得我是不会拒绝的，但我还是在犹豫。我想想，如果是别人的邀约，我会也会犹豫，但这是一般、正常的犹豫吧，你的不同，这种差异的种子可能来自于很久以前吧！ 犹豫，是因为，我不敢相信，这个“有时间”可以来得这么快、我怀疑是不是发错了在等待着你的撤回…… 我确实是没有课，假如有课，答案也可能都是一致的。 “可以呀”“明天没课” 回复后，又是一阵想象。得知只有我一个的时候，想象会更加具体，同时也要克制一些情绪，“好久不见的好友，见面聊聊挺好的，挺正常的”。 第二天（今天），早起，该准备的准备。 站在地铁出口，回望、想想、再回望、再想想……想什么呢？乱七八糟的，我站在哪里好、出来看得到我吗、有没有什么变化、不知道还认不认得我、会不会在另一个地铁口出来、第一句话我该讲什么、我该说潮汕话还是讲普通话、say Hi 还是“好久不见”……最后还是不知所措，相视一笑。 “感觉你还是向以前一样害羞”。 “一如既往”。我觉得我变了很多，但有些还是没变（我还是我，我又不是我——这就是哲学吧）！但你还是我记忆中的你，不需要描述。 一路行走、一路玩耍，一会潮汕话、一会普通话，我不知道自己会不会很无趣，总是表现得很淡定。 作为一个男生，我也不知道，该如何绅士，如何关心和体贴女性的朋友？这也都是我的犹豫。 觉得自己就是一个婆婆妈妈的人，一点都不干脆，怎么那么多犹豫？但不管怎么说，能收到你的邀约、能陪你一起玩乐，已经最大的满足，所有的犹豫都不算什么。 彩虹湾 1. 飞马家庭过山 2. 超级大摆锤 11. 垂直过山车 哈比儿童王国 3. 梦幻转马 9. 欢乐跳跳 10. 空中警察 欢乐小镇 4. 自由落体 5. 霹雳转车 欢乐水世界 6. 海盗漂流 7. 激流勇进 幻影天地 8. 四维影院 旋风岛 12. U形滑板 13.飓风飞椅 尖叫地带 14. 十环过山车 15. 新北美伐木竞技表演 16. 龙卷风暴（我自己玩的:joy:） 把所有玩过的游戏都回忆一遍，时间模糊的轮廓，此刻再次描摹，深刻。 我不知道如何道别，只能选择目送，一句“自己小心”。不知道下一次相见，是多久，感觉很远，又似乎很近。如果时间久到模糊记忆，不知道下一次相见又能不能再次描刻，但此刻心满意足。 今天，都是美好的，只因为有你！]]></content>
      <categories>
        <category>老友记</category>
      </categories>
      <tags>
        <tag>Friends</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（一）GitHub新建一个blog项目]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89GitHub%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AAblog%E9%A1%B9%E7%9B%AE%2F</url>
    <content type="text"><![CDATA[一个博客就像自己的一片小天地搭建一个属于自己的博客，记录、整理、分享自己的所见所闻、所学所感。网上有许多搭建博客的平台，但个人只了解了github，比较方便，提供域名和服务器，由hexo提供个性模板，如果有自己的域名，还可以解析到博客链接上，更加自主个性。 GitHub服务器 拥有一个github账号点击注册 点击新建一个项目 注意：Repository name为自己github账号的名字(例如我的账号YH-Chen) + .github.io，博客地址就是该名字yh-chen.github.io如果是自定义的名称(例如Danboard)，博客的地址就变成yh-chen.github.io/Danboard。 设置博客 进入项目，选择settings 1） 如果Repository name直接是xxx.github.io，直接拉到最后，可以看到GitHub Pages，它已经自动生成博客链接了，打开链接只显示标题xxx.github.io。 如果你拥有自己的个性域名，先解析到你的博客地址，再在Custom domain里填写你的域名，就可以使用自己的域名登录自己的博客了。 点击choose a theme可以选择github默认的博客主题 选择之后，它会打开创建项目时保存的README.md文件，编辑的内容为markdown语言基础，以后的博客也是用markdown来编辑。直接点击commit changes就可以了。 2） 如果Repository name是一般的名称，同样在设置中拉到GitHub Pages，将Source改为master branch就可以，其他的就跟上面一样了。 编辑博客 git工具 Git(读音为/gɪt/。)是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。—百度百科 点击下载 github是一个面向开源软件项目的托管平台。虽然github上提供了文件编辑和上传的功能，但使用起来并不方便，所以将项目clone到本地，在本地进行编辑，再通过git（也可以使用githubDestop桌面客户端）上传到平台，这里就需要了解一下git的基础命令和配置了。 clone博客项目到本地 点击clone or download，复制链接 打开git bash，输入命令 1$ git clone https://github.com/XXX/XXX.github.io.git 编辑简单的博客 1234$ echo &quot;Hello World!&quot; &gt; index.html$ git add index.html$ git commit -m &quot;Init commit&quot;$ git push origin master 打开链接之后，发现只有Hello World！了。 没有结束！！！ 现在只是完成初步工作，拥有了一个博客，在本地也备份了一份文件，但博客还是空空的，什么格式都没有，下一步就是要利用Hexo弄出一个博客框架。 ​ 参考链接 GitHub Pages 三分钟在GitHub上搭建个人博客]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
