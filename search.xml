<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[HTTP协议]]></title>
    <url>%2FHTTP%E5%8D%8F%E8%AE%AE%2F</url>
    <content type="text"><![CDATA[1 概述]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>tcp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TCP/UDP]]></title>
    <url>%2FTCP-UDP%2F</url>
    <content type="text"><![CDATA[TCP （Transmission Control Protocol，传输控制协议）与 UDP （User Data Protocol，用户数据包协议）是Internet运输层在应用程序端点之间传送应用层报文的两种协议。运输层协议为运行在不同主机上的应用进程之间提供了逻辑通信。TCP协议1 全双工如果一台主机上的进程A与另一台主机上的进程B存在一条TCP连接，那么应用层数据就可以从进程B流向进程A的同时，也从进程A流向进程B。2 点对点单个发送方与单个接收方之间的连接。3 面向连接三次握手（建立连接）客户端发送：SYN = 1, SEQ = X, 端口号服务器回复：SYN = 1, ACK = X + 1, SEQ = Y客户端发送：ACK = Y + 1, SEQ = X + 1确认应答信号ACK = 收到的SEQ + 1。连接建立中，同步信号SYN始终为1。连接建立后，同步信号SYN = 0。为什么要三次握手？三次握手是保证双方互相明确对方能收发信息的最低值。三次握手 ：“喂，你听得到吗？”“我听得到呀，你听得到我吗？”“我能听到你，今天balabala……”两次握手：“喂，你听得到吗？”“我听得到呀”“喂喂，你听得到吗？”“草，我听得到呀！！！！”“你TM能不能听到我讲话啊！！喂！”“……”四次握手：“喂，你听得到吗？”“我听得到呀，你听得到我吗？”“我能听到你，你能听到我吗？”“……不想跟傻逼说话”——来自知乎​四次挥手（断开连接）A向B提出停止连接请求，FIN = 1B收到，ACK = 1B向A提出停止连接请求，FIN = 1A收到，ACK = 1为什么四次握手？四次挥手：“喂，我不说了。”“我知道了。等下，上一句还没说完。Balabala…..””好了，说完了，我也不说了。””我知道了。”4 报文段结构源端口和目的端口 ：各占 2 字节。端口是传输层与应用层的服务接口，传输层的复用和分用功能都要通过端口才能实现序号 / 确认号：占 4 字节。这些字段被TCP发送方和接收方用来实现可靠数据传输服务。数据偏移（首部长度）：占 4 位。它指出 TCP 报文段的数据起始处距离 TCP 报文段的起始处有多远。“数据偏移”的单位是 32 位(以 4 字节为计算单位)保留：占 6 位。保留为今后使用，但目前应置为 0标志字段 URG ：当 URG=1 时,表明紧急指针字段有效.它告诉系统此报文段中有紧急数据,应尽快传送(相当于高优先级的数据)ACK ：只有当 ACK=1 时确认号字段才有效；当 ACK=0 时,确认号无效PSH ：接收 TCP 收到 PSH = 1 的报文段，就尽快地交付接收应用进程，而不再等到整个缓存都填满了后再向上交付RST ：当 RST=1 时，表明 TCP 连接中出现严重差错（如由于主机崩溃或其他原因），必须释放连接，然后再重新建立运输连接SYN ：同步 SYN = 1 表示这是一个连接请求或连接接受报文FIN ：用来释放一个连接，FIN=1 表明此报文段的发送端的数据已发送完毕，并要求释放运输连接窗口 ：占2字节。用于流量控制。检验和 ：占 2 字节。检验和字段检验的范围包括首部和数据这两部分，在计算检验和时，要在 TCP 报文段的前面加上 12 字节的伪首部紧急指针 ：占 16 位。指出在本报文段中紧急数据共有多少个字节（紧急数据放在本报文段数据的最前面）选项：长度可变。TCP 最初只规定了一种选项，即最大报文段长度 MSS。MSS 告诉对方 TCP：“我的缓存所能接收的报文段的数据字段的最大长度是 MSS 个字节.” [MSS(Maximum Segment Size)是 TCP 报文段中的数据字段的最大长度.数据字段加上 TCP 首部才等于整个的 TCP 报文段]填充 ：这是为了使整个首部长度是 4 字节的整数倍5 可靠数据传输确认丢失和确认迟到超时重传TCP 每发送一个报文段，就对这个报文段设置一次计时器。只要计时器设置的重传时间到但还没有收到确认，就要重传这一报文段。6 拥塞控制拥塞窗口含义:拥塞窗口的大小取决于网络的拥塞程度，并且动态地在变化。发送方让自己的发送窗口等于拥塞窗口，如再考虑到接收方的接收能力，则发送窗口还可能小于拥塞窗口。发送方控制拥塞窗口的原则:只要网络没有出现拥塞，拥塞窗口就再增大一些，以便把更多的分组发送出去.但只要网络出现拥塞，拥塞窗口就减小一些，以减少注入到网络中的分组数。慢启动在主机刚刚开始发送报文段时可先设置拥塞窗口 cwnd = 1，即设置为一个最大报文段 MSS 的数值在每收到一个对新的报文段的确认后,将拥塞窗口加 1，即增加一个 MSS 的数值使用慢开始算法后，每经过一个传输轮次(往返时间 RTT)，拥塞窗口 cwnd 就加倍拥塞避免拥塞避免状态：cwnd的值大约是上次遇到拥塞是的值的一半线性增长，每个RTT只将cwnd的值增加一个MSS快速恢复Reno：当出现丢包事件时，cwmd值为原来的一半，然后线性增长。Tahoe：当出现丢包事件时，ssthresh的值设置为cwmd值的一半，cwnd的值被设置为1个MSS，然后继续慢启动、拥塞避免。拥塞窗口的大小取决于网络的拥塞程度,并且动态地在变化.发送方让自己的发送窗口等于拥塞窗口.如再考虑到接收方的接收能力,则发送窗口还可能小于拥塞窗口发送方控制拥塞窗口的原则:只要网络没有出现拥塞,拥塞窗口就再增大一些,以便把更多的分组发送出去.但只要网络出现拥塞,拥塞窗口就减小一些,以减少注入到网络中的分组数7 优缺点优点可靠、稳定缺点效率低、已被攻击（DOS）UDP协议1 面向无连接2 优缺点优点传输速率快（适合音、视频传输，容忍丢失）缺点不可靠、不稳定（没有拥塞控制）​区别TCPUDP面向有连接的通信服务面向无连接的通信服务四元组（源IP+端口/目的IP+端口）二元组（目的IP+端口）提供可靠的通信传输不可靠，会丢包保证数据顺序可能乱序数据无边界数据有边界传输速度慢传输速度快面向字节流面向报文一对一可以一对一，或一对多报头至少20字节报头8字节有流量控制，拥塞控制没有参考链接TCP与UDPTCP详解]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>tcp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[右键菜单的新建项中添加办公程序]]></title>
    <url>%2F%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E7%9A%84%E6%96%B0%E5%BB%BA%E9%A1%B9%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%8A%9E%E5%85%AC%E7%A8%8B%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[平时打开办公软件的习惯时，直接右键 &rarr; 新建 &rarr; Word/Excel/PowerPoint等等，桌面上没有办公软件的图标，显得简洁一点。由于，平时一些实验报告要用到markdown来写，所以想到像word这些办公软件一样直接在某个目录下新建，修改名称就可以了，编写的时候直接ctrl+s保存。习惯因人而异，不喜勿喷！！！打开注册表快捷键Win+R，输入regedit找到文件后缀名HKEY_CLASSES_ROOT&rarr; .md右键 &rarr; 新建 &rarr; 项，命名为ShellNew进入shellNew，右键 &rarr; 新建 &rarr; 字符串值，命名为NullFile，即每次打开markdown，都会创建一个空文档。使注册表生效第一种：重启第二种：任务管理器，找到explorer.exe，结束该进程，再启动（运行新任务+explorer.exe）​效果]]></content>
      <categories>
        <category>小技巧</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>tips</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[STL标准模板库]]></title>
    <url>%2FSTL%E6%A0%87%E5%87%86%E6%A8%A1%E6%9D%BF%E5%BA%93%2F</url>
    <content type="text"><![CDATA[]]></content>
  </entry>
  <entry>
    <title><![CDATA[数组解析]]></title>
    <url>%2F%E6%95%B0%E7%BB%84%E8%A7%A3%E6%9E%90%2F</url>
    <content type="text"><![CDATA[1 数组1.1 定义数组是一组具有相同类型的、连续的内存区域。要引用数组中的一个特定区域或元素，需要通过指定数组名和该元素在数组中的位置编号。1.2 声明12int a[5]; // 大小为5 int b[]; // Error1.3 初始化1234int a[] = &#123;1, 2, 3, 4, 5&#125;; // 初始化，大小为5int a[5] = &#123;1, 2, 3&#125;; // 初始化，1，2，3，0，0int a[5] = &#123;1, 2, 3, 4, 5, 6&#125;; // Error, 数组越界int b[] = a; // Error, 不能直接复制注意：字符串数组，数组大小要比字符数大1，因为字符串数组后面还有一个默认的空字符’\0’1char c[6] = "Hello";2 指针2.1 定义在C++中，数组和指针是密切相关的，两者几乎可以交换使用。可以认为一个数组名就是一个常量指针。2.2 使用12345int b[5];int *bptr;// 数组名不带下标，是一个指向数组第一个元素的指针bptr = b; // bptr = &amp; b[0];// * (bptr+3) 等价于 b[3]2.3 数组指针指向数组的指针。123456int a[2][2] = &#123;1, 2, 3, 4&#125;; // 二维数组int (*p)[2] = a;// a 是一个数组名，指向一维数组的指针，值 &amp;a[0][0]， sizeof(a) = 16// a[0] 是一维数组名，指向整型的指针，值 &amp;a[0][0]// a[1] 是一维数组名，指向整型的指针，值 &amp;a[1][0]// p 是一个数组指针变量，值 &amp;a[0][0], sizeof(p) = 42.4 指针数组存放指针的数组。常见于构成基于指针的字符串的数组。123char *p[2] = &#123;"Hello", "World"&#125;;// p，指向char数组的指针，值 &amp;p[0]，sizeof(p) = 16// p[0] 是一个char数组，值"Hello"3 vector3.1 定义一个封装了动态大小数组的顺序容器（Sequence Container），能够存放任意类型的动态数组。效率：数组&gt;vector，原因是vector的插入删除要消耗更多时间。3.2 初始化12345vector&lt;int&gt; a(3); // 大小为3vector&lt;int&gt; b(3, 0); // 大小为3，初始化为0vector&lt;int&gt; c = &#123;1, 2, 3&#125;; // 大小为3，初始化为1，2，3，等号可以省略vector&lt;int&gt; d = c; // 直接复制vector&lt;int&gt; e(c); // 直接复制3.3 函数3.3.1 构造函数vector():创建一个空vectorvector(int n):创建一个vector，大小为nvector(int n, const t&amp; t):创建一个vector，大小为n，且值均为tvector(const vector&amp; a):复制构造函数vector(a.begin(), a.end()):复制[begin,end)区间内数组a的元素到vector中3.3.2 插入函数a.push_back(const T&amp; x):尾部插入元素a.insert(iterator it, const T&amp; x):指定位置插入3.3.3 删除函数a.erase(iterator it):删除向量中迭代器指向元素a.erase(iterator first, iterator last):删除向量中[first,last)中元素a.pop_back():删除向量中最后一个元素a.clear():清空向量中所有元素3.3.4 其他函数bool empty() const:判断向量是否为空，若为空，则向量中无元素int size() const:返回向量中元素的个数4 array4.1 定义c++11中给数组提供的更加安全的访问方式，是一种容器类型，支持一系列容器操作。效率跟数组相近。4.2 初始化123array&lt;类型, 大小&gt; a; array&lt;int, 3&gt; a = &#123;1, 2, 3&#125;;array&lt;int, 3&gt; b = a; // 大小一致5 总结数组vectorarray备注内存栈（静态）堆（动态）栈（静态）效率高低高索引a[i]a[i] / a.at(i)a[i]i从0开始a.at(i)检查是否越界NYYarray&lt;int, 2&gt;a= { 1,2, };cout &lt;&lt; a.at(-1) &lt;&lt; endl; // Error复制NY，类型相同Y，类型和大小相同大小sizeof(a)/size(类型)，固定a.size()，可变a.size()，固定includeN&lt;vector&gt;&lt;array&gt;初始化赋值YYY插入NYN删除NYN访问数组范围外的数据YYY例如a[-40]或者a[100]]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[排序算法总结和归纳]]></title>
    <url>%2F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E5%92%8C%E5%BD%92%E7%BA%B3%2F</url>
    <content type="text"><![CDATA[非线性时间比较类排序：通过比较来决定元素间的相对次序，由于其时间复杂度不能突破O(nlogn)，因此称为非线性时间比较类排序。线性时间非比较类排序：不通过比较来决定元素间的相对次序，它可以突破基于比较排序的时间下界，以线性时间运行，因此称为线性时间非比较类排序。1 冒泡排序交换排序，最简单的一种排序算法。从第一个元素开始，与之后的元素逐一比较，如果后者小于前者，则交换位置，从而找到最小的元素。12345678910void bubble(int* a, int n)&#123; for(int i=0; i&lt;n-1; i++) &#123; for (int j=i+1; j&lt;n; j++) &#123; if(a[i] &gt; a[j]) &#123; swap(a[i], a[j]); &#125; &#125; &#125;&#125;2 快速排序交换排序，是冒泡排序的一种改进算法。通过一次排序将待排数据分割成两部分，前一部分数据均比后一部分数据小，则可分别对这两部分的数据继续排序，从而达到整体有序。123456789101112131415161718192021222324int Partition(int* a, int low, int high)&#123; int i = low, j = high; while(i &lt; j) &#123; while(i &lt; j &amp;&amp; a[i] &lt;= a[j]) j --; // 右侧扫描 if(i &lt; j) &#123; swap(a[i], a[j]); i ++; &#125; while(i &lt; j &amp;&amp; a[i] &lt;= a[j]) i ++; // 左侧扫描 if(i &lt; j) &#123; swap(a[i], a[j]); j --; &#125; &#125; return i;&#125;void Quick(int* a, int low, int high)&#123; if(low &lt; high) &#123; int pivot = Partition(a, low, high); // 一次划分 Quick(a, low, pivot-1); // 前一个子序列排序 Quick(a, pivot+1, high); // 后一个子序列排序 &#125;&#125;3 插入排序简单排序算法。默认第一个元素已经排序好，将下一个元素按大小插入已排好序的列表，重复这样的操作，知道最后一个元素插入。12345678910111213void Insert(int* a, int n)&#123; for(int i=1; i&lt;n-1; i++) &#123; int tmp = a[i]; // 记录待排记录 int j = i - 1; // 与前面排好的序列记录依次比较 while(j &gt;= 0 &amp;&amp; a[j] &gt; tmp) &#123; a[j+1] = a[j]; j --; &#125; a[j+1] = tmp; &#125;&#125;4 希尔排序插入排序的改进，也叫“缩小增量排序”。先将整个待排序列分割成若干个子序列，分别进行插入排序，逐渐缩小划分的间隔，直到最后，间隔为1，对全体进行一次插入排序，得到一个有序序列。1234567891011121314void Shell(int* a, int n)&#123; for(int d=n/2; d&gt;=1; d=d/2) &#123; // 初始间隔为序列大小的一半 for(int i=d; i&lt;n; i++) &#123; int tmp = a[i]; // 记录待排记录 int j = i - d; while(j&gt;=0 &amp;&amp; a[j]&gt;tmp) &#123; // 进行插入排序 a[j+d] = a[j]; j -= d; &#125; a[j+d] = tmp; &#125; &#125;&#125;5 选择排序简单的排序算法。每次在未排序序列中找到最小元素，存放到已排序列。123456789101112void Select(int* a, int n)&#123; for(int i=0; i&lt;n-1; i++) &#123; int minIndex = i; // 最小数索引 for (int j=i+1; j&lt;n; j++) &#123; if(a[minIndex] &gt; a[j]) &#123; // 寻找最小数 minIndex = j; &#125; &#125; swap(a[i], a[minIndex]); &#125;&#125;6 堆排序堆排序利用了大根堆（或小根堆）堆顶记录的关键字最大（或最小）这一特征，使得在当前无序区中选取最大（或最小）关键字的记录变得简单。123456789101112131415161718192021222324252627void Adjust(int* a, int p, int n) //堆调整&#123; for(int i=2*p+1; i&lt;n; i=i*2+1)&#123; //如果右边值大于左边值，指向右边 if(i+1 &lt; n &amp;&amp; a[i] &lt; a[i+1]) i ++; //如果子节点大于父节点，将子节点值赋给父节点,并以新的子节点作为父节点 if(a[p] &gt;= a[i]) break; else &#123; swap(a[p], a[i]); p = i; &#125; &#125;&#125; void Heap(int* a, int n)&#123; // 构建大顶堆 for(int i=n/2-1; i&gt;=0; i--) &#123; Adjust(a, i, n); &#125; // 交换堆顶与末尾元素，重新调整堆 for(int i=n-1; i&gt;0; i--) &#123; swap(a[0], a[i]); Adjust(a, 0, i); &#125;&#125;7 归并排序分治法，将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为2-路归并。128 总结稳定：如果a原本在b前面，而a=b，排序之后a仍然在b的前面。时间复杂度：对排序数据的总的操作次数。反映当n变化时，操作次数呈现什么规律。空间复杂度：是指算法在计算机内执行时所需存储空间的度量，它也是数据规模n的函数。参考链接十大经典排序算法]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>数据结构</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文章加密TEST1]]></title>
    <url>%2F%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86TEST1%2F</url>
    <content type="text"><![CDATA[这只是一种障眼法文件/themes/next/layout/_partials/head.swig ，添加如下代码12345678910&lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密码错误！'); history.back(); &#125; &#125; &#125;)();&lt;/script&gt;文章属性添加1password: # 你设定的密码​]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>encrypt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文章加密TEST2]]></title>
    <url>%2F%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86TEST2%2F</url>
    <content type="text"><![CDATA[Please enter the password to read. ]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>encrypt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（五）Hexo博客优化和补充]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%94%EF%BC%89Hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E5%92%8C%E8%A1%A5%E5%85%85%2F</url>
    <content type="text"><![CDATA[SEOSEO（Search Engine Optimization），汉译为搜索引擎优化。搜索引擎优化是一种利用搜索引擎的搜索规则来提高目前网站在有关搜索引擎内的自然排名的方式。——百度百科1 站点地图站点地图是一个网站所有链接的容器。很多网站的连接层次比较深，爬虫很难抓取到，站点地图可以方便爬虫抓取网站页面，通过抓取网站页面，清晰了解网站的架构，网站地图一般存放在根目录下并命名sitemap，为爬虫指路，增加网站重要内容页面的收录。——百度百科安装插件12$ npm install hexo-generator-sitemap --save $ npm install hexo-generator-baidu-sitemap --save站点配置文件1234567# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://www.danboard.meroot: /permalink: :title/ # 链接后缀permalink_defaults: # 默认值 lang: enpermalink默认是:year/:month/:day/:title/ ，这样我们的文章生成的连接就会是sitname/year/month/day/title ，网站的连接层次比较深，很难被爬虫抓取，所以可以减少连接的层次验证执行修改后，可以在public目录中看到生成的两个文件sitemap.xml和baidusitemap.xml在浏览器中输入相应地址，如http://www.danboard.me/sitemap.xml来检查是否生成成功​2 谷歌收录效率非常高，但需要翻墙，也就是说你的博客只能在境外才能被搜索到首先检查站点是否被收录尝试使用Google Search Console登录/注册添加站点验证站点提交站点地图抓取 &gt; 站点地图验证收录​3 百度收录同样是，登录/注册 $\rightarrow$ 添加站点 $\rightarrow$ 验证站点 $\rightarrow$ 提交站点地图提交链接效率：主动推送 &gt; 自动推送 &gt; sitemap主动推送安装插件1$ npm install hexo-baidu-url-submit --save站点配置文件，添加12345baidu_url_submit: count: 1 # 提交最新的一个链接 host: www.danboard.me # 你的博客站点 token: your_token # 你的密钥 path: baidu_urls.txt # 新链接存放文档your_token:提交更新发布，使用命令hexo deploy时提交123456deploy:- type: git repo: - 你的github项目地址 branch: master # old- type: baidu_url_submitter # new注意：-属于一部分，注意格式对齐，否则会报错自动推送主题配置文件 ，字段baidu_push12# Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEObaidu_push: ture脚本位置位于themes/next/layout/_third-party/seo/baidu-push.swigsitemap与谷歌提交一致！！！还没有结束，百度收录不仅慢而且也比较麻烦了，因为github屏蔽了百度的爬虫，所以部署在github上的静态站点很难被百度搜索到。解决方法：将静态Pages托管到Coding上，重新解析一个新的二级域名，这样Coding和Github上的Pages就变成了两个独立的博客了。同一域名解析到不同的IP，保持之前的配置不改动，通过配置DNS，使国内的线路流量分配到Coding上，而其他线路分配到GitHub。这样，百度抓取就会跑到Coding上去。4 DNS流量分发Coding配置与GitHub是一致的，创建项目 $\rightarrow$ 开启静态Pages $\rightarrow$ 绑定域名站点配置文件，找到deploy：1234567deploy:- type: git repo: - 你的github项目地址 - 你的coding醒目地址 branch: master # old- type: baidu_url_submitter # newDNSPOD已被腾讯收购，可以登录DNSPOD / 腾讯云修改域名服务器，以GoDaddy域名为例先进入腾讯云控制台 $\rightarrow$ 域名管理，可以看到下方提示登录GoDaddy进入域名DNS管理，修改DNS，选择自定义返回腾讯云，进行域名解析​静态文件加载静态文件是一些js、css、html等文件，一般网站都会调用一大堆这些文件，如果调用的一些静态资源是通用的文件（第三方库），如jquery、fancybox，可以设定成合适的 CDN 地址，从而加速网站的运行。参考：NexT文档主题配置文档，字段vendors12345678910111213141516171819202122232425262728293031323334353637383940414243444546# Script Vendors.# Set a CDN address for the vendor you want to customize.# For example# jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js# Be aware that you should use the same version as internal ones to avoid potential problems.# Please use the https protocol of CDN files when you enable https on your site.vendors: # Internal path prefix. Please do not edit it. _internal: lib # Internal version: 2.1.3 jquery: //cdn.jsdelivr.net/jquery/2.1.3/jquery.min.js # Internal version: 2.1.5 # See: http://fancyapps.com/fancybox/ fancybox: //cdn.jsdelivr.net/fancybox/2.1.5/jquery.fancybox.pack.js fancybox_css: //cdn.jsdelivr.net/fancybox/2.1.5/jquery.fancybox.min.css # Internal version: 1.0.6 # See: https://github.com/ftlabs/fastclick fastclick: //cdn.jsdelivr.net/fastclick/1.0.6/fastclick.min.js # Internal version: 1.9.7 # See: https://github.com/tuupola/jquery_lazyload lazyload: //cdn.jsdelivr.net/jquery.lazyload/1.9.3/jquery.lazyload.min.js # Internal version: 1.2.1 # See: http://VelocityJS.org velocity: //cdn.jsdelivr.net/velocity/1.2.3/velocity.min.js # Internal version: 1.2.1 # See: http://VelocityJS.org velocity_ui: //cdn.jsdelivr.net/velocity/1.2.3/velocity.ui.min.js # Internal version: 0.7.9 # See: https://faisalman.github.io/ua-parser-js/ ua_parser: //cdn.jsdelivr.net/ua-parser.js/0.7.10/ua-parser.min.js # Internal version: 4.6.2 # See: http://fontawesome.io/ fontawesome: //maxcdn.bootstrapcdn.com/font-awesome/4.6.2/css/font-awesome.min.css # Internal version: 1.0.2 # See: https://github.com/HubSpot/pace pace: //cdn.bootcss.com/pace/1.0.2/pace.min.js pace_css: //cdn.bootcss.com/pace/1.0.2/themes/blue/pace-theme-flash.min.cssGoogle引用Google被墙，所以有关谷歌类的引用都会导致引用失败，使网站加载变慢。例如：字体应用fonts.googleapis.com网上看到两种替代的：360：fonts.useso.com中科大： fonts.lug.ustc.edu.cn不过现在，问题来了，谷歌字体库解封了，360好像关了，中科大不稳定，所以呢？修改前还是要甄别一下站长工具如果需要修改，可以查看主题配置文件，字段font 以及文件themes/next/layout/_partials/head/external-fonts.swig博文压缩NexT主题在解析markdown文件时生成的代码会包含大量的空白，增加了文档的大小，影响网站的加载速度。安装插件1$ npm install --save hexo-all-minifierhexo-all-minifier文档主题配置文件，添加12345678910111213141516171819202122232425262728293031323334353637all_minifier: truejs_concator: enable: false bundle_path: '/js/bundle.js' front: false silent: falsehtml_minifier: # html压缩 enable: true ignore_error: false silent: false exclude: css_minifier: # css压缩 enable: true silent: false exclude: - '*.min.css'js_minifier: # js压缩 enable: true mangle: true silent: false output: compress: exclude: - '*.min.js'image_minifier: # 图片压缩 enable: true interlaced: false multipass: false optimizationLevel: 2 pngquant: false progressive: false silent: false​遇到问题1 注意备份之前遇到一个很严重的问题，hexo命令打错了本来是想安装某个插件，用了一下简写命令hexo i xx一不小心就点了回车，hexo i将文件都初始化了，打开链接一片空白自己还庆幸着懂得版本控制，可是一想，我一直用是hexo命令，只是生成了一些静态文件提交到github上，并没，有将整个源文件push上去，一下子头就大了最后，发现只有几个文件清空了，通过版本控制在提交到github的静态文件目录找到了对应的文件，及时修改回来。所以呢，这一波折，就是要告诉我，要时刻做好版本控制。GitHub上的私人仓库是要收费，而我们的源码中又包含了很多密钥，又不能放到公开仓库中。所以，要找替代品，国内有很多平台模仿GitHub的，例如Coding、码云之类，同样可以通过git控制，还提供免费的私人仓库。同时，该项目可以在其他电脑上clone，编辑并上传。2 大小写问题GitHub上好像对大小写不敏感，但是链接却对大小写敏感。我把一个标签or标题字母的大小写改了，结果就404回到GitHub上你可以发现仓库里文件名是没有改变的，所以呢，注意字母大小写问题，改动后的文件可以先不提交，GitHub自动把原来的文件删除后再提交，就不会出错了。3 手机适配电脑的屏幕比较大，同样的页面大小放到手机上坑定就不合适了。NexT主题已经初步适配了手机浏览器模式，但一些我们自定义的布局，还需要自己调整。例如，在前文讲过的GitHub边角问题，我们都可以在/themes/next/source/css/_custom/custom.styl文件中重新定义布局，考虑标签优先权问题，可以加上!important就有绝对优先权了。通过源代码，可以看到一种方便的手机浏览器适配方法，直接在标签内加上+mobile{}，例如我在一篇文章内添加了一个音乐播放器，电脑上宽度是合适的，手机上就爆了，修改如下：12345678.post .aplayer &#123; width: 520px; margin: 0 auto; +mobile() &#123; width: auto; margin: 0 auto; &#125; &#125;4 开发文档开发文档很重要，像Hexo文档提供了配置步骤、目录说明、主题插件等等，了解下开发文档，自定义修改的时候会更加方便。参考链接想让你的博客被更多的人在搜索引擎中搜到吗？Hexo插件之百度主动提交链接百度无法爬取Github Pages静态网站解决方案]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（四）Hexo高阶之第三方插件]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%9B%9B%EF%BC%89Hexo%E9%AB%98%E9%98%B6%E4%B9%8B%E7%AC%AC%E4%B8%89%E6%96%B9%E6%8F%92%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[Hexo 静态站点具有一定的局限性，需要借助第三方插件来扩展站点的功能。网上很多教程都是直接添加某些代码，但现在很多也已经merge到源码了，所以修改就比较方便了，true or false，开启或关闭功能，有些功能可能还需要在第三方服务上注册账号，获取API和APK 。利用Hexo搭建博客的人很多，但不都是千篇一律的，有些好的还是要借鉴的，更好的是能够有自己的风格~~~RSS什么是RSS？简易信息聚合（也叫聚合内容）是一种RSS基于XML标准，在互联网上被广泛采用的内容包装和投递协议。RSS(Really Simple Syndication)是一种描述和同步网站内容的格式，是使用最广泛的XML应用。RSS搭建了信息迅速传播的一个技术平台，使得每个人都成为潜在的信息提供者。发布一个RSS文件后，这个RSS Feed中包含的信息就能直接被其他站点调用，而且由于这些数据都是标准的XML格式，所以也能在其他的终端和服务中使用，是一种描述和同步网站内容的格式。——百度百科1 生成RSS文件安装hexo-generator-feed插件1$ npm install --save hexo-generator-feed打开站点配置文件 ，字段Extensions，添加如下123# Extensions## Plugins: http://hexo.io/plugins/plugins: hexo-generate-feed打开主题配置文件 ，字段rss，添加如下1rss: /atom.xml配置完成，执行下列命令，可以看到/public文件夹中多了一个atom.xml文件1$ hexo g发布之后，在侧边栏会生成一个RSS图标2 RSS迁移安装hexo-migrator-rss插件1$ npm install --save hexo-migrator-rss执行下列命令，从 RSS 迁移所有文章。source 可以是文件路径或网址。1$ hexo migrate rss &lt;source&gt;评论系统NexT支持多款评论系统如果想要取消某个页面or文章的评论，在文章的属性中增加comments: false1 Valine一款基于Leancloud的快速、简洁且高效的无后端评论系统。支持匿名评论效果图：获取APP ID 和 APP KEY点击注册账号点击创建应用进入应用 &gt; 设置 &gt; 应用Key，可以看到APP ID 和 APP KEY配置打开主题配置文件 ，字段Valine12345678910111213# Valine.# You can get your appid and appkey from https://leancloud.cn# more info please open https://valine.js.orgvaline: enable: true appid: # 填写获取的APP ID appkey: # 填写获取的APP KEY notify: true # 邮件提醒 verify: true # 验证码 placeholder: Just go go # 评论提示语 avatar: mm # 头像，具体看Valine官网 guest_info: nick,mail,link # 评论者相关属性 pageSize: 10 # 分页2 畅言需要实名登录，最不能接受的是还要绑定手机获取APP ID 和 APP KEY点击注册账号比较麻烦的是站点需要备案，没有备案只能使用15天有种投机取巧的方式，自行搜索进入 &gt; 后台总览 ，就可以看到了配置打开主题配置文件 ，字段changyan1234changyan: enable: true appid: # 填写获取的APP ID appkey: # 填写获取的APP KEY​访问统计页脚设计：/themes/next/layout/_partials/footer.swig文章设置：/themes/next/layout/_macro/post.swig1 不蒜子统计进入主题配置文件 ，字段busuanzi相关设置文件/themes/next/layout/_third-party/analytics/busuanzi-counter.swig123456789101112131415busuanzi_count: # count values only if the other configs are false enable: true # custom uv span for the whole site 整个网站访问用户量 site_uv: true site_uv_header: 本站访客数 site_uv_footer: 人次 # custom pv span for the whole site 整个网站访问总次数 site_pv: true site_pv_header: 本站总访问量 site_pv_footer: 次 # custom pv span for one page only 一篇文章的阅读次数 page_pv: true page_pv_header: 本文总阅读量 page_pv_footer: 次2 LeanCloud统计1234leancloud_visitors: # 文章阅读次数统计 enable: true appid: # 填写获取的APP ID appkey: # 填写获取的APP KEY3 字数统计安装插件1$ npm install --save hexo-wordcount配置123456post_wordcount: item_text: true wordcount: false # 文章字数 min2read: false # 阅读时长预计 totalcount: true # 全站字数 separated_meta: false # 分行博文置顶修改插件hero-generator-index ，文件node_modules/hexo-generator-index/lib/generator.js12345678910111213141516// var posts = locals.posts.sort(config.index_generator.order_by);// 改为var posts = locals.posts;posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 只有一篇文章top有定义，将排在最前面 return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排&#125;);文章属性添加top值，数值越大越靠前1top: # 数值文章搜索安装插件1$ npm install hexo-generator-searchdb --save站点配置文件 ，添加12345search: path: search.xml field: post format: html limit: 10000主题配置文件 ，字段local_search123456789# Local search# Dependencies: https://github.com/flashlab/hexo-generator-searchlocal_search: enable: ture # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1​添加挂件安装插件1$ npm install -save hexo-helper-live2d安装挂件预览1$ npm install --save live2d-widget-model-xxx # xxx为挂件名配置站点配置文件 ，添加123456789101112live2d: enable: true scriptFrom: local model: # 挂件模型 use: live2d-widget-model-hijiki display: # 位置 # position: right width: 80 height: 160 bottom: -120 mobile: # 手机显示 show: false​在线联系基于DaoVoice实现注册账号邀请码 832ef3b6获取API应用设置 &gt; 安装到网站配置文件/themes/next/layout/_partials/head.swig ，添加123456789&#123;% if theme.daovoice %&#125; &lt;script&gt; (function(i,s,o,g,r,a,m)&#123;i["DaoVoiceObject"]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset="utf-8";m.parentNode.insertBefore(a,m)&#125;)(window,document,"script",('https:' == document.location.protocol ? 'https:' : 'http:') + "//widget.daovoice.io/widget/0f81ff2f.js","daovoice") daovoice('init', &#123; app_id: "&#123;&#123;theme.daovoice_app_id&#125;&#125;" &#125;); daovoice('update'); &lt;/script&gt;&#123;% endif %&#125;主题配置文件 ， 添加123# Online contact daovoice: truedaovoice_app_id: # 你获取的API效果 当有人发信息给你的时候，你可以通过DaoVoice在线交流，也可以关注DaoVoice小程序，绑定你的账号添加音乐网易云音乐外链​ 单曲复制代码，粘贴在你想要的位置，可以是文章 或者是 侧边栏歌单自己的歌单是没有生成外链。分享 $\rightarrow$ 动态 $\rightarrow$ 外链效果可以缩放Aplayer引入js文件APlayer.min.js1&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/aplayer/1.6.0/APlayer.min.js"&gt;&lt;/script&gt;位置themes/next/layout/_partials/head.swigMeting.min.js1&lt;script src="https://cdn.jsdelivr.net/npm/meting@1.0.1/dist/Meting.min.js"&gt;&lt;/script&gt;位置themes/next/layout/_partials/footer.swig添加音乐音乐平台1&lt;div class=&quot;aplayer&quot; data-id=&quot;&quot; data-server=&quot;&quot;&gt;&lt;/div&gt;参数解释：data-id: 歌曲/专辑/歌单 IDdata-server: 音乐平台，支持如下参数netease （网易云音乐）tencent （qq音乐）xiami （虾米音乐）kugou （酷狗音乐）baidu （百度音乐）data-type: 请求类型，支持如下参数song （单曲）album （专辑）playlist （歌单）search （搜索）音乐外链（参数名可能与Aplayer中的不一样）1&lt;div class=&quot;aplayer&quot; data-title=&quot;&quot; data-author=&quot;&quot; data-url=&quot;&quot; data-pic=&quot;&quot; data-lrc=&quot;&quot;&gt;&lt;/div&gt;参数解释：data-title: 歌名+ data-author: 歌手 + data-url: 音乐链接 + data-pic: 音乐封面 + data-lrc: 歌词 其他参数data-mode: 播放模式random （随机）single （单曲）circulation （列表循环）order （列表）data-autoplay: 自动播放falsetrue推荐Aplayer自定义比iframe还好，可以加载有版权问题的音乐，墙裂推荐！！！(｡･∀･)ﾉﾞ嗨！一下这部分纯属玩乐，有点酷炫，我把它设置在了头像上，可以点击试一试音乐有点鬼畜，想不有什么好的，节奏可以配上该动画参考来自：Hexo high一下小功能资源js：http://oxv1k8kvi.bkt.clouddn.com/High.js可以自行下载来看一下里面的音乐地址和css可以替换一下mp3：http://oxv1k8kvi.bkt.clouddn.com/harlem-shake.mp3css：http://oxv1k8kvi.bkt.clouddn.com/harlem-shake-style.css配置文件/themes/next/layout/_partials/head.swig，添加1&lt;script type="text/javascript" src="http://oxv1k8kvi.bkt.clouddn.com/High.js"&gt;&lt;/script&gt;然后，在你想要点击实现high一下功能的地方，添加1&lt;a title=&quot;(｡･∀･)ﾉﾞ嗨！一下&quot; style=&quot;underline: none&quot; rel=&quot;alternate&quot; class=&quot;mw-harlem_shake_slow wobble shake&quot; href=&quot;javascript:shake()&quot;&gt; XXX &lt;/a&gt;​参考链接Next文档hexo的next主题个性化配置教程Valine – 一款极简的评论系统hexo-helper-live2dHexo音乐播放完美支持https和多平台AplayerHexo high一下小功能]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（三）Hexo个性化配置进阶]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89Hexo%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E8%BF%9B%E9%98%B6%2F</url>
    <content type="text"><![CDATA[所谓的进阶，无非就是换个主题呀，添加一些小功能……看个人喜好吧！说到底，大部分都是参照网上的~~~主题安装Hexo官网提供了丰富的主题，挑选一款适合自己的，执行以下命令：basic1$ git clone [主题地址] [存放位置]例如我选择的主题是Next1$ git clone https://github.com/iissnan/hexo-theme-next themes/next完成之后，在themes目录下就会多了一个主题next的文件夹点击预览 themes进入站点配置文件 ，找到theme字段，修改为1theme: next进入主题配置文件 ，找到scheme字段，里面有next主题四种模板。12345# Schemesscheme: Muse# scheme: Mist# scheme: Pisces# scheme: Gemini首先使用命令，打开http://localhost:4000在本地预览，切换scheme刷新下页面看看效果1$ hexo s -gNext主题主题目录.├── _config.yml├── languages├── layout├── scripts└── source具体解释基础配置进入站点配置文件 ，字段Site1234567# Sitetitle: Danboard # 网站标题subtitle: 踮起脚尖，另一种高度 # 副标题description: # 描述，显示在侧边栏author: Danboard # 作者language: zh-Hans # 语言timezone: Asia/Shanghai # 时间站点logo进入主题配置文件 ，字段favicon12345favicon: small: /images/favicon-16x16-next.png medium: /images/favicon-32x32-next.png apple_touch_icon: /images/apple-touch-icon-next.png safari_pinned_tab: /images/logo.svg图标推荐：Font Awesome阿里图标下载图标，指定大小，修改名称，存放在source/images/内菜单进入主题配置文件 ，字段menu默认支持Font Awesome图标，所以||后只要跟上图标名就ok，可以自行更换123456789menu: home: / || home #about: /about/ || user #tags: /tags/ || tags #categories: /categories/ || th archives: /archives/ || archive #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbea选择自己想要的菜单项，取消注释新建一个about（关于我）页面1$ hexo new page &quot;about&quot;在hexo/source/下生成about/index.md ，编辑index.md文档新建一个tags（标签）页面1$ hexo new page &quot;tages&quot;在hexo/source/下生成tages/index.md ，修改如下1type: tages新建一个categories（分类）页面1$ hexo new page &quot;categories&quot;在hexo/source/下生成/index.md ，修改如下1type: categories新建一个腾讯公益404页面在hexo/source/下新建一个404.html的文件，内容如下：123456789101112131415161718&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv="content-type" content="text/html;charset=utf-8;"/&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /&gt; &lt;meta name="robots" content="all" /&gt; &lt;meta name="robots" content="index,follow"/&gt; &lt;link rel="stylesheet" type="text/css" href="https://qzone.qq.com/gy/404/style/404style.css"&gt;&lt;/head&gt;&lt;body&gt; &lt;script type="text/plain" src="http://www.qq.com/404/search_children.js" charset="utf-8" homePageUrl="/" homePageName="返回主页"&gt; &lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/data.js" charset="utf-8"&gt;&lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/page.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;修改菜单1commonweal: /404.html || heartbea侧边栏进入主题配置文件 ，字段sidebar12345678sidebar: position: left # 靠左 #position: right # 靠右 #display: post # 默认，在文章页面（拥有目录列表）时显示 #display: always # 在所有页面中都显示 display: hide # 在所有页面中都隐藏（可以手动展开） #display: remove # 完全移除头像添加头像进入主题配置文件 ，字段avatar12avatar: /images/avatar.png # 放在source/images/# avatar: http://example.com/avatar.png # 网上链接 url圆形头像文件\themes\next\source\css\_common\components\sidebar\sidebar-author.styl ，添加代码：12345678.site-author-image &#123; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf;&#125;头像旋转同上，添加代码：1234567891011121314151617181920212223242526272829.site-author-image &#123; /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.5s ease-out; -moz-transition: -moz-transform 1.5s ease-out; transition: transform 1.5s ease-out;&#125;img:hover &#123; /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;/* Z 轴旋转动画 */@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125;@-webkit-keyframes play &#123; // 同上&#125;@-moz-keyframes play &#123; // 同上&#125;社交链接进入主题配置文件 ，字段social12345678910111213141516social: GitHub: https://github.com/XXX || github #E-Mail: mailto:yourname@gmail.com || envelope #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skypesocial_icons: enable: true icons_only: false transition: false推荐阅读 or 友情链接进入主题配置文件 ，字段Blogrolls1234567# Blog rollslinks_icon: linklinks_title: 友情链接# links_layout: block # 块级 分行显示links_layout: inline # 内联 同行显示links: # 添加友链 SYSU: http://www.sysu.edu.cn/GitHub边角效果：文件themes/next/layout/_layout.swig ，复制代码放在&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;下，修改href为自己的github地址因为我是把github的logo放在了左上角，在手机上查看就会发现logo与菜单重和了如果想要修改边角位置，可以在文件themes/next/source/css/_custom/custom.styl 中进行更改12345678svg &#123; float: left; transform: scale(-1, 1); +mobile() &#123; float: right; transform: scale(1, 1); &#125; &#125;GitHub cornerfork me on GitHub​动画效果背景动画进入主题配置文件 ，字段canvas_nest12345# 4种，开启true，关闭falsecanvas_nest: falsethree_waves: falsecanvas_lines: truecanvas_sphere: false进度条进入主题配置文件 ，字段Progress1234# Progress bar in the top during page loading.pace: truepace_theme: pace-theme-flash文章编辑首页预览多篇文章，通过阅读全文打开&lt;!--more--&gt;截断 推荐在想要显示在首页的文字下方添加标签&lt;!--more--&gt;文章属性description123456---title: 文章标题date: 发布时间tages: 文章标签description: 摘要，显示在首页---自动显示进入主题配置文件 ，字段auto_excerpt123auto_excerpt: enable: true length: 150 # 截取长度为150个字符文章背景添加边框阴影，突出文章，打开文件themes/next/source/css/_custom/custom.styl ，该文件可以让自定义一些布局，通过浏览器的开发者工具找到对应标签，就可以进行设置了。12345678.post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; background-color: #fff; -webkit-box-shadow: 0 0 10px rgba(202, 203, 204, .5); -moz-box-shadow: 0 0 10px rgba(202, 203, 204, .5);&#125;文章分割线文章添加边框阴影后，分割线就显得有点多余，在custom.styl文件中添加1234.posts-expand .post-eof &#123; margin: 0px; background-color: rgba(255, 255, 255, 0);&#125;代码高亮进入主题配置文件 ，字段highlight123# Available value:# normal | night | night eighties | night blue | night brighthighlight_theme: normal文章打赏进入主题配置文件 ，字段reward，将支付宝or微信收款二维码图片保存到文件夹/themes/next/source/images/下12345# Reward#reward_comment: Donate comment herewechatpay: /images/wechatpay.jpgalipay: /images/alipay.jpg# bitcoin: /images/bitcoin.png文章分享Next这里提供了三种：jiathis、百度、豆瓣，效果都差不多自定义文件都在themes/next/layout/_partials/share/jiathis分享1jiathis: true百度分享1234baidushare: type: button# Available value: # 两种样式 下方 | 侧边# button | slide豆瓣（自己试了，不能用）1duoshuo_share: true文章加密这只是一种障眼法文件/themes/next/layout/_partials/head.swig ，添加如下代码12345678910&lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密码错误！'); history.back(); &#125; &#125; &#125;)();&lt;/script&gt;文章属性添加1password: # 你设定的密码​参考链接Next文档hexo的next主题个性化配置教程]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[端口占用的解决方法]]></title>
    <url>%2F%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[有时候明明打开了服务器，端口也配置好了，就是不能访问，这时候可能要考虑是否是端口被占用了，端口被占用有时候是没有提示的。解决的话，有两种方法：第一种，改端口；第二种，禁用占用该端口的软件。下面只介绍后者：打开命令管理器，快捷键win+R查找占用端口的程序对应的PID1netstat -ano|findstr [端口号]稍微接解释一下netstat，详细资料可以输入 netstat ? 或是找度娘-a 显示所有连接和侦听端口。-n 以数字形式显示地址和端口号。-o 显示拥有的与每个连接关联的进程 ID。（合并指令 -ano 就是列出所有端口的情况了）findstr 在端口使用情况中找到我们需要的端口根据PID查找端口占用的程序1tasklist|findstr [PID]tasklist：显示在本地或远程机器上当前运行的进程列表解除占用打开任务管理器，选择详细信息 ，点击程序，再点右下方的结束任务就ok了。]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>port</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（二）配置Hexo博客基础框架]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89%E9%85%8D%E7%BD%AEHexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E6%A1%86%E6%9E%B6%2F</url>
    <content type="text"><![CDATA[什么是 Hexo？Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。—来自“Hexo文档”配置环境Node.jsNode.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。什么是npm？允许用户从NPM服务器下载别人编写的第三方包到本地使用。允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。总而言之，就是要使用npm来安装Hexo​安装Hexo打开Git Bash 或是 命令管理器，执行以下命令就可以了，这样本地就有了hexo的包路径一般在C:/Users/用户名/AppData/Roaming/npm/hexo1$ npm install hexo-cli -g部署博客hexo实例创建一个文件夹，存放blog的配置文件执行hexo命令1$npm init初始完成，可以看到文件夹中多了以下文件：node_modules：依赖包（一些黑操作，官网有相应的包，也可以自己编写）scaffolds：文章模板（post默认、page、draft）source：存放文章（/_post/xx.md）themes：主题（默认landscape，有点丑，hexo官网预览，下载自己心仪的主题）_config.yml：整个博客的配置（themes中也有一个同名文件，为了区分前者称为站点配置文件 ，后者称为主题配置文件）package.json：应用程序的信息部署到github打开站点配置文件 ：_config.yml，Ctrl+F找到deploy，进行如下配置，最后保存1234deploy: type: git repo: 你的github项目地址 branch: master你的github项目地址执行下面命令123$ hexo clean$ hexo generate$ hexo serverhexo文件解释与命令，请参照Hexo文档进行本地预览打开浏览器输入：localhost:4000hexo server默认打开的是4000端口如果不能打开，有可能是4000端口被其他程序给占用了第一种方法，请看端口被占用的解决方法第二种方法，切换端口1$ hexo server -p [端口号]​上传到GitHub服务器如果预览没问题的话，就可以上传到服务器了123$ hexo clean$ hexo generate$ hexo deploy​ 发布文章1$ hexo new [layout] &lt;title&gt;layout：文件夹scaffolds中的文章模板（post默认、page、draft），也可以自定义title：文章标题最后还是一样预览再发布到github服务器就ok啦~​参考链接Hexo文档使用hexo+github搭建免费个人博客详细教程]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[好久不见]]></title>
    <url>%2F%E5%A5%BD%E4%B9%85%E4%B8%8D%E8%A7%81%2F</url>
    <content type="text"><![CDATA[Please enter the password to read. ]]></content>
      <categories>
        <category>你的名字</category>
      </categories>
      <tags>
        <tag>friend</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（一）GitHub新建一个blog项目]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89GitHub%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AAblog%E9%A1%B9%E7%9B%AE%2F</url>
    <content type="text"><![CDATA[一个博客就像自己的一片小天地搭建一个属于自己的博客，记录、整理、分享自己的所见所闻、所学所感。网上有许多搭建博客的平台，但个人只了解了github，比较方便，提供域名和服务器，由hexo提供个性模板，如果有自己的域名，还可以解析到博客链接上，更加自主个性。GitHub服务器拥有一个github账号点击注册点击新建一个项目注意：Repository name为自己github账号的名字(例如我的账号YH-Chen) + .github.io，博客地址就是该名字yh-chen.github.io如果是自定义的名称(例如Danboard)，博客的地址就变成yh-chen.github.io/Danboard。设置博客进入项目，选择settings1） 如果Repository name直接是xxx.github.io，直接拉到最后，可以看到GitHub Pages，它已经自动生成博客链接了，打开链接只显示标题xxx.github.io。如果你拥有自己的个性域名，先解析到你的博客地址，再在Custom domain里填写你的域名，就可以使用自己的域名登录自己的博客了。点击choose a theme可以选择github默认的博客主题选择之后，它会打开创建项目时保存的README.md文件，编辑的内容为markdown语言基础，以后的博客也是用markdown来编辑。直接点击commit changes就可以了。2） 如果Repository name是一般的名称，同样在设置中拉到GitHub Pages，将Source改为master branch就可以，其他的就跟上面一样了。编辑博客git工具Git(读音为/gɪt/。)是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。—百度百科点击下载github是一个面向开源软件项目的托管平台。虽然github上提供了文件编辑和上传的功能，但使用起来并不方便，所以将项目clone到本地，在本地进行编辑，再通过git（也可以使用githubDestop桌面客户端）上传到平台，这里就需要了解一下git的基础命令和配置了。clone博客项目到本地点击clone or download，复制链接打开git bash，输入命令1$ git clone https://github.com/XXX/XXX.github.io.git编辑简单的博客1234$ echo &quot;Hello World!&quot; &gt; index.html$ git add index.html$ git commit -m &quot;Init commit&quot;$ git push origin master打开链接之后，发现只有Hello World！了。没有结束！！！现在只是完成初步工作，拥有了一个博客，在本地也备份了一份文件，但博客还是空空的，什么格式都没有，下一步就是要利用Hexo弄出一个博客框架。参考链接GitHub Pages三分钟在GitHub上搭建个人博客]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
