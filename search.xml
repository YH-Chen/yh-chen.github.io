<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[C++内存管理]]></title>
    <url>%2Fc-%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[1 内存分配栈 ：存放函数参数以及局部变量,在出作用域时,将自动被释放.栈内存分配运算内置于处理器的指令集中,效率很高,但分配的内存容量有限.堆 ：new分配的内存块(包括数组,类实例等),需delete手动释放.如果未释放,在整个程序结束后,OS会帮你回收掉.自由存储区 ： malloc分配的内存块,需free手动释放.它和堆有些相似.全局/静态区 ： 全局变量(global)和静态变量(static)存于此处.(在以前的C语言中,全局变量又分为初始化的和未初始化的,C++不分)**常量存储区 ： 常量(const)存于此处,此存储区不可修改.234]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++面向对象编程]]></title>
    <url>%2FC-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%2F</url>
    <content type="text"><![CDATA[The content is unfinished ! U2FsdGVkX18rt2mKMDsF6bW4yMjUH/Y0mbl8q0Irv+k=]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++基础学习笔记]]></title>
    <url>%2Fc-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[The content is unfinished ! ]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[正方系统抢课程序——Python]]></title>
    <url>%2F%E6%AD%A3%E6%96%B9%E7%B3%BB%E7%BB%9F%E6%8A%A2%E8%AF%BE%E7%A8%8B%E5%BA%8F%E2%80%94%E2%80%94Python%2F</url>
    <content type="text"><![CDATA[注：该脚本应朋友要求写的，不是本校的教务系统。抢课脚本，其实就是模拟选课的过程。所以，首先要了解HTTP协议，我们输入教务系统为什么会有一个界面显示，这个界面就是一个html，简单来说，浏览器是一个客户端，教务系统在另一端的服务器上，输入教务系统的地址，就是向服务器发送一个请求，当中会有“三次握手”先建立连接，接着发送一个请求得到服务器响应，服务器向客户端传送一个html文件，客户端解析再显示出来。1 选课流程通过浏览器开发者工具（F12）观察选课流程的请求与响应。1.1 登录登录提交表单的地址是http://jwc.gdlgxy.com/default2.aspxRequest Headers请求头部中，很多信息都是默认的，Cookie是网站为了辨别用户身份、进行 session 跟踪而储存在用户本地终端上的数据，因为不同浏览器以及生命周期会发生变化，需要记录Cookie的值。Form Data表单中包含了重要的信息：状态码、学号、密码、验证码。cookie、状态码（VIEWSTATE）、验证码（CheckCode），在输入教务地址的时候就可以获取。以下是输入教务系统地址，得到的响应文件：1.2 选课第一步，选课类型第二步，筛选课程第三步，选择课程，提交选课过时了，没来得及保存图片在页面上的点击，都是一次请求，每一次的请求状态码VIEWSTATE可能不一致，下一步请求提交的数据中的状态码可以从上一步请求得到的响应文件中查找。如何获取上面的信息？选课类型：代码是固定的，公共选修课N121203，体育选课N121205，院系选修课N121207学生姓名编码输入姓名，再进行URL编码在登录获取的响应中查找状态码在从上一次的响应文件中查找编码问题输入中文，例如：&#39;有&#39;.encode(&#39;gbk&#39;)通过网页工具（站长工具）编码2 模拟抢课通过浏览器的开发者工具（F12），得到每一次的请求信息（Request Headers和Form Data），模拟登陆、模拟选课就是向教务系统的服务器，发送相同的请求，得到我们需要的响应，即选到心仪的课程。2.1 登录2.1.1 初始化12345# self.host = input('输入地址：')self.host = 'xxx' # 教务系统地址 / IPself.baseUrl = 'http://' + self.hostself.checkCodeUrl = self.baseUrl + '/CheckCode.aspx' # 验证码地址 self.loginUrl = self.baseUrl + '/default2.aspx' # 提交表单链接2.1.2 保存cookie123456789101112131415self.cookie = http.cookiejar.CookieJar() # 声明一个CookieJar对象实例来保存cookie，在打开网页的时候保存cookieself.handler = urllib.request.HTTPCookieProcessor(self.cookie) # 创建cookie处理器self.opener = urllib.request.build_opener(self.handler, urllib.request.HTTPHandler) # 通过handler来构建opener# 加入默认的首部行self.opener.addheaders = [ ('Accept', 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'), ('Accept-Encoding', 'gzip, deflate'), ('Accept-Language', 'zh-CN,zh;q=0.9'), ('User-Agent', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36'), ('Connection', 'keep-alive'), ('Content-Type', 'application/x-www-form-urlencoded'), ('Cache-Control', 'max-age=0'), ('Upgrade-Insecure-Requests', '1')]# 通过urlopen()来使用openerurllib.request.install_opener(self.opener)2.1.3 获取验证码1234567891011121314def getCheckCode(self): path = 'config/code.gif' # 抓取验证码图片保存到本地 code = '' while code is '': fl = open(path, 'wb') try: # 三秒防刷 fl.write(urllib.request.urlopen(self.checkCodeUrl, timeout=3).read()) except: print('the code.aspx has not response') continue finally: fl.close() code = input("验证码(回车更新)：") # must wait for fl.close()return code2.1.4 获取状态码1234567891011121314def getViewstate1(self): # print("---Viewstate1---") viewstate = None while viewstate is None: try: html = urllib.request.urlopen(self.loginUrl, timeout=3).read().decode('gbk') soup = BeautifulSoup(html, 'html.parser') # 响应得到的html文件 soup = soup.find_all(attrs=&#123;'name': '__VIEWSTATE'&#125;)[0] # 在html文件中查找状态吗 viewstate = soup.get('value') except: print('the login.aspx has not response') continue # print("viewstate1：", viewstate)return viewstate2.1.5 提交表单123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566def login(self): # 输入学号密码 xh = input('输入学号：') pw = input('输入密码：') # 输入验证码 code = self.getCheckCode() # 课程归属（默认公共选修课） lx = 'N121203' self.refUrl = self.baseUrl + '/xs_main.aspx?xh=' + xh # 登录教务系统 headers = &#123; 'Host': self.host, 'Origin': self.baseUrl, 'Referer': self.baseUrl + '/' &#125; # Request Headers postdata = urllib.parse.urlencode(&#123; '__VIEWSTATE': self.getViewstate1(), 'txtUserName': xh, 'TextBox2': pw, 'txtSecretCode': code, 'RadioButtonList1': '学生'.encode('gbk'), # use gbk 'Button1': '', 'lbLanguage': '', 'hidPdrs': '', 'hidsc': '' &#125;).encode('utf-8') # Form Data post = urllib.request.Request(self.loginUrl, postdata, headers) try: page = urllib.request.urlopen(post).read().decode('gbk') # 查找错误信息（验证码/密码出错） error = re.findall('alert.+?错误！！\'\)', page) if error: print(error[0]) self.login() else: # 登录信息正确，直接进入到选课界面 # 课程归属 n = input('选择课程类型：1.公共选修课 2.体育选课 3.院系选修课\n') if n == '1': lx = 'N121203' elif n == '2': lx = 'N121205' elif n == '3': lx = 'N121208' else: print('暂不支持该选课类型') exit(0) get = urllib.request.Request(self.refUrl, headers=headers) try: f = urllib.request.urlopen(get) page = f.read().decode('gbk') # 查找学生姓名，也可以通过输入，不过打字有可能比较慢 info = re.findall(r'xf_xsqxxxk.+?gnmkdm=', page) assert info is not None # 正则表达式，查找中文字符 words = re.findall(u"[\u4e00-\u9fa5]+", info[0]) assert words is not None info = info[0].replace(words[0], parse.quote(words[0].encode('gbk'))) # 通过获取的信息，组成选课页面的链接 self.chooseUrl = self.baseUrl + '/' + info + lx except: print('get chooseUrl failed.') except: print('login has no respone.')2.2 选课2.2.1 最后一步12345678910111213141516171819202122232425262728293031323334353637383940414243444546def submit(self): # 选课信息（定位课程） self.course = input("输入课程：") self.date = input("输入时间：") viewstate3 = self.getViewstate3() # 获取状态码 postdata = urllib.parse.urlencode(&#123; '__EVENTTARGET': '', '__EVENTARGUMENT': '', '__VIEWSTATE': viewstate3, 'ddl_kcxz': '', 'ddl_ywyl': '有'.encode('gbk'), 'ddl_kcgs': '', 'ddl_xqbs': 2, 'ddl_sksj': self.date.encode('gbk'), 'TextBox1': self.course.encode('gbk'), 'kcmcGrid:_ctl2:xk': 'on', 'kcmcGrid:_ctl2:jcnr': '|||', 'dpkcmcGrid:txtChoosePage': 1, 'dpkcmcGrid:txtPageSize': 15, 'Button1': ' 提交 '.encode('gbk'), 'dpDataGrid2:txtChoosePage': 1, 'dpDataGrid2:txtPageSize': 150 &#125;).encode('utf-8') # Form Data headers = &#123; 'Host': self.host, 'Origin': self.baseUrl, 'Referer': self.chooseUrl &#125; # Request Headers while True: req = urllib.request.Request(self.chooseUrl, postdata, headers) try: f = urllib.request.urlopen(req, timeout=3) html = f.read().decode('gbk') # 检查是否选课成功，响应文件html中出现"已选课程……xxx"的信息 pat = '&lt;legend&gt;已选课程&lt;/legend&gt;&lt;table.+?' + self.course + '.+?&lt;/table&gt;' pattern = re.compile(pat, re.S) length = len(re.findall(pattern, html)) if (length == 1): # 如果选课成功，则退出，否则继续抢课 print('选课成功') break except: print('submit has no response') continue2.2.2 状态码最后一步选课的状态码是从上一次筛选条件的请求得到的响应文件中获取的12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061def getViewstate3(self): # print("---viewstate3---") headers = &#123; 'Host': self.host, 'Origin': self.baseUrl, 'Referer': self.chooseUrl, &#125; viewstate2 = self.getViewstate2() # 状态码2是从选课类型请求得到的响应中获取 postdata = urllib.parse.urlencode(&#123; '__EVENTTARGET': '', '__EVENTARGUMENT': '', '__VIEWSTATE': viewstate2, 'ddl_kcxz': '', 'ddl_ywyl': '有'.encode('gbk'), 'ddl_kcgs': '', 'ddl_xqbs': 2, 'ddl_sksj': self.date.encode('gbk'), 'TextBox1': self.course.encode('gbk'), 'Button2': '确定'.encode('gbk'), 'kcmcGrid:_ctl2:jcnr': '|||', 'kcmcGrid:_ctl3:jcnr': '|||', 'kcmcGrid:_ctl4:jcnr': '|||', 'kcmcGrid:_ctl5:jcnr': '|||', 'kcmcGrid:_ctl6:jcnr': '|||', 'kcmcGrid:_ctl7:jcnr': '|||', 'kcmcGrid:_ctl8:jcnr': '|||', 'kcmcGrid:_ctl9:jcnr': '|||', 'kcmcGrid:_ctl10:jcnr': '|||', 'kcmcGrid:_ctl11:jcnr': '|||', 'kcmcGrid:_ctl12:jcnr': '|||', 'kcmcGrid:_ctl13:jcnr': '|||', 'kcmcGrid:_ctl14:jcnr': '|||', 'kcmcGrid:_ctl15:jcnr': '|||', 'kcmcGrid:_ctl16:jcnr': '|||', 'dpkcmcGrid:txtChoosePage': 1, 'dpkcmcGrid:txtPageSize': 15, 'dpDataGrid2:txtChoosePage': 1, 'dpDataGrid2:txtPageSize': 150 &#125;).encode('utf-8') # Form Data req = urllib.request.Request( url=self.chooseUrl, data=postdata, headers=headers) # Request Headers viewstate3 = None while viewstate3 is None: try: f = urllib.request.urlopen(req, timeout=3) html = f.read().decode('gbk') soup = BeautifulSoup(html, 'html.parser') try: soup = soup.find_all(attrs=&#123;'name': '__VIEWSTATE'&#125;)[0] viewstate3 = soup.get('value') except: print('get response but cant get VIEWSTATE') continue except: print('get available course has no response') continue return viewstate32.3 选课结果参考链接C++网络编程之使用Winsock2实现教务系统自动抢课程序python爬虫之urllib2登录并抓取HTML页面]]></content>
      <categories>
        <category>脚本</category>
      </categories>
      <tags>
        <tag>tips</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据库基础]]></title>
    <url>%2F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[The content is unfinished ! ]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[隐藏未完成编辑的文章]]></title>
    <url>%2F%E9%9A%90%E8%97%8F%E6%9C%AA%E5%AE%8C%E6%88%90%E7%BC%96%E8%BE%91%E7%9A%84%E6%96%87%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[一般都是博客编辑完成，再发布上去，但有时候可能是同时编辑多篇文章，有些编辑了一半，提交上去，只能看到半成品，所以想了个办法把半成品隐藏了。这个修改是基于hexo-blog-encrypt插件的，即将博文加密，只显示“The content is unfinished！”。1 修改模板文件/scaffolds/post.md，添加1done: false这样每次创建一遍新的博文，front-matter都会添加上面语句，标志未完成编辑，如果编辑完成，只需把false改为true，再发布上去。2 修改插件文件/node_modules/hexo-blog-encrypt/lib/中添加一个ccs文件display.css，拷贝style.css，再添加下面语句123input#pass &#123; display: none; // 隐藏输入&#125;文件/node_modules/hexo-blog-encrypt/index.js，修改如下：1234567891011121314151617181920212223242526272829var flag = false; // 标志hexo.extend.filter.register("after_post_render", function (data) &#123; // 添加 if ('done' in data &amp;&amp; !data.done) &#123; data.password = "123"; //加密密码 data.abstract = '&lt;img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-23/56493546.jpg"&gt;'; // 前文显示 data.message = "The content is unfinished !"; if (!('template' in data &amp;&amp; data.template)) &#123; data.template = hexo.config.encrypt.default_template; &#125; data.template = '&lt;link href="' + hexo.config.root + 'display.css" rel="stylesheet" type="text/css"&gt;' + data.template; flag = true; &#125;&#125;hexo.on('exit', function() &#123; // 未完成时，加载display.css；完成时，正常加载style.css if (flag) &#123; var cssFile = pathFn.join(pathFn.join(pathFn.join(pathFn.join(hexo.base_dir, 'node_modules'), 'hexo-blog-encrypt'), 'lib'), 'display.css'); fs.readFile(cssFile).then(function(content) &#123; fs.copyFile(cssFile, pathFn.join(hexo.public_dir, 'display.css')); &#125;); &#125; else &#123; var cssFile = pathFn.join(pathFn.join(pathFn.join(pathFn.join(hexo.base_dir, 'node_modules'), 'hexo-blog-encrypt'), 'lib'), 'style.css'); fs.readFile(cssFile).then(function(content) &#123; fs.copyFile(cssFile, pathFn.join(hexo.public_dir, 'style.css')); &#125;); &#125;&#125;);]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[胡言乱语]]></title>
    <url>%2F%E8%83%A1%E8%A8%80%E4%B9%B1%E8%AF%AD%2F</url>
    <content type="text"><![CDATA[Please enter the password to read. ]]></content>
  </entry>
  <entry>
    <title><![CDATA[HTTP协议]]></title>
    <url>%2FHTTP%E5%8D%8F%E8%AE%AE%2F</url>
    <content type="text"><![CDATA[1 概述HTTP协议（HyperText Transfer Protocol，超文本传输协议）是用于从WWW服务器传输超文本到本地浏览器的传输协议。它可以使浏览器更加高效，使网络传输减少。它不仅保证计算机正确快速地传输超文本文档，还确定传输文档中的哪一部分，以及哪部分内容首先显示(如文本先于图形)等。特点：简单快速客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。灵活HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。无状态服务器向客户发送被请求的文件，而不存储任何关于该客户的状态信息。假如某个特定客户在短短几秒内两次请求同一个对象，服务器并不会2 URLHTTP使用统一资源标识符（Uniform Resource Identifiers, URI）来传输数据和建立连接。URL是一种特殊类型的URI，包含了用于查找某个资源的足够的信息。完全格式基本格式URI、URL和URN的区别URI ：Uniform Resource Identifier，统一资源标识符，URL、URN是URI的子集；URL：Uniform Resource Locator，统一资源定位符；URN：Uniform Resource Name，统一资源名称。Web上地址的基本形式是URI，它代表统一资源标识符。有两种形式：URL：目前URI的最普遍形式。URN：URL的一种更新形式，不依赖于位置，并且有可能减少失效连接的个数。但是其流行还需假以时日，因为它需要更精密软件的支持。URI有绝对和相对之分：绝对的URI，如http://www.danboard.me/HTTP协议/img.png相对的URI，如HTTP协议/img.png3 非持续/持续连接非持续连接一个WEB站点每天可能要接收到上百万的用户请求，为了提高系统的效率，HTTP 1.0规定浏览器与服务器只保持短暂的连接，浏览器的每次请求都需要与服务器建立一个TCP连接，服务器完成请求处理后立即断开TCP连接，服务器不跟踪每个客户也不记录过去的请求。访问一个包含有许多图像的网页文件的整个过程包含了多次请求和响应，每次请求和响应都需要建立一个单独的连接，每次连接只是传输一个文档和图像，上一次和下一次请求完全分离。即使图像文件都很小，但是客户端和服务器端每次建立和关闭连接却是一个相对比较费时的过程，并且会严重影响客户机和服务器的性能。问题 :第一，对于每个连接，在客户和服务器中都要分配TCP的缓冲区和保持TCP变量，造成严重负担；第二，每一个传输对象都要经受两倍RTT的交付时延，严重影响效率。持续连接HTTP 1.1支持持久连接，在一个TCP连接上可以传送多个HTTP请求和响应，减少了建立和关闭连接的消耗和延迟。一个包含有许多图像的网页文件的多个请求和应答可以在一个连接中传输，但每个单独的网页文件的请求和应答仍然需要使用各自的连接。HTTP 1.1还允许客户端不用等待上一次请求结果返回，就可以发出下一次请求，但服务器端必须按照接收到客户端请求的先后顺序 依次回送响应结果，以保证客户端能够区分出每次请求的响应内容，这样也显著地减少了整个下载过程所需要的时间。可以一个接一个地发出对对象的请求，而不必等待未决请求的响应（流水线）。一般，如果一条连接经过一定的时间间隔仍未被使用，HTTP服务器就关闭该连接。4 报文格式4.1 请求Request组成：请求行、请求头部（首部行）、空行、请求数据请求方法GET：请求获取RequestURL所标识的资源，最常用的方法POST：在RequestURL所标识的资源后附加新的数据，可以导致新资源的产生和已有资源的更新HEAD：请求获取RequestURL所标识的资源的响应消息报头，没有响应体PUT：请求服务器存储一个资源，并用RequestURL作为其标识DELETE：请求服务器删除RequestURL所标识的资源GET与POST比较例子12345GET /somedir/page.html HTPP/1.1Host: www.someschool.eduConnection: Keep-aliveUser-agent: Mozilla/5.0Accept-language: fr1234567POST /somedir/page.html HTPP/1.1Host: www.someschool.eduConnection: Keep-aliveUser-agent: Mozilla/5.0Accept-language: frusername=STUDENT&amp;password=1234564.2 响应Response组成：状态行、消息报头、空行、响应正文例子123HTTP/1.1 200 OKDate: Fri, 22 May 2009 06:07:21 GMTContent-Type: text/html; charset=UTF-8状态码1xx：指示信息，表示请求已接收，继续处理2xx：成功，表示请求已被成功接收、理解、接受3xx：重定向，要完成请求必须进行更进一步的操作4xx：客户端错误，请求有语法错误或请求无法实现5xx：服务器端错误，服务器未能实现合法的请求5 工作原理5.1 客户端连接到Web服务器一个HTTP客户端，通常是浏览器，与Web服务器的HTTP端口（默认为80）建立一个TCP套接字连接。例如，[http://www.oakcms.cn](http://www.oakcms.cn./5.2 发送HTTP请求通过TCP套接字，客户端向Web服务器发送一个文本的请求报文，一个请求报文由请求行、请求头部、空行和请求数据4部分组成。5.3 服务器接受请求并返回HTTP响应Web服务器解析请求，定位请求资源。服务器将资源复本写到TCP套接字，由客户端读取。一个响应由状态行、响应头部、空行和响应数据4部分组成。5.4 释放连接TCP连接若connection 模式为close，则服务器主动关闭TCP连接，客户端被动关闭连接，释放TCP连接；若connection 模式为keep-alive，则该连接会保持一段时间，在该时间内可以继续接收请求。5.5 客户端浏览器解析HTML内容客户端浏览器首先解析状态行，查看表明请求是否成功的状态代码。然后解析每一个响应头，响应头告知以下为若干字节的HTML文档和文档的字符集。客户端浏览器读取响应数据HTML，根据HTML的语法对其进行格式化，并在浏览器窗口中显示。参考链接HTTP 1.1与HTTP 1.0的比较关于HTTP协议，一篇就够了]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>http</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TCP/UDP]]></title>
    <url>%2FTCP-UDP%2F</url>
    <content type="text"><![CDATA[TCP （Transmission Control Protocol，传输控制协议）与 UDP （User Data Protocol，用户数据包协议）是Internet运输层在应用程序端点之间传送应用层报文的两种协议。运输层协议为运行在不同主机上的应用进程之间提供了逻辑通信。TCP协议1 全双工如果一台主机上的进程A与另一台主机上的进程B存在一条TCP连接，那么应用层数据就可以从进程B流向进程A的同时，也从进程A流向进程B。2 点对点单个发送方与单个接收方之间的连接。3 面向连接三次握手（建立连接）客户端发送：SYN = 1, SEQ = X, 端口号服务器回复：SYN = 1, ACK = X + 1, SEQ = Y客户端发送：ACK = Y + 1, SEQ = X + 1确认应答信号ACK = 收到的SEQ + 1。连接建立中，同步信号SYN始终为1。连接建立后，同步信号SYN = 0。为什么要三次握手？三次握手是保证双方互相明确对方能收发信息的最低值。三次握手 ：“喂，你听得到吗？”“我听得到呀，你听得到我吗？”“我能听到你，今天balabala……”两次握手：“喂，你听得到吗？”“我听得到呀”“喂喂，你听得到吗？”“草，我听得到呀！！！！”“你TM能不能听到我讲话啊！！喂！”“……”四次握手：“喂，你听得到吗？”“我听得到呀，你听得到我吗？”“我能听到你，你能听到我吗？”“……不想跟傻逼说话”——来自知乎​四次挥手（断开连接）A向B提出停止连接请求，FIN = 1B收到，ACK = 1B向A提出停止连接请求，FIN = 1A收到，ACK = 1为什么四次握手？四次挥手：“喂，我不说了。”“我知道了。等下，上一句还没说完。Balabala…..””好了，说完了，我也不说了。””我知道了。”4 报文段结构源端口和目的端口 ：各占 2 字节。端口是传输层与应用层的服务接口，传输层的复用和分用功能都要通过端口才能实现序号 / 确认号：占 4 字节。这些字段被TCP发送方和接收方用来实现可靠数据传输服务。数据偏移（首部长度）：占 4 位。它指出 TCP 报文段的数据起始处距离 TCP 报文段的起始处有多远。“数据偏移”的单位是 32 位(以 4 字节为计算单位)保留：占 6 位。保留为今后使用，但目前应置为 0标志字段 URG ：当 URG=1 时,表明紧急指针字段有效.它告诉系统此报文段中有紧急数据,应尽快传送(相当于高优先级的数据)ACK ：只有当 ACK=1 时确认号字段才有效；当 ACK=0 时,确认号无效PSH ：接收 TCP 收到 PSH = 1 的报文段，就尽快地交付接收应用进程，而不再等到整个缓存都填满了后再向上交付RST ：当 RST=1 时，表明 TCP 连接中出现严重差错（如由于主机崩溃或其他原因），必须释放连接，然后再重新建立运输连接SYN ：同步 SYN = 1 表示这是一个连接请求或连接接受报文FIN ：用来释放一个连接，FIN=1 表明此报文段的发送端的数据已发送完毕，并要求释放运输连接窗口 ：占2字节。用于流量控制。检验和 ：占 2 字节。检验和字段检验的范围包括首部和数据这两部分，在计算检验和时，要在 TCP 报文段的前面加上 12 字节的伪首部紧急指针 ：占 16 位。指出在本报文段中紧急数据共有多少个字节（紧急数据放在本报文段数据的最前面）选项：长度可变。TCP 最初只规定了一种选项，即最大报文段长度 MSS。MSS 告诉对方 TCP：“我的缓存所能接收的报文段的数据字段的最大长度是 MSS 个字节.” [MSS(Maximum Segment Size)是 TCP 报文段中的数据字段的最大长度.数据字段加上 TCP 首部才等于整个的 TCP 报文段]填充 ：这是为了使整个首部长度是 4 字节的整数倍5 可靠数据传输确认丢失和确认迟到超时重传TCP 每发送一个报文段，就对这个报文段设置一次计时器。只要计时器设置的重传时间到但还没有收到确认，就要重传这一报文段。6 拥塞控制拥塞窗口含义:拥塞窗口的大小取决于网络的拥塞程度，并且动态地在变化。发送方让自己的发送窗口等于拥塞窗口，如再考虑到接收方的接收能力，则发送窗口还可能小于拥塞窗口。发送方控制拥塞窗口的原则:只要网络没有出现拥塞，拥塞窗口就再增大一些，以便把更多的分组发送出去.但只要网络出现拥塞，拥塞窗口就减小一些，以减少注入到网络中的分组数。慢启动在主机刚刚开始发送报文段时可先设置拥塞窗口 cwnd = 1，即设置为一个最大报文段 MSS 的数值在每收到一个对新的报文段的确认后,将拥塞窗口加 1，即增加一个 MSS 的数值使用慢开始算法后，每经过一个传输轮次(往返时间 RTT)，拥塞窗口 cwnd 就加倍拥塞避免拥塞避免状态：cwnd的值大约是上次遇到拥塞是的值的一半线性增长，每个RTT只将cwnd的值增加一个MSS快速恢复Reno：当出现丢包事件时，cwmd值为原来的一半，然后线性增长。Tahoe：当出现丢包事件时，ssthresh的值设置为cwmd值的一半，cwnd的值被设置为1个MSS，然后继续慢启动、拥塞避免。拥塞窗口的大小取决于网络的拥塞程度,并且动态地在变化.发送方让自己的发送窗口等于拥塞窗口.如再考虑到接收方的接收能力,则发送窗口还可能小于拥塞窗口发送方控制拥塞窗口的原则:只要网络没有出现拥塞,拥塞窗口就再增大一些,以便把更多的分组发送出去.但只要网络出现拥塞,拥塞窗口就减小一些,以减少注入到网络中的分组数7 优缺点优点可靠、稳定缺点效率低、已被攻击（DOS）UDP协议1 面向无连接2 优缺点优点传输速率快（适合音、视频传输，容忍丢失）缺点不可靠、不稳定（没有拥塞控制）​区别TCPUDP面向有连接的通信服务面向无连接的通信服务四元组（源IP+端口/目的IP+端口）二元组（目的IP+端口）提供可靠的通信传输不可靠，会丢包保证数据顺序可能乱序数据无边界数据有边界传输速度慢传输速度快面向字节流面向报文一对一可以一对一，或一对多报头至少20字节报头8字节有流量控制，拥塞控制没有参考链接TCP与UDPTCP详解]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>tcp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[右键菜单的新建项中添加办公程序]]></title>
    <url>%2F%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E7%9A%84%E6%96%B0%E5%BB%BA%E9%A1%B9%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%8A%9E%E5%85%AC%E7%A8%8B%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[平时打开办公软件的习惯时，直接右键 &rarr; 新建 &rarr; Word/Excel/PowerPoint等等，桌面上没有办公软件的图标，显得简洁一点。由于，平时一些实验报告要用到markdown来写，所以想到像word这些办公软件一样直接在某个目录下新建，修改名称就可以了，编写的时候直接ctrl+s保存。习惯因人而异，不喜勿喷！！！打开注册表快捷键Win+R，输入regedit找到文件后缀名HKEY_CLASSES_ROOT&rarr; .md右键 &rarr; 新建 &rarr; 项，命名为ShellNew进入shellNew，右键 &rarr; 新建 &rarr; 字符串值，命名为NullFile，即每次打开markdown，都会创建一个空文档。使注册表生效第一种：重启第二种：任务管理器，找到explorer.exe，结束该进程，再启动（运行新任务+explorer.exe）​效果]]></content>
      <categories>
        <category>小技巧</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>tips</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数组解析]]></title>
    <url>%2F%E6%95%B0%E7%BB%84%E8%A7%A3%E6%9E%90%2F</url>
    <content type="text"><![CDATA[1 数组1.1 定义数组是一组具有相同类型的、连续的内存区域。要引用数组中的一个特定区域或元素，需要通过指定数组名和该元素在数组中的位置编号。1.2 声明12int a[5]; // 大小为5 int b[]; // Error1.3 初始化1234int a[] = &#123;1, 2, 3, 4, 5&#125;; // 初始化，大小为5int a[5] = &#123;1, 2, 3&#125;; // 初始化，1，2，3，0，0int a[5] = &#123;1, 2, 3, 4, 5, 6&#125;; // Error, 数组越界int b[] = a; // Error, 不能直接复制注意：字符串数组，数组大小要比字符数大1，因为字符串数组后面还有一个默认的空字符’\0’1char c[6] = "Hello";2 指针2.1 定义在C++中，数组和指针是密切相关的，两者几乎可以交换使用。可以认为一个数组名就是一个常量指针。2.2 使用12345int b[5];int *bptr;// 数组名不带下标，是一个指向数组第一个元素的指针bptr = b; // bptr = &amp; b[0];// * (bptr+3) 等价于 b[3]2.3 数组指针指向数组的指针。123456int a[2][2] = &#123;1, 2, 3, 4&#125;; // 二维数组int (*p)[2] = a;// a 是一个数组名，指向一维数组的指针，值 &amp;a[0][0]， sizeof(a) = 16// a[0] 是一维数组名，指向整型的指针，值 &amp;a[0][0]// a[1] 是一维数组名，指向整型的指针，值 &amp;a[1][0]// p 是一个数组指针变量，值 &amp;a[0][0], sizeof(p) = 42.4 指针数组存放指针的数组。常见于构成基于指针的字符串的数组。123char *p[2] = &#123;"Hello", "World"&#125;;// p，指向char数组的指针，值 &amp;p[0]，sizeof(p) = 16// p[0] 是一个char数组，值"Hello"3 vector3.1 定义一个封装了动态大小数组的顺序容器（Sequence Container），能够存放任意类型的动态数组。效率：数组&gt;vector，原因是vector的插入删除要消耗更多时间。3.2 初始化12345vector&lt;int&gt; a(3); // 大小为3vector&lt;int&gt; b(3, 0); // 大小为3，初始化为0vector&lt;int&gt; c = &#123;1, 2, 3&#125;; // 大小为3，初始化为1，2，3，等号可以省略vector&lt;int&gt; d = c; // 直接复制vector&lt;int&gt; e(c); // 直接复制3.3 函数3.3.1 构造函数vector():创建一个空vectorvector(int n):创建一个vector，大小为nvector(int n, const t&amp; t):创建一个vector，大小为n，且值均为tvector(const vector&amp; a):复制构造函数vector(a.begin(), a.end()):复制[begin,end)区间内数组a的元素到vector中3.3.2 插入函数a.push_back(const T&amp; x):尾部插入元素a.insert(iterator it, const T&amp; x):指定位置插入3.3.3 删除函数a.erase(iterator it):删除向量中迭代器指向元素a.erase(iterator first, iterator last):删除向量中[first,last)中元素a.pop_back():删除向量中最后一个元素a.clear():清空向量中所有元素3.3.4 其他函数bool empty() const:判断向量是否为空，若为空，则向量中无元素int size() const:返回向量中元素的个数4 array4.1 定义c++11中给数组提供的更加安全的访问方式，是一种容器类型，支持一系列容器操作。效率跟数组相近。4.2 初始化123array&lt;类型, 大小&gt; a; array&lt;int, 3&gt; a = &#123;1, 2, 3&#125;;array&lt;int, 3&gt; b = a; // 大小一致5 总结数组vectorarray备注内存栈（静态）堆（动态）栈（静态）效率高低高索引a[i]a[i] / a.at(i)a[i]i从0开始a.at(i)检查是否越界NYYarray&lt;int, 2&gt;a= { 1,2, };cout &lt;&lt; a.at(-1) &lt;&lt; endl; // Error复制NY，类型相同Y，类型和大小相同大小sizeof(a)/size(类型)，固定a.size()，可变a.size()，固定includeN&lt;vector&gt;&lt;array&gt;初始化赋值YYY插入NYN删除NYN访问数组范围外的数据YYY例如a[-40]或者a[100]]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[排序算法总结和归纳]]></title>
    <url>%2F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E5%92%8C%E5%BD%92%E7%BA%B3%2F</url>
    <content type="text"><![CDATA[非线性时间比较类排序：通过比较来决定元素间的相对次序，由于其时间复杂度不能突破O(nlogn)，因此称为非线性时间比较类排序。线性时间非比较类排序：不通过比较来决定元素间的相对次序，它可以突破基于比较排序的时间下界，以线性时间运行，因此称为线性时间非比较类排序。1 冒泡排序交换排序，最简单的一种排序算法。从第一个元素开始，与之后的元素逐一比较，如果后者小于前者，则交换位置，从而找到最小的元素。12345678910void bubble(int* a, int n)&#123; for(int i=0; i&lt;n; i++) &#123; for (int j=0; j&lt;n-1-i; j++) &#123; if(a[j] &gt; a[j+1]) &#123; swap(a[i], a[j]); &#125; &#125; &#125;&#125;2 快速排序交换排序，是冒泡排序的一种改进算法。通过一次排序将待排数据分割成两部分，前一部分数据均比后一部分数据小，则可分别对这两部分的数据继续排序，从而达到整体有序。123456789101112131415161718192021222324int Partition(int* a, int low, int high)&#123; int i = low, j = high; while(i &lt; j) &#123; while(i &lt; j &amp;&amp; a[i] &lt;= a[j]) j --; // 右侧扫描 if(i &lt; j) &#123; swap(a[i], a[j]); i ++; &#125; while(i &lt; j &amp;&amp; a[i] &lt;= a[j]) i ++; // 左侧扫描 if(i &lt; j) &#123; swap(a[i], a[j]); j --; &#125; &#125; return i;&#125;void Quick(int* a, int low, int high)&#123; if(low &lt; high) &#123; int pivot = Partition(a, low, high); // 一次划分 Quick(a, low, pivot-1); // 前一个子序列排序 Quick(a, pivot+1, high); // 后一个子序列排序 &#125;&#125;3 插入排序简单排序算法。默认第一个元素已经排序好，将下一个元素按大小插入已排好序的列表，重复这样的操作，知道最后一个元素插入。12345678910111213void Insert(int* a, int n)&#123; for(int i=1; i&lt;n-1; i++) &#123; int tmp = a[i]; // 记录待排记录 int j = i - 1; // 与前面排好的序列记录依次比较 while(j &gt;= 0 &amp;&amp; a[j] &gt; tmp) &#123; a[j+1] = a[j]; j --; &#125; a[j+1] = tmp; &#125;&#125;4 希尔排序插入排序的改进，也叫“缩小增量排序”。先将整个待排序列分割成若干个子序列，分别进行插入排序，逐渐缩小划分的间隔，直到最后，间隔为1，对全体进行一次插入排序，得到一个有序序列。1234567891011121314void Shell(int* a, int n)&#123; for(int d=n/2; d&gt;=1; d=d/2) &#123; // 初始间隔为序列大小的一半 for(int i=d; i&lt;n; i++) &#123; int tmp = a[i]; // 记录待排记录 int j = i - d; while(j&gt;=0 &amp;&amp; a[j]&gt;tmp) &#123; // 进行插入排序 a[j+d] = a[j]; j -= d; &#125; a[j+d] = tmp; &#125; &#125;&#125;5 选择排序简单的排序算法。每次在未排序序列中找到最小元素，存放到已排序列。12345678910void Select(int* a, int n)&#123; for(int i=0; i&lt;n-1; i++) &#123; for (int j=i+1; j&lt;n; j++) &#123; if(a[i] &gt; a[j]) &#123; swap(a[i], a[j]); &#125; &#125; &#125;&#125;6 堆排序堆排序利用了大根堆（或小根堆）堆顶记录的关键字最大（或最小）这一特征，使得在当前无序区中选取最大（或最小）关键字的记录变得简单。123456789101112131415161718192021222324252627void Adjust(int* a, int p, int n) //堆调整&#123; for(int i=2*p+1; i&lt;n; i=i*2+1)&#123; //如果右边值大于左边值，指向右边 if(i+1 &lt; n &amp;&amp; a[i] &lt; a[i+1]) i ++; //如果子节点大于父节点，将子节点值赋给父节点,并以新的子节点作为父节点 if(a[p] &gt;= a[i]) break; else &#123; swap(a[p], a[i]); p = i; &#125; &#125;&#125; void Heap(int* a, int n)&#123; // 构建大顶堆 for(int i=n/2-1; i&gt;=0; i--) &#123; Adjust(a, i, n); &#125; // 交换堆顶与末尾元素，重新调整堆 for(int i=n-1; i&gt;0; i--) &#123; swap(a[0], a[i]); Adjust(a, 0, i); &#125;&#125;7 归并排序分治法，将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为2-路归并。1234567891011121314151617181920212223242526272829void Merge(int sourceArr[], int tempArr[], int startIndex, int midIndex, int endIndex)&#123; int i = startIndex, j = midIndex+1, k = startIndex; while(i!=midIndex+1 &amp;&amp; j!=endIndex+1) &#123; if(sourceArr[i] &gt; sourceArr[j]) tempArr[k++] = sourceArr[j++]; else tempArr[k++] = sourceArr[i++]; &#125; while(i != midIndex+1) tempArr[k++] = sourceArr[i++]; while(j != endIndex+1) tempArr[k++] = sourceArr[j++]; for(i=startIndex; i&lt;=endIndex; i++) sourceArr[i] = tempArr[i];&#125; void MergeSort(int sourceArr[], int tempArr[], int startIndex, int endIndex)&#123; int midIndex; if(startIndex &lt; endIndex) &#123; midIndex = (startIndex + endIndex) / 2; // 递归，二路归并 MergeSort(sourceArr, tempArr, startIndex, midIndex); MergeSort(sourceArr, tempArr, midIndex+1, endIndex); // 内部排序 Merge(sourceArr, tempArr, startIndex, midIndex, endIndex); &#125;&#125;8 计数排序计数排序是一个非基于比较的排序算法，它的优势在于在对一定范围内的整数排序时，它的复杂度为Ο(n+k)（其中k是整数的范围），快于任何比较排序算法。当然这是一种牺牲空间换取时间的做法，而且当O(k)&gt;O(nlogn)的时候其效率反而不如基于比较的排序。思路：根据元素大小作为另一个数组的序号，再统计该元素的个数，最后按序输出。1234567891011121314# define MAX 1000int bucket[MAX];void CountSort(int arr[], int n) &#123; for (int i=0; i&lt;n; i++) &#123; bucket[arr[i]]++; &#125; int k = 0; for (int j=0; j&lt;MAX; j++) &#123; while(bucket[j] &gt; 0) &#123; arr[k++] = j; bucket[j] --; &#125; &#125;&#125;9 桶排序计数排序的改进。将数据分到有限数量的桶里，每个桶再分别排序。最好情况下使用线性时间O(n)，桶排序的时间复杂度，取决于对各个桶之间数据进行排序的时间复杂度，因为其它部分的时间复杂度都为O(n)。很显然，桶划分的越小，各个桶之间的数据越少，排序所用的时间也会越少。但相应的空间消耗就会增大。12345678910111213141516171819202122232425#define DEFAULT_BUCKET_SIZE 5void BucketSort(int arr[], int n, int bucketSize) &#123; if(n == 0) return; int minValue = arr[0], maxValue = arr[0]; for(int i = 1; i &lt; n; i++) &#123; if(arr[i] &gt; maxValue) maxValue = arr[i]; if(arr[i] &lt; minValue) minValue = arr[i]; &#125; bucketSize = bucketSize || DEFAULT_BUCKET_SIZE; // 默认每个桶的容量为5 int bucketNum = (maxValue-minValue)/bucketSize + 1;// 桶的数量 vector&lt; vector&lt;int&gt; &gt; buckets(bucketNum); for(int i=0; i&lt;n; i++) buckets[(arr[i]-minValue)/bucketSize].push_back(arr[i]); int sortIndex = 0; for(int i=0; i&lt;buckets.size(); i++) &#123; insertSort(buckets[i]); // 插入排序 for(int j=0; j&lt;buckets[i].size(); j++) arr[sortIndex++] = buckets[i][j]; &#125;&#125;10 基数排序基数排序是按照低位先排序，然后收集；再按照高位排序，然后再收集；依次类推，直到最高位。1234567891011121314151617181920212223242526272829// LSDvoid RedixSort(int arr[], int n, int maxDigit) &#123; int maxValue = arr[0], maxDigit = 0; for (int i=1; i&lt;n; i++) &#123; if (arr[i] &gt; maxValue) maxValue = arr[i]; &#125; while (maxValue) &#123; maxValue /= 10; maxDigit ++; &#125; int mod = 10; int dev = 1; vector&lt; vector&lt;int&gt; &gt; buckets(10); for(int i=0; i&lt;maxDigit; i++, dev*=10, mod*=10) &#123; for(int j=0; j&lt;n; j++) &#123; int bid = arr[j] % mod / dev;//取出对应数位作为桶编号 buckets[bid].push_back(arr[j]); &#125; int sortIndex = 0; for(int i=0; i&lt;buckets.size(); i++) &#123; for(int j=0; j&lt;buckets[i].size(); j++) arr[sortIndex++] = buckets[i][j]; buckets[i].clear(); &#125; &#125;&#125;11 Sortsort并不是简单的快速排序，它对普通的快速排序进行了优化，此外，它还结合了插入排序和推排序。系统会根据你的数据形式和数据量自动选择合适的排序方法，这并不是说它每次排序只选择一种方法，它是在一次完整排序中不同的情况选用不同方法，比如给一个数据量较大的数组排序，开始采用快速排序，分段递归，分段之后每一段的数据量达到一个较小值后它就不继续往下递归，而是选择插入排序，如果递归的太深，他会选择推排序。123456789#include &lt;algorithm&gt; // 头文件sort(a, a+n, cmp);// 自定义排序方式void cmp(int a, int b)&#123; return a &lt; b;&#125;总结稳定：如果a原本在b前面，而a=b，排序之后a仍然在b的前面。时间复杂度：对排序数据的总的操作次数。反映当n变化时，操作次数呈现什么规律。空间复杂度：是指算法在计算机内执行时所需存储空间的度量，它也是数据规模n的函数。参考链接十大经典排序算法sort函数详解]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>sort</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文章加密TEST1]]></title>
    <url>%2F%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86TEST1%2F</url>
    <content type="text"><![CDATA[这只是一种障眼法文件/themes/next/layout/_partials/head.swig ，添加如下代码12345678910&lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密码错误！'); history.back(); &#125; &#125; &#125;)();&lt;/script&gt;文章属性添加1password: # 你设定的密码​]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>encrypt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文章加密TEST2]]></title>
    <url>%2F%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86TEST2%2F</url>
    <content type="text"><![CDATA[Please enter the password to read. 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]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>encrypt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（五）Hexo博客优化和补充]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%94%EF%BC%89Hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E5%92%8C%E8%A1%A5%E5%85%85%2F</url>
    <content type="text"><![CDATA[SEOSEO（Search Engine Optimization），汉译为搜索引擎优化。搜索引擎优化是一种利用搜索引擎的搜索规则来提高目前网站在有关搜索引擎内的自然排名的方式。——百度百科1 站点地图站点地图是一个网站所有链接的容器。很多网站的连接层次比较深，爬虫很难抓取到，站点地图可以方便爬虫抓取网站页面，通过抓取网站页面，清晰了解网站的架构，网站地图一般存放在根目录下并命名sitemap，为爬虫指路，增加网站重要内容页面的收录。——百度百科安装插件12$ npm install hexo-generator-sitemap --save $ npm install hexo-generator-baidu-sitemap --save站点配置文件1234567# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://www.danboard.meroot: /permalink: :title/ # 链接后缀permalink_defaults: # 默认值 lang: enpermalink默认是:year/:month/:day/:title/ ，这样我们的文章生成的连接就会是sitname/year/month/day/title ，网站的连接层次比较深，很难被爬虫抓取，所以可以减少连接的层次验证执行修改后，可以在public目录中看到生成的两个文件sitemap.xml和baidusitemap.xml在浏览器中输入相应地址，如http://www.danboard.me/sitemap.xml来检查是否生成成功​2 谷歌收录效率非常高，但需要翻墙，也就是说你的博客只能在境外才能被搜索到首先检查站点是否被收录尝试使用Google Search Console登录/注册添加站点验证站点提交站点地图抓取 &gt; 站点地图验证收录​3 百度收录同样是，登录/注册 $\rightarrow$ 添加站点 $\rightarrow$ 验证站点 $\rightarrow$ 提交站点地图提交链接效率：主动推送 &gt; 自动推送 &gt; sitemap主动推送安装插件1$ npm install hexo-baidu-url-submit --save站点配置文件，添加12345baidu_url_submit: count: 1 # 提交最新的一个链接 host: www.danboard.me # 你的博客站点 token: your_token # 你的密钥 path: baidu_urls.txt # 新链接存放文档your_token:提交更新发布，使用命令hexo deploy时提交123456deploy:- type: git repo: - 你的github项目地址 branch: master # old- type: baidu_url_submitter # new注意：-属于一部分，注意格式对齐，否则会报错自动推送主题配置文件 ，字段baidu_push12# Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEObaidu_push: ture脚本位置位于themes/next/layout/_third-party/seo/baidu-push.swigsitemap与谷歌提交一致！！！还没有结束，百度收录不仅慢而且也比较麻烦了，因为github屏蔽了百度的爬虫，所以部署在github上的静态站点很难被百度搜索到。解决方法：将静态Pages托管到Coding上，重新解析一个新的二级域名，这样Coding和Github上的Pages就变成了两个独立的博客了。同一域名解析到不同的IP，保持之前的配置不改动，通过配置DNS，使国内的线路流量分配到Coding上，而其他线路分配到GitHub。这样，百度抓取就会跑到Coding上去。4 DNS流量分发Coding配置与GitHub是一致的，创建项目 $\rightarrow$ 开启静态Pages $\rightarrow$ 绑定域名站点配置文件，找到deploy：1234567deploy:- type: git repo: - 你的github项目地址 - 你的coding醒目地址 branch: master # old- type: baidu_url_submitter # newDNSPOD已被腾讯收购，可以登录DNSPOD / 腾讯云修改域名服务器，以GoDaddy域名为例先进入腾讯云控制台 $\rightarrow$ 域名管理，可以看到下方提示登录GoDaddy进入域名DNS管理，修改DNS，选择自定义返回腾讯云，进行域名解析​静态文件加载静态文件是一些js、css、html等文件，一般网站都会调用一大堆这些文件，如果调用的一些静态资源是通用的文件（第三方库），如jquery、fancybox，可以设定成合适的 CDN 地址，从而加速网站的运行。参考：NexT文档主题配置文档，字段vendors12345678910111213141516171819202122232425262728293031323334353637383940414243444546# Script Vendors.# Set a CDN address for the vendor you want to customize.# For example# jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js# Be aware that you should use the same version as internal ones to avoid potential problems.# Please use the https protocol of CDN files when you enable https on your site.vendors: # Internal path prefix. Please do not edit it. _internal: lib # Internal version: 2.1.3 jquery: //cdn.jsdelivr.net/jquery/2.1.3/jquery.min.js # Internal version: 2.1.5 # See: http://fancyapps.com/fancybox/ fancybox: //cdn.jsdelivr.net/fancybox/2.1.5/jquery.fancybox.pack.js fancybox_css: //cdn.jsdelivr.net/fancybox/2.1.5/jquery.fancybox.min.css # Internal version: 1.0.6 # See: https://github.com/ftlabs/fastclick fastclick: //cdn.jsdelivr.net/fastclick/1.0.6/fastclick.min.js # Internal version: 1.9.7 # See: https://github.com/tuupola/jquery_lazyload lazyload: //cdn.jsdelivr.net/jquery.lazyload/1.9.3/jquery.lazyload.min.js # Internal version: 1.2.1 # See: http://VelocityJS.org velocity: //cdn.jsdelivr.net/velocity/1.2.3/velocity.min.js # Internal version: 1.2.1 # See: http://VelocityJS.org velocity_ui: //cdn.jsdelivr.net/velocity/1.2.3/velocity.ui.min.js # Internal version: 0.7.9 # See: https://faisalman.github.io/ua-parser-js/ ua_parser: //cdn.jsdelivr.net/ua-parser.js/0.7.10/ua-parser.min.js # Internal version: 4.6.2 # See: http://fontawesome.io/ fontawesome: //maxcdn.bootstrapcdn.com/font-awesome/4.6.2/css/font-awesome.min.css # Internal version: 1.0.2 # See: https://github.com/HubSpot/pace pace: //cdn.bootcss.com/pace/1.0.2/pace.min.js pace_css: //cdn.bootcss.com/pace/1.0.2/themes/blue/pace-theme-flash.min.cssGoogle引用Google被墙，所以有关谷歌类的引用都会导致引用失败，使网站加载变慢。例如：字体应用fonts.googleapis.com网上看到两种替代的：360：fonts.useso.com中科大： fonts.lug.ustc.edu.cn不过现在，问题来了，谷歌字体库解封了，360好像关了，中科大不稳定，所以呢？修改前还是要甄别一下站长工具如果需要修改，可以查看主题配置文件，字段font 以及文件themes/next/layout/_partials/head/external-fonts.swig博文压缩NexT主题在解析markdown文件时生成的代码会包含大量的空白，增加了文档的大小，影响网站的加载速度。安装插件1$ npm install --save hexo-all-minifierhexo-all-minifier文档主题配置文件，添加12345678910111213141516171819202122232425262728293031323334353637all_minifier: truejs_concator: enable: false bundle_path: '/js/bundle.js' front: false silent: falsehtml_minifier: # html压缩 enable: true ignore_error: false silent: false exclude: css_minifier: # css压缩 enable: true silent: false exclude: - '*.min.css'js_minifier: # js压缩 enable: true mangle: true silent: false output: compress: exclude: - '*.min.js'image_minifier: # 图片压缩 enable: true interlaced: false multipass: false optimizationLevel: 2 pngquant: false progressive: false silent: false​遇到问题1 注意备份之前遇到一个很严重的问题，hexo命令打错了本来是想安装某个插件，用了一下简写命令hexo i xx一不小心就点了回车，hexo i将文件都初始化了，打开链接一片空白自己还庆幸着懂得版本控制，可是一想，我一直用是hexo命令，只是生成了一些静态文件提交到github上，并没，有将整个源文件push上去，一下子头就大了最后，发现只有几个文件清空了，通过版本控制在提交到github的静态文件目录找到了对应的文件，及时修改回来。所以呢，这一波折，就是要告诉我，要时刻做好版本控制。GitHub上的私人仓库是要收费，而我们的源码中又包含了很多密钥，又不能放到公开仓库中。所以，要找替代品，国内有很多平台模仿GitHub的，例如Coding、码云之类，同样可以通过git控制，还提供免费的私人仓库。同时，该项目可以在其他电脑上clone，编辑并上传。2 大小写问题GitHub上好像对大小写不敏感，但是链接却对大小写敏感。我把一个标签or标题字母的大小写改了，结果就404回到GitHub上你可以发现仓库里文件名是没有改变的，所以呢，注意字母大小写问题，改动后的文件可以先不提交，GitHub自动把原来的文件删除后再提交，就不会出错了。3 手机适配电脑的屏幕比较大，同样的页面大小放到手机上坑定就不合适了。NexT主题已经初步适配了手机浏览器模式，但一些我们自定义的布局，还需要自己调整。例如，在前文讲过的GitHub边角问题，我们都可以在/themes/next/source/css/_custom/custom.styl文件中重新定义布局，考虑标签优先权问题，可以加上!important就有绝对优先权了。通过源代码，可以看到一种方便的手机浏览器适配方法，直接在标签内加上+mobile{}，例如我在一篇文章内添加了一个音乐播放器，电脑上宽度是合适的，手机上就爆了，修改如下：12345678.post .aplayer &#123; width: 520px; margin: 0 auto; +mobile() &#123; width: auto; margin: 0 auto; &#125; &#125;4 开发文档开发文档很重要，像Hexo文档提供了配置步骤、目录说明、主题插件等等，了解下开发文档，自定义修改的时候会更加方便。参考链接想让你的博客被更多的人在搜索引擎中搜到吗？Hexo插件之百度主动提交链接百度无法爬取Github Pages静态网站解决方案]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（四）Hexo高阶之第三方插件]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%9B%9B%EF%BC%89Hexo%E9%AB%98%E9%98%B6%E4%B9%8B%E7%AC%AC%E4%B8%89%E6%96%B9%E6%8F%92%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[Hexo 静态站点具有一定的局限性，需要借助第三方插件来扩展站点的功能。网上很多教程都是直接添加某些代码，但现在很多也已经merge到源码了，所以修改就比较方便了，true or false，开启或关闭功能，有些功能可能还需要在第三方服务上注册账号，获取API和APK 。利用Hexo搭建博客的人很多，但不都是千篇一律的，有些好的还是要借鉴的，更好的是能够有自己的风格~~~RSS什么是RSS？简易信息聚合（也叫聚合内容）是一种RSS基于XML标准，在互联网上被广泛采用的内容包装和投递协议。RSS(Really Simple Syndication)是一种描述和同步网站内容的格式，是使用最广泛的XML应用。RSS搭建了信息迅速传播的一个技术平台，使得每个人都成为潜在的信息提供者。发布一个RSS文件后，这个RSS Feed中包含的信息就能直接被其他站点调用，而且由于这些数据都是标准的XML格式，所以也能在其他的终端和服务中使用，是一种描述和同步网站内容的格式。——百度百科1 生成RSS文件安装hexo-generator-feed插件1$ npm install --save hexo-generator-feed打开站点配置文件 ，字段Extensions，添加如下123# Extensions## Plugins: http://hexo.io/plugins/plugins: hexo-generate-feed打开主题配置文件 ，字段rss，添加如下1rss: /atom.xml配置完成，执行下列命令，可以看到/public文件夹中多了一个atom.xml文件1$ hexo g发布之后，在侧边栏会生成一个RSS图标2 RSS迁移安装hexo-migrator-rss插件1$ npm install --save hexo-migrator-rss执行下列命令，从 RSS 迁移所有文章。source 可以是文件路径或网址。1$ hexo migrate rss &lt;source&gt;评论系统NexT支持多款评论系统如果想要取消某个页面or文章的评论，在文章的属性中增加comments: false1 Valine一款基于Leancloud的快速、简洁且高效的无后端评论系统。支持匿名评论效果图：获取APP ID 和 APP KEY点击注册账号点击创建应用进入应用 &gt; 设置 &gt; 应用Key，可以看到APP ID 和 APP KEY配置打开主题配置文件 ，字段Valine12345678910111213# Valine.# You can get your appid and appkey from https://leancloud.cn# more info please open https://valine.js.orgvaline: enable: true appid: # 填写获取的APP ID appkey: # 填写获取的APP KEY notify: true # 邮件提醒 verify: true # 验证码 placeholder: Just go go # 评论提示语 avatar: mm # 头像，具体看Valine官网 guest_info: nick,mail,link # 评论者相关属性 pageSize: 10 # 分页2 畅言需要实名登录，最不能接受的是还要绑定手机获取APP ID 和 APP KEY点击注册账号比较麻烦的是站点需要备案，没有备案只能使用15天有种投机取巧的方式，自行搜索进入 &gt; 后台总览 ，就可以看到了配置打开主题配置文件 ，字段changyan1234changyan: enable: true appid: # 填写获取的APP ID appkey: # 填写获取的APP KEY​访问统计页脚设计：/themes/next/layout/_partials/footer.swig文章设置：/themes/next/layout/_macro/post.swig1 不蒜子统计进入主题配置文件 ，字段busuanzi相关设置文件/themes/next/layout/_third-party/analytics/busuanzi-counter.swig123456789101112131415busuanzi_count: # count values only if the other configs are false enable: true # custom uv span for the whole site 整个网站访问用户量 site_uv: true site_uv_header: 本站访客数 site_uv_footer: 人次 # custom pv span for the whole site 整个网站访问总次数 site_pv: true site_pv_header: 本站总访问量 site_pv_footer: 次 # custom pv span for one page only 一篇文章的阅读次数 page_pv: true page_pv_header: 本文总阅读量 page_pv_footer: 次2 LeanCloud统计1234leancloud_visitors: # 文章阅读次数统计 enable: true appid: # 填写获取的APP ID appkey: # 填写获取的APP KEY3 字数统计安装插件1$ npm install --save hexo-wordcount配置123456post_wordcount: item_text: true wordcount: false # 文章字数 min2read: false # 阅读时长预计 totalcount: true # 全站字数 separated_meta: false # 分行博文置顶修改插件hero-generator-index ，文件node_modules/hexo-generator-index/lib/generator.js12345678910111213141516// var posts = locals.posts.sort(config.index_generator.order_by);// 改为var posts = locals.posts;posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 只有一篇文章top有定义，将排在最前面 return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排&#125;);文章属性添加top值，数值越大越靠前1top: # 数值文章搜索安装插件1$ npm install hexo-generator-searchdb --save站点配置文件 ，添加12345search: path: search.xml field: post format: html limit: 10000主题配置文件 ，字段local_search123456789# Local search# Dependencies: https://github.com/flashlab/hexo-generator-searchlocal_search: enable: ture # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1​添加挂件安装插件1$ npm install -save hexo-helper-live2d安装挂件预览1$ npm install --save live2d-widget-model-xxx # xxx为挂件名配置站点配置文件 ，添加123456789101112live2d: enable: true scriptFrom: local model: # 挂件模型 use: live2d-widget-model-hijiki display: # 位置 # position: right width: 80 height: 160 bottom: -120 mobile: # 手机显示 show: false​在线联系基于DaoVoice实现注册账号邀请码 832ef3b6获取API应用设置 &gt; 安装到网站配置文件/themes/next/layout/_partials/head.swig ，添加123456789&#123;% if theme.daovoice %&#125; &lt;script&gt; (function(i,s,o,g,r,a,m)&#123;i["DaoVoiceObject"]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset="utf-8";m.parentNode.insertBefore(a,m)&#125;)(window,document,"script",('https:' == document.location.protocol ? 'https:' : 'http:') + "//widget.daovoice.io/widget/0f81ff2f.js","daovoice") daovoice('init', &#123; app_id: "&#123;&#123;theme.daovoice_app_id&#125;&#125;" &#125;); daovoice('update'); &lt;/script&gt;&#123;% endif %&#125;主题配置文件 ， 添加123# Online contact daovoice: truedaovoice_app_id: # 你获取的API效果 当有人发信息给你的时候，你可以通过DaoVoice在线交流，也可以关注DaoVoice小程序，绑定你的账号添加音乐网易云音乐外链​ 单曲复制代码，粘贴在你想要的位置，可以是文章 或者是 侧边栏歌单自己的歌单是没有生成外链。分享 $\rightarrow$ 动态 $\rightarrow$ 外链效果可以缩放Aplayer引入js文件APlayer.min.js1&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/aplayer/1.6.0/APlayer.min.js"&gt;&lt;/script&gt;位置themes/next/layout/_partials/head.swigMeting.min.js1&lt;script src="https://cdn.jsdelivr.net/npm/meting@1.0.1/dist/Meting.min.js"&gt;&lt;/script&gt;位置themes/next/layout/_partials/footer.swig添加音乐音乐平台1&lt;div class=&quot;aplayer&quot; data-id=&quot;&quot; data-server=&quot;&quot;&gt;&lt;/div&gt;参数解释：data-id: 歌曲/专辑/歌单 IDdata-server: 音乐平台，支持如下参数netease （网易云音乐）tencent （qq音乐）xiami （虾米音乐）kugou （酷狗音乐）baidu （百度音乐）data-type: 请求类型，支持如下参数song （单曲）album （专辑）playlist （歌单）search （搜索）​音乐外链（参数名可能与Aplayer中的不一样）1&lt;div class=&quot;aplayer&quot; data-title=&quot;&quot; data-author=&quot;&quot; data-url=&quot;&quot; data-pic=&quot;&quot; data-lrc=&quot;&quot;&gt;&lt;/div&gt;参数解释：data-title: 歌名data-author: 歌手data-url: 音乐链接data-pic: 音乐封面data-lrc: 歌词​其他参数data-mode: 播放模式random （随机）single （单曲）circulation （列表循环）order （列表）data-autoplay: 自动播放falsetrue​推荐Aplayer自定义比iframe还好，可以加载有版权问题的音乐，墙裂推荐！！！(｡･∀･)ﾉﾞ嗨！一下这部分纯属玩乐，有点酷炫，我把它设置在了头像上，可以点击试一试音乐有点鬼畜，想不有什么好的，节奏可以配上该动画参考来自：Hexo high一下小功能资源js：http://oxv1k8kvi.bkt.clouddn.com/High.js可以自行下载来看一下里面的音乐地址和css可以替换一下mp3：http://oxv1k8kvi.bkt.clouddn.com/harlem-shake.mp3css：http://oxv1k8kvi.bkt.clouddn.com/harlem-shake-style.css配置文件/themes/next/layout/_partials/head.swig，添加1&lt;script type="text/javascript" src="http://oxv1k8kvi.bkt.clouddn.com/High.js"&gt;&lt;/script&gt;然后，在你想要点击实现high一下功能的地方，添加1&lt;a title=&quot;(｡･∀･)ﾉﾞ嗨！一下&quot; style=&quot;underline: none&quot; rel=&quot;alternate&quot; class=&quot;mw-harlem_shake_slow wobble shake&quot; href=&quot;javascript:shake()&quot;&gt; XXX &lt;/a&gt;​参考链接Next文档hexo的next主题个性化配置教程Valine – 一款极简的评论系统hexo-helper-live2dHexo音乐播放完美支持https和多平台AplayerHexo high一下小功能]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（三）Hexo个性化配置进阶]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89Hexo%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E8%BF%9B%E9%98%B6%2F</url>
    <content type="text"><![CDATA[所谓的进阶，无非就是换个主题呀，添加一些小功能……看个人喜好吧！说到底，大部分都是参照网上的~~~主题安装Hexo官网提供了丰富的主题，挑选一款适合自己的，执行以下命令：basic1$ git clone [主题地址] [存放位置]例如我选择的主题是Next1$ git clone https://github.com/iissnan/hexo-theme-next themes/next完成之后，在themes目录下就会多了一个主题next的文件夹点击预览 themes进入站点配置文件 ，找到theme字段，修改为1theme: next进入主题配置文件 ，找到scheme字段，里面有next主题四种模板。12345# Schemesscheme: Muse# scheme: Mist# scheme: Pisces# scheme: Gemini首先使用命令，打开http://localhost:4000在本地预览，切换scheme刷新下页面看看效果1$ hexo s -gNext主题主题目录.├── _config.yml├── languages├── layout├── scripts└── source具体解释基础配置进入站点配置文件 ，字段Site1234567# Sitetitle: Danboard # 网站标题subtitle: 踮起脚尖，另一种高度 # 副标题description: # 描述，显示在侧边栏author: Danboard # 作者language: zh-Hans # 语言timezone: Asia/Shanghai # 时间站点logo进入主题配置文件 ，字段favicon12345favicon: small: /images/favicon-16x16-next.png medium: /images/favicon-32x32-next.png apple_touch_icon: /images/apple-touch-icon-next.png safari_pinned_tab: /images/logo.svg图标推荐：Font Awesome阿里图标下载图标，指定大小，修改名称，存放在source/images/内菜单进入主题配置文件 ，字段menu默认支持Font Awesome图标，所以||后只要跟上图标名就ok，可以自行更换123456789menu: home: / || home #about: /about/ || user #tags: /tags/ || tags #categories: /categories/ || th archives: /archives/ || archive #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbea选择自己想要的菜单项，取消注释新建一个about（关于我）页面1$ hexo new page &quot;about&quot;在hexo/source/下生成about/index.md ，编辑index.md文档新建一个tags（标签）页面1$ hexo new page &quot;tages&quot;在hexo/source/下生成tages/index.md ，修改如下1type: tages新建一个categories（分类）页面1$ hexo new page &quot;categories&quot;在hexo/source/下生成/index.md ，修改如下1type: categories新建一个腾讯公益404页面在hexo/source/下新建一个404.html的文件，内容如下：123456789101112131415161718&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv="content-type" content="text/html;charset=utf-8;"/&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /&gt; &lt;meta name="robots" content="all" /&gt; &lt;meta name="robots" content="index,follow"/&gt; &lt;link rel="stylesheet" type="text/css" href="https://qzone.qq.com/gy/404/style/404style.css"&gt;&lt;/head&gt;&lt;body&gt; &lt;script type="text/plain" src="http://www.qq.com/404/search_children.js" charset="utf-8" homePageUrl="/" homePageName="返回主页"&gt; &lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/data.js" charset="utf-8"&gt;&lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/page.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;修改菜单1commonweal: /404.html || heartbea侧边栏进入主题配置文件 ，字段sidebar12345678sidebar: position: left # 靠左 #position: right # 靠右 #display: post # 默认，在文章页面（拥有目录列表）时显示 #display: always # 在所有页面中都显示 display: hide # 在所有页面中都隐藏（可以手动展开） #display: remove # 完全移除头像添加头像进入主题配置文件 ，字段avatar12avatar: /images/avatar.png # 放在source/images/# avatar: http://example.com/avatar.png # 网上链接 url圆形头像文件\themes\next\source\css\_common\components\sidebar\sidebar-author.styl ，添加代码：12345678.site-author-image &#123; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf;&#125;头像旋转同上，添加代码：1234567891011121314151617181920212223242526272829.site-author-image &#123; /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.5s ease-out; -moz-transition: -moz-transform 1.5s ease-out; transition: transform 1.5s ease-out;&#125;img:hover &#123; /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;/* Z 轴旋转动画 */@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125;@-webkit-keyframes play &#123; // 同上&#125;@-moz-keyframes play &#123; // 同上&#125;社交链接进入主题配置文件 ，字段social12345678910111213141516social: GitHub: https://github.com/XXX || github #E-Mail: mailto:yourname@gmail.com || envelope #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skypesocial_icons: enable: true icons_only: false transition: false推荐阅读 or 友情链接进入主题配置文件 ，字段Blogrolls1234567# Blog rollslinks_icon: linklinks_title: 友情链接# links_layout: block # 块级 分行显示links_layout: inline # 内联 同行显示links: # 添加友链 SYSU: http://www.sysu.edu.cn/GitHub边角效果：文件themes/next/layout/_layout.swig ，复制代码放在&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;下，修改href为自己的github地址因为我是把github的logo放在了左上角，在手机上查看就会发现logo与菜单重和了如果想要修改边角位置，可以在文件themes/next/source/css/_custom/custom.styl 中进行更改12345678svg &#123; float: left; transform: scale(-1, 1); +mobile() &#123; float: right; transform: scale(1, 1); &#125; &#125;GitHub cornerfork me on GitHub​动画效果背景动画进入主题配置文件 ，字段canvas_nest12345# 4种，开启true，关闭falsecanvas_nest: falsethree_waves: falsecanvas_lines: truecanvas_sphere: false进度条进入主题配置文件 ，字段Progress1234# Progress bar in the top during page loading.pace: truepace_theme: pace-theme-flash文章编辑首页预览多篇文章，通过阅读全文打开&lt;!--more--&gt;截断 推荐在想要显示在首页的文字下方添加标签&lt;!--more--&gt;文章属性description123456---title: 文章标题date: 发布时间tages: 文章标签description: 摘要，显示在首页---自动显示进入主题配置文件 ，字段auto_excerpt123auto_excerpt: enable: true length: 150 # 截取长度为150个字符文章背景添加边框阴影，突出文章，打开文件themes/next/source/css/_custom/custom.styl ，该文件可以让自定义一些布局，通过浏览器的开发者工具找到对应标签，就可以进行设置了。12345678.post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; background-color: #fff; -webkit-box-shadow: 0 0 10px rgba(202, 203, 204, .5); -moz-box-shadow: 0 0 10px rgba(202, 203, 204, .5);&#125;文章分割线文章添加边框阴影后，分割线就显得有点多余，在custom.styl文件中添加1234.posts-expand .post-eof &#123; margin: 0px; background-color: rgba(255, 255, 255, 0);&#125;代码高亮进入主题配置文件 ，字段highlight123# Available value:# normal | night | night eighties | night blue | night brighthighlight_theme: normal文章打赏进入主题配置文件 ，字段reward，将支付宝or微信收款二维码图片保存到文件夹/themes/next/source/images/下12345# Reward#reward_comment: Donate comment herewechatpay: /images/wechatpay.jpgalipay: /images/alipay.jpg# bitcoin: /images/bitcoin.png文章分享Next这里提供了三种：jiathis、百度、豆瓣，效果都差不多自定义文件都在themes/next/layout/_partials/share/jiathis分享1jiathis: true百度分享1234baidushare: type: button# Available value: # 两种样式 下方 | 侧边# button | slide豆瓣（自己试了，不能用）1duoshuo_share: true文章加密这只是一种障眼法文件/themes/next/layout/_partials/head.swig ，添加如下代码12345678910&lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密码错误！'); history.back(); &#125; &#125; &#125;)();&lt;/script&gt;文章属性添加1password: # 你设定的密码​参考链接Next文档hexo的next主题个性化配置教程]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>next</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[端口占用的解决方法]]></title>
    <url>%2F%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[有时候明明打开了服务器，端口也配置好了，就是不能访问，这时候可能要考虑是否是端口被占用了，端口被占用有时候是没有提示的。解决的话，有两种方法：第一种，改端口；第二种，禁用占用该端口的软件。下面只介绍后者：打开命令管理器，快捷键win+R查找占用端口的程序对应的PID1netstat -ano|findstr [端口号]稍微接解释一下netstat，详细资料可以输入 netstat ? 或是找度娘-a 显示所有连接和侦听端口。-n 以数字形式显示地址和端口号。-o 显示拥有的与每个连接关联的进程 ID。（合并指令 -ano 就是列出所有端口的情况了）findstr 在端口使用情况中找到我们需要的端口根据PID查找端口占用的程序1tasklist|findstr [PID]tasklist：显示在本地或远程机器上当前运行的进程列表解除占用打开任务管理器，选择详细信息 ，点击程序，再点右下方的结束任务就ok了。]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>port</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（二）配置Hexo博客基础框架]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89%E9%85%8D%E7%BD%AEHexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E6%A1%86%E6%9E%B6%2F</url>
    <content type="text"><![CDATA[什么是 Hexo？Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。—来自“Hexo文档”配置环境Node.jsNode.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。什么是npm？允许用户从NPM服务器下载别人编写的第三方包到本地使用。允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。总而言之，就是要使用npm来安装Hexo​安装Hexo打开Git Bash 或是 命令管理器，执行以下命令就可以了，这样本地就有了hexo的包路径一般在C:/Users/用户名/AppData/Roaming/npm/hexo1$ npm install hexo-cli -g部署博客hexo实例创建一个文件夹，存放blog的配置文件执行hexo命令1$npm init初始完成，可以看到文件夹中多了以下文件：node_modules：依赖包（一些黑操作，官网有相应的包，也可以自己编写）scaffolds：文章模板（post默认、page、draft）source：存放文章（/_post/xx.md）themes：主题（默认landscape，有点丑，hexo官网预览，下载自己心仪的主题）_config.yml：整个博客的配置（themes中也有一个同名文件，为了区分前者称为站点配置文件 ，后者称为主题配置文件）package.json：应用程序的信息部署到github打开站点配置文件 ：_config.yml，Ctrl+F找到deploy，进行如下配置，最后保存1234deploy: type: git repo: 你的github项目地址 branch: master你的github项目地址执行下面命令123$ hexo clean$ hexo generate$ hexo serverhexo文件解释与命令，请参照Hexo文档进行本地预览打开浏览器输入：localhost:4000hexo server默认打开的是4000端口如果不能打开，有可能是4000端口被其他程序给占用了第一种方法，请看端口被占用的解决方法第二种方法，切换端口1$ hexo server -p [端口号]​上传到GitHub服务器如果预览没问题的话，就可以上传到服务器了123$ hexo clean$ hexo generate$ hexo deploy​ 发布文章1$ hexo new [layout] &lt;title&gt;layout：文件夹scaffolds中的文章模板（post默认、page、draft），也可以自定义title：文章标题最后还是一样预览再发布到github服务器就ok啦~​参考链接Hexo文档使用hexo+github搭建免费个人博客详细教程]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[好久不见]]></title>
    <url>%2F%E5%A5%BD%E4%B9%85%E4%B8%8D%E8%A7%81%2F</url>
    <content type="text"><![CDATA[Please enter the password to read. ]]></content>
      <categories>
        <category>你的名字</category>
      </categories>
      <tags>
        <tag>friend</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（一）GitHub新建一个blog项目]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89GitHub%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AAblog%E9%A1%B9%E7%9B%AE%2F</url>
    <content type="text"><![CDATA[一个博客就像自己的一片小天地搭建一个属于自己的博客，记录、整理、分享自己的所见所闻、所学所感。网上有许多搭建博客的平台，但个人只了解了github，比较方便，提供域名和服务器，由hexo提供个性模板，如果有自己的域名，还可以解析到博客链接上，更加自主个性。GitHub服务器拥有一个github账号点击注册点击新建一个项目注意：Repository name为自己github账号的名字(例如我的账号YH-Chen) + .github.io，博客地址就是该名字yh-chen.github.io如果是自定义的名称(例如Danboard)，博客的地址就变成yh-chen.github.io/Danboard。设置博客进入项目，选择settings1） 如果Repository name直接是xxx.github.io，直接拉到最后，可以看到GitHub Pages，它已经自动生成博客链接了，打开链接只显示标题xxx.github.io。如果你拥有自己的个性域名，先解析到你的博客地址，再在Custom domain里填写你的域名，就可以使用自己的域名登录自己的博客了。点击choose a theme可以选择github默认的博客主题选择之后，它会打开创建项目时保存的README.md文件，编辑的内容为markdown语言基础，以后的博客也是用markdown来编辑。直接点击commit changes就可以了。2） 如果Repository name是一般的名称，同样在设置中拉到GitHub Pages，将Source改为master branch就可以，其他的就跟上面一样了。编辑博客git工具Git(读音为/gɪt/。)是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。—百度百科点击下载github是一个面向开源软件项目的托管平台。虽然github上提供了文件编辑和上传的功能，但使用起来并不方便，所以将项目clone到本地，在本地进行编辑，再通过git（也可以使用githubDestop桌面客户端）上传到平台，这里就需要了解一下git的基础命令和配置了。clone博客项目到本地点击clone or download，复制链接打开git bash，输入命令1$ git clone https://github.com/XXX/XXX.github.io.git编辑简单的博客1234$ echo &quot;Hello World!&quot; &gt; index.html$ git add index.html$ git commit -m &quot;Init commit&quot;$ git push origin master打开链接之后，发现只有Hello World！了。没有结束！！！现在只是完成初步工作，拥有了一个博客，在本地也备份了一份文件，但博客还是空空的，什么格式都没有，下一步就是要利用Hexo弄出一个博客框架。参考链接GitHub Pages三分钟在GitHub上搭建个人博客]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
