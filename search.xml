<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[C++内存管理]]></title>
    <url>%2Fc-%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86%2F</url>
    <content type="text"><![CDATA[1 内存分配栈 ：存放函数参数以及局部变量,在出作用域时,将自动被释放.栈内存分配运算内置于处理器的指令集中,效率很高,但分配的内存容量有限.堆 ：new分配的内存块(包括数组,类实例等),需delete手动释放.如果未释放,在整个程序结束后,OS会帮你回收掉.自由存储区 ： malloc分配的内存块,需free手动释放.它和堆有些相似.全局/静态区 ： 全局变量(global)和静态变量(static)存于此处.(在以前的C语言中,全局变量又分为初始化的和未初始化的,C++不分)**常量存储区 ： 常量(const)存于此处,此存储区不可修改.234]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++面向对象编程]]></title>
    <url>%2FC-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%2F</url>
    <content type="text"><![CDATA[The content is unfinished ! U2FsdGVkX18xskkbacsoGlNw1z+yG3+ONzsKB4/WMyk=]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[C++基础学习笔记]]></title>
    <url>%2Fc-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[The content is unfinished ! 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]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[正方系统抢课程序——Python]]></title>
    <url>%2F%E6%AD%A3%E6%96%B9%E7%B3%BB%E7%BB%9F%E6%8A%A2%E8%AF%BE%E7%A8%8B%E5%BA%8F%E2%80%94%E2%80%94Python%2F</url>
    <content type="text"><![CDATA[注：该脚本应朋友要求写的，不是本校的教务系统。抢课脚本，其实就是模拟选课的过程。所以，首先要了解HTTP协议，我们输入教务系统为什么会有一个界面显示，这个界面就是一个html，简单来说，浏览器是一个客户端，教务系统在另一端的服务器上，输入教务系统的地址，就是向服务器发送一个请求，当中会有“三次握手”先建立连接，接着发送一个请求得到服务器响应，服务器向客户端传送一个html文件，客户端解析再显示出来。1 选课流程通过浏览器开发者工具（F12）观察选课流程的请求与响应。1.1 登录登录提交表单的地址是http://jwc.gdlgxy.com/default2.aspxRequest Headers请求头部中，很多信息都是默认的，Cookie是网站为了辨别用户身份、进行 session 跟踪而储存在用户本地终端上的数据，因为不同浏览器以及生命周期会发生变化，需要记录Cookie的值。Form Data表单中包含了重要的信息：状态码、学号、密码、验证码。cookie、状态码（VIEWSTATE）、验证码（CheckCode），在输入教务地址的时候就可以获取。以下是输入教务系统地址，得到的响应文件：1.2 选课第一步，选课类型第二步，筛选课程第三步，选择课程，提交选课过时了，没来得及保存图片在页面上的点击，都是一次请求，每一次的请求状态码VIEWSTATE可能不一致，下一步请求提交的数据中的状态码可以从上一步请求得到的响应文件中查找。如何获取上面的信息？选课类型：代码是固定的，公共选修课N121203，体育选课N121205，院系选修课N121207学生姓名编码输入姓名，再进行URL编码在登录获取的响应中查找状态码在从上一次的响应文件中查找编码问题输入中文，例如：&#39;有&#39;.encode(&#39;gbk&#39;)通过网页工具（站长工具）编码2 模拟抢课通过浏览器的开发者工具（F12），得到每一次的请求信息（Request Headers和Form Data），模拟登陆、模拟选课就是向教务系统的服务器，发送相同的请求，得到我们需要的响应，即选到心仪的课程。2.1 登录2.1.1 初始化12345# self.host = input('输入地址：')self.host = 'xxx' # 教务系统地址 / IPself.baseUrl = 'http://' + self.hostself.checkCodeUrl = self.baseUrl + '/CheckCode.aspx' # 验证码地址 self.loginUrl = self.baseUrl + '/default2.aspx' # 提交表单链接2.1.2 保存cookie123456789101112131415self.cookie = http.cookiejar.CookieJar() # 声明一个CookieJar对象实例来保存cookie，在打开网页的时候保存cookieself.handler = urllib.request.HTTPCookieProcessor(self.cookie) # 创建cookie处理器self.opener = urllib.request.build_opener(self.handler, urllib.request.HTTPHandler) # 通过handler来构建opener# 加入默认的首部行self.opener.addheaders = [ ('Accept', 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'), ('Accept-Encoding', 'gzip, deflate'), ('Accept-Language', 'zh-CN,zh;q=0.9'), ('User-Agent', 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36'), ('Connection', 'keep-alive'), ('Content-Type', 'application/x-www-form-urlencoded'), ('Cache-Control', 'max-age=0'), ('Upgrade-Insecure-Requests', '1')]# 通过urlopen()来使用openerurllib.request.install_opener(self.opener)2.1.3 获取验证码1234567891011121314def getCheckCode(self): path = 'config/code.gif' # 抓取验证码图片保存到本地 code = '' while code is '': fl = open(path, 'wb') try: # 三秒防刷 fl.write(urllib.request.urlopen(self.checkCodeUrl, timeout=3).read()) except: print('the code.aspx has not response') continue finally: fl.close() code = input("验证码(回车更新)：") # must wait for fl.close()return code2.1.4 获取状态码1234567891011121314def getViewstate1(self): # print("---Viewstate1---") viewstate = None while viewstate is None: try: html = urllib.request.urlopen(self.loginUrl, timeout=3).read().decode('gbk') soup = BeautifulSoup(html, 'html.parser') # 响应得到的html文件 soup = soup.find_all(attrs=&#123;'name': '__VIEWSTATE'&#125;)[0] # 在html文件中查找状态吗 viewstate = soup.get('value') except: print('the login.aspx has not response') continue # print("viewstate1：", viewstate)return viewstate2.1.5 提交表单123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566def login(self): # 输入学号密码 xh = input('输入学号：') pw = input('输入密码：') # 输入验证码 code = self.getCheckCode() # 课程归属（默认公共选修课） lx = 'N121203' self.refUrl = self.baseUrl + '/xs_main.aspx?xh=' + xh # 登录教务系统 headers = &#123; 'Host': self.host, 'Origin': self.baseUrl, 'Referer': self.baseUrl + '/' &#125; # Request Headers postdata = urllib.parse.urlencode(&#123; '__VIEWSTATE': self.getViewstate1(), 'txtUserName': xh, 'TextBox2': pw, 'txtSecretCode': code, 'RadioButtonList1': '学生'.encode('gbk'), # use gbk 'Button1': '', 'lbLanguage': '', 'hidPdrs': '', 'hidsc': '' &#125;).encode('utf-8') # Form Data post = urllib.request.Request(self.loginUrl, postdata, headers) try: page = urllib.request.urlopen(post).read().decode('gbk') # 查找错误信息（验证码/密码出错） error = re.findall('alert.+?错误！！\'\)', page) if error: print(error[0]) self.login() else: # 登录信息正确，直接进入到选课界面 # 课程归属 n = input('选择课程类型：1.公共选修课 2.体育选课 3.院系选修课\n') if n == '1': lx = 'N121203' elif n == '2': lx = 'N121205' elif n == '3': lx = 'N121208' else: print('暂不支持该选课类型') exit(0) get = urllib.request.Request(self.refUrl, headers=headers) try: f = urllib.request.urlopen(get) page = f.read().decode('gbk') # 查找学生姓名，也可以通过输入，不过打字有可能比较慢 info = re.findall(r'xf_xsqxxxk.+?gnmkdm=', page) assert info is not None # 正则表达式，查找中文字符 words = re.findall(u"[\u4e00-\u9fa5]+", info[0]) assert words is not None info = info[0].replace(words[0], parse.quote(words[0].encode('gbk'))) # 通过获取的信息，组成选课页面的链接 self.chooseUrl = self.baseUrl + '/' + info + lx except: print('get chooseUrl failed.') except: print('login has no respone.')2.2 选课2.2.1 最后一步12345678910111213141516171819202122232425262728293031323334353637383940414243444546def submit(self): # 选课信息（定位课程） self.course = input("输入课程：") self.date = input("输入时间：") viewstate3 = self.getViewstate3() # 获取状态码 postdata = urllib.parse.urlencode(&#123; '__EVENTTARGET': '', '__EVENTARGUMENT': '', '__VIEWSTATE': viewstate3, 'ddl_kcxz': '', 'ddl_ywyl': '有'.encode('gbk'), 'ddl_kcgs': '', 'ddl_xqbs': 2, 'ddl_sksj': self.date.encode('gbk'), 'TextBox1': self.course.encode('gbk'), 'kcmcGrid:_ctl2:xk': 'on', 'kcmcGrid:_ctl2:jcnr': '|||', 'dpkcmcGrid:txtChoosePage': 1, 'dpkcmcGrid:txtPageSize': 15, 'Button1': ' 提交 '.encode('gbk'), 'dpDataGrid2:txtChoosePage': 1, 'dpDataGrid2:txtPageSize': 150 &#125;).encode('utf-8') # Form Data headers = &#123; 'Host': self.host, 'Origin': self.baseUrl, 'Referer': self.chooseUrl &#125; # Request Headers while True: req = urllib.request.Request(self.chooseUrl, postdata, headers) try: f = urllib.request.urlopen(req, timeout=3) html = f.read().decode('gbk') # 检查是否选课成功，响应文件html中出现"已选课程……xxx"的信息 pat = '&lt;legend&gt;已选课程&lt;/legend&gt;&lt;table.+?' + self.course + '.+?&lt;/table&gt;' pattern = re.compile(pat, re.S) length = len(re.findall(pattern, html)) if (length == 1): # 如果选课成功，则退出，否则继续抢课 print('选课成功') break except: print('submit has no response') continue2.2.2 状态码最后一步选课的状态码是从上一次筛选条件的请求得到的响应文件中获取的12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061def getViewstate3(self): # print("---viewstate3---") headers = &#123; 'Host': self.host, 'Origin': self.baseUrl, 'Referer': self.chooseUrl, &#125; viewstate2 = self.getViewstate2() # 状态码2是从选课类型请求得到的响应中获取 postdata = urllib.parse.urlencode(&#123; '__EVENTTARGET': '', '__EVENTARGUMENT': '', '__VIEWSTATE': viewstate2, 'ddl_kcxz': '', 'ddl_ywyl': '有'.encode('gbk'), 'ddl_kcgs': '', 'ddl_xqbs': 2, 'ddl_sksj': self.date.encode('gbk'), 'TextBox1': self.course.encode('gbk'), 'Button2': '确定'.encode('gbk'), 'kcmcGrid:_ctl2:jcnr': '|||', 'kcmcGrid:_ctl3:jcnr': '|||', 'kcmcGrid:_ctl4:jcnr': '|||', 'kcmcGrid:_ctl5:jcnr': '|||', 'kcmcGrid:_ctl6:jcnr': '|||', 'kcmcGrid:_ctl7:jcnr': '|||', 'kcmcGrid:_ctl8:jcnr': '|||', 'kcmcGrid:_ctl9:jcnr': '|||', 'kcmcGrid:_ctl10:jcnr': '|||', 'kcmcGrid:_ctl11:jcnr': '|||', 'kcmcGrid:_ctl12:jcnr': '|||', 'kcmcGrid:_ctl13:jcnr': '|||', 'kcmcGrid:_ctl14:jcnr': '|||', 'kcmcGrid:_ctl15:jcnr': '|||', 'kcmcGrid:_ctl16:jcnr': '|||', 'dpkcmcGrid:txtChoosePage': 1, 'dpkcmcGrid:txtPageSize': 15, 'dpDataGrid2:txtChoosePage': 1, 'dpDataGrid2:txtPageSize': 150 &#125;).encode('utf-8') # Form Data req = urllib.request.Request( url=self.chooseUrl, data=postdata, headers=headers) # Request Headers viewstate3 = None while viewstate3 is None: try: f = urllib.request.urlopen(req, timeout=3) html = f.read().decode('gbk') soup = BeautifulSoup(html, 'html.parser') try: soup = soup.find_all(attrs=&#123;'name': '__VIEWSTATE'&#125;)[0] viewstate3 = soup.get('value') except: print('get response but cant get VIEWSTATE') continue except: print('get available course has no response') continue return viewstate32.3 选课结果参考链接C++网络编程之使用Winsock2实现教务系统自动抢课程序python爬虫之urllib2登录并抓取HTML页面]]></content>
      <categories>
        <category>脚本</category>
      </categories>
      <tags>
        <tag>tips</tag>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数据库基础]]></title>
    <url>%2F%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80%2F</url>
    <content type="text"><![CDATA[The content is unfinished ! ]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>SQL</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[隐藏未完成编辑的文章]]></title>
    <url>%2F%E9%9A%90%E8%97%8F%E6%9C%AA%E5%AE%8C%E6%88%90%E7%BC%96%E8%BE%91%E7%9A%84%E6%96%87%E7%AB%A0%2F</url>
    <content type="text"><![CDATA[一般都是博客编辑完成，再发布上去，但有时候可能是同时编辑多篇文章，有些编辑了一半，提交上去，只能看到半成品，所以想了个办法把半成品隐藏了。这个修改是基于hexo-blog-encrypt插件的，即将博文加密，只显示“The content is unfinished！”。1 修改模板文件/scaffolds/post.md，添加1done: false这样每次创建一遍新的博文，front-matter都会添加上面语句，标志未完成编辑，如果编辑完成，只需把false改为true，再发布上去。2 修改插件文件/node_modules/hexo-blog-encrypt/lib/中添加一个ccs文件display.css，拷贝style.css，再添加下面语句123input#pass &#123; display: none; // 隐藏输入&#125;文件/node_modules/hexo-blog-encrypt/index.js，修改如下：1234567891011121314151617181920212223242526272829var flag = false; // 标志hexo.extend.filter.register("after_post_render", function (data) &#123; // 添加 if ('done' in data &amp;&amp; !data.done) &#123; data.password = "123"; //加密密码 data.abstract = '&lt;img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-23/56493546.jpg"&gt;'; // 前文显示 data.message = "The content is unfinished !"; if (!('template' in data &amp;&amp; data.template)) &#123; data.template = hexo.config.encrypt.default_template; &#125; data.template = '&lt;link href="' + hexo.config.root + 'display.css" rel="stylesheet" type="text/css"&gt;' + data.template; flag = true; &#125;&#125;hexo.on('exit', function() &#123; // 未完成时，加载display.css；完成时，正常加载style.css if (flag) &#123; var cssFile = pathFn.join(pathFn.join(pathFn.join(pathFn.join(hexo.base_dir, 'node_modules'), 'hexo-blog-encrypt'), 'lib'), 'display.css'); fs.readFile(cssFile).then(function(content) &#123; fs.copyFile(cssFile, pathFn.join(hexo.public_dir, 'display.css')); &#125;); &#125; else &#123; var cssFile = pathFn.join(pathFn.join(pathFn.join(pathFn.join(hexo.base_dir, 'node_modules'), 'hexo-blog-encrypt'), 'lib'), 'style.css'); fs.readFile(cssFile).then(function(content) &#123; fs.copyFile(cssFile, pathFn.join(hexo.public_dir, 'style.css')); &#125;); &#125;&#125;);]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[胡言乱语]]></title>
    <url>%2F%E8%83%A1%E8%A8%80%E4%B9%B1%E8%AF%AD%2F</url>
    <content type="text"><![CDATA[Please enter the password to read. ]]></content>
  </entry>
  <entry>
    <title><![CDATA[HTTP协议]]></title>
    <url>%2FHTTP%E5%8D%8F%E8%AE%AE%2F</url>
    <content type="text"><![CDATA[1 概述HTTP协议（HyperText Transfer Protocol，超文本传输协议）是用于从WWW服务器传输超文本到本地浏览器的传输协议。它可以使浏览器更加高效，使网络传输减少。它不仅保证计算机正确快速地传输超文本文档，还确定传输文档中的哪一部分，以及哪部分内容首先显示(如文本先于图形)等。特点：简单快速客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。灵活HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。无状态服务器向客户发送被请求的文件，而不存储任何关于该客户的状态信息。假如某个特定客户在短短几秒内两次请求同一个对象，服务器并不会2 URLHTTP使用统一资源标识符（Uniform Resource Identifiers, URI）来传输数据和建立连接。URL是一种特殊类型的URI，包含了用于查找某个资源的足够的信息。完全格式基本格式URI、URL和URN的区别URI ：Uniform Resource Identifier，统一资源标识符，URL、URN是URI的子集；URL：Uniform Resource Locator，统一资源定位符；URN：Uniform Resource Name，统一资源名称。Web上地址的基本形式是URI，它代表统一资源标识符。有两种形式：URL：目前URI的最普遍形式。URN：URL的一种更新形式，不依赖于位置，并且有可能减少失效连接的个数。但是其流行还需假以时日，因为它需要更精密软件的支持。URI有绝对和相对之分：绝对的URI，如http://www.danboard.me/HTTP协议/img.png相对的URI，如HTTP协议/img.png3 非持续/持续连接非持续连接一个WEB站点每天可能要接收到上百万的用户请求，为了提高系统的效率，HTTP 1.0规定浏览器与服务器只保持短暂的连接，浏览器的每次请求都需要与服务器建立一个TCP连接，服务器完成请求处理后立即断开TCP连接，服务器不跟踪每个客户也不记录过去的请求。访问一个包含有许多图像的网页文件的整个过程包含了多次请求和响应，每次请求和响应都需要建立一个单独的连接，每次连接只是传输一个文档和图像，上一次和下一次请求完全分离。即使图像文件都很小，但是客户端和服务器端每次建立和关闭连接却是一个相对比较费时的过程，并且会严重影响客户机和服务器的性能。问题 :第一，对于每个连接，在客户和服务器中都要分配TCP的缓冲区和保持TCP变量，造成严重负担；第二，每一个传输对象都要经受两倍RTT的交付时延，严重影响效率。持续连接HTTP 1.1支持持久连接，在一个TCP连接上可以传送多个HTTP请求和响应，减少了建立和关闭连接的消耗和延迟。一个包含有许多图像的网页文件的多个请求和应答可以在一个连接中传输，但每个单独的网页文件的请求和应答仍然需要使用各自的连接。HTTP 1.1还允许客户端不用等待上一次请求结果返回，就可以发出下一次请求，但服务器端必须按照接收到客户端请求的先后顺序 依次回送响应结果，以保证客户端能够区分出每次请求的响应内容，这样也显著地减少了整个下载过程所需要的时间。可以一个接一个地发出对对象的请求，而不必等待未决请求的响应（流水线）。一般，如果一条连接经过一定的时间间隔仍未被使用，HTTP服务器就关闭该连接。4 报文格式4.1 请求Request组成：请求行、请求头部（首部行）、空行、请求数据请求方法GET：请求获取RequestURL所标识的资源，最常用的方法POST：在RequestURL所标识的资源后附加新的数据，可以导致新资源的产生和已有资源的更新HEAD：请求获取RequestURL所标识的资源的响应消息报头，没有响应体PUT：请求服务器存储一个资源，并用RequestURL作为其标识DELETE：请求服务器删除RequestURL所标识的资源GET与POST比较例子12345GET /somedir/page.html HTPP/1.1Host: www.someschool.eduConnection: Keep-aliveUser-agent: Mozilla/5.0Accept-language: fr1234567POST /somedir/page.html HTPP/1.1Host: www.someschool.eduConnection: Keep-aliveUser-agent: Mozilla/5.0Accept-language: frusername=STUDENT&amp;password=1234564.2 响应Response组成：状态行、消息报头、空行、响应正文例子123HTTP/1.1 200 OKDate: Fri, 22 May 2009 06:07:21 GMTContent-Type: text/html; charset=UTF-8状态码1xx：指示信息，表示请求已接收，继续处理2xx：成功，表示请求已被成功接收、理解、接受3xx：重定向，要完成请求必须进行更进一步的操作4xx：客户端错误，请求有语法错误或请求无法实现5xx：服务器端错误，服务器未能实现合法的请求5 工作原理5.1 客户端连接到Web服务器一个HTTP客户端，通常是浏览器，与Web服务器的HTTP端口（默认为80）建立一个TCP套接字连接。例如，[http://www.oakcms.cn](http://www.oakcms.cn./5.2 发送HTTP请求通过TCP套接字，客户端向Web服务器发送一个文本的请求报文，一个请求报文由请求行、请求头部、空行和请求数据4部分组成。5.3 服务器接受请求并返回HTTP响应Web服务器解析请求，定位请求资源。服务器将资源复本写到TCP套接字，由客户端读取。一个响应由状态行、响应头部、空行和响应数据4部分组成。5.4 释放连接TCP连接若connection 模式为close，则服务器主动关闭TCP连接，客户端被动关闭连接，释放TCP连接；若connection 模式为keep-alive，则该连接会保持一段时间，在该时间内可以继续接收请求。5.5 客户端浏览器解析HTML内容客户端浏览器首先解析状态行，查看表明请求是否成功的状态代码。然后解析每一个响应头，响应头告知以下为若干字节的HTML文档和文档的字符集。客户端浏览器读取响应数据HTML，根据HTML的语法对其进行格式化，并在浏览器窗口中显示。参考链接HTTP 1.1与HTTP 1.0的比较关于HTTP协议，一篇就够了]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>http</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[TCP/UDP]]></title>
    <url>%2FTCP-UDP%2F</url>
    <content type="text"><![CDATA[TCP （Transmission Control Protocol，传输控制协议）与 UDP （User Data Protocol，用户数据包协议）是Internet运输层在应用程序端点之间传送应用层报文的两种协议。运输层协议为运行在不同主机上的应用进程之间提供了逻辑通信。TCP协议1 全双工如果一台主机上的进程A与另一台主机上的进程B存在一条TCP连接，那么应用层数据就可以从进程B流向进程A的同时，也从进程A流向进程B。2 点对点单个发送方与单个接收方之间的连接。3 面向连接三次握手（建立连接）客户端发送：SYN = 1, SEQ = X, 端口号服务器回复：SYN = 1, ACK = X + 1, SEQ = Y客户端发送：ACK = Y + 1, SEQ = X + 1确认应答信号ACK = 收到的SEQ + 1。连接建立中，同步信号SYN始终为1。连接建立后，同步信号SYN = 0。为什么要三次握手？三次握手是保证双方互相明确对方能收发信息的最低值。三次握手 ：“喂，你听得到吗？”“我听得到呀，你听得到我吗？”“我能听到你，今天balabala……”两次握手：“喂，你听得到吗？”“我听得到呀”“喂喂，你听得到吗？”“草，我听得到呀！！！！”“你TM能不能听到我讲话啊！！喂！”“……”四次握手：“喂，你听得到吗？”“我听得到呀，你听得到我吗？”“我能听到你，你能听到我吗？”“……不想跟傻逼说话”——来自知乎​四次挥手（断开连接）A向B提出停止连接请求，FIN = 1B收到，ACK = 1B向A提出停止连接请求，FIN = 1A收到，ACK = 1为什么四次握手？四次挥手：“喂，我不说了。”“我知道了。等下，上一句还没说完。Balabala…..””好了，说完了，我也不说了。””我知道了。”4 报文段结构源端口和目的端口 ：各占 2 字节。端口是传输层与应用层的服务接口，传输层的复用和分用功能都要通过端口才能实现序号 / 确认号：占 4 字节。这些字段被TCP发送方和接收方用来实现可靠数据传输服务。数据偏移（首部长度）：占 4 位。它指出 TCP 报文段的数据起始处距离 TCP 报文段的起始处有多远。“数据偏移”的单位是 32 位(以 4 字节为计算单位)保留：占 6 位。保留为今后使用，但目前应置为 0标志字段 URG ：当 URG=1 时,表明紧急指针字段有效.它告诉系统此报文段中有紧急数据,应尽快传送(相当于高优先级的数据)ACK ：只有当 ACK=1 时确认号字段才有效；当 ACK=0 时,确认号无效PSH ：接收 TCP 收到 PSH = 1 的报文段，就尽快地交付接收应用进程，而不再等到整个缓存都填满了后再向上交付RST ：当 RST=1 时，表明 TCP 连接中出现严重差错（如由于主机崩溃或其他原因），必须释放连接，然后再重新建立运输连接SYN ：同步 SYN = 1 表示这是一个连接请求或连接接受报文FIN ：用来释放一个连接，FIN=1 表明此报文段的发送端的数据已发送完毕，并要求释放运输连接窗口 ：占2字节。用于流量控制。检验和 ：占 2 字节。检验和字段检验的范围包括首部和数据这两部分，在计算检验和时，要在 TCP 报文段的前面加上 12 字节的伪首部紧急指针 ：占 16 位。指出在本报文段中紧急数据共有多少个字节（紧急数据放在本报文段数据的最前面）选项：长度可变。TCP 最初只规定了一种选项，即最大报文段长度 MSS。MSS 告诉对方 TCP：“我的缓存所能接收的报文段的数据字段的最大长度是 MSS 个字节.” [MSS(Maximum Segment Size)是 TCP 报文段中的数据字段的最大长度.数据字段加上 TCP 首部才等于整个的 TCP 报文段]填充 ：这是为了使整个首部长度是 4 字节的整数倍5 可靠数据传输确认丢失和确认迟到超时重传TCP 每发送一个报文段，就对这个报文段设置一次计时器。只要计时器设置的重传时间到但还没有收到确认，就要重传这一报文段。6 拥塞控制拥塞窗口含义:拥塞窗口的大小取决于网络的拥塞程度，并且动态地在变化。发送方让自己的发送窗口等于拥塞窗口，如再考虑到接收方的接收能力，则发送窗口还可能小于拥塞窗口。发送方控制拥塞窗口的原则:只要网络没有出现拥塞，拥塞窗口就再增大一些，以便把更多的分组发送出去.但只要网络出现拥塞，拥塞窗口就减小一些，以减少注入到网络中的分组数。慢启动在主机刚刚开始发送报文段时可先设置拥塞窗口 cwnd = 1，即设置为一个最大报文段 MSS 的数值在每收到一个对新的报文段的确认后,将拥塞窗口加 1，即增加一个 MSS 的数值使用慢开始算法后，每经过一个传输轮次(往返时间 RTT)，拥塞窗口 cwnd 就加倍拥塞避免拥塞避免状态：cwnd的值大约是上次遇到拥塞是的值的一半线性增长，每个RTT只将cwnd的值增加一个MSS快速恢复Reno：当出现丢包事件时，cwmd值为原来的一半，然后线性增长。Tahoe：当出现丢包事件时，ssthresh的值设置为cwmd值的一半，cwnd的值被设置为1个MSS，然后继续慢启动、拥塞避免。拥塞窗口的大小取决于网络的拥塞程度,并且动态地在变化.发送方让自己的发送窗口等于拥塞窗口.如再考虑到接收方的接收能力,则发送窗口还可能小于拥塞窗口发送方控制拥塞窗口的原则:只要网络没有出现拥塞,拥塞窗口就再增大一些,以便把更多的分组发送出去.但只要网络出现拥塞,拥塞窗口就减小一些,以减少注入到网络中的分组数7 优缺点优点可靠、稳定缺点效率低、已被攻击（DOS）UDP协议1 面向无连接2 优缺点优点传输速率快（适合音、视频传输，容忍丢失）缺点不可靠、不稳定（没有拥塞控制）​区别TCPUDP面向有连接的通信服务面向无连接的通信服务四元组（源IP+端口/目的IP+端口）二元组（目的IP+端口）提供可靠的通信传输不可靠，会丢包保证数据顺序可能乱序数据无边界数据有边界传输速度慢传输速度快面向字节流面向报文一对一可以一对一，或一对多报头至少20字节报头8字节有流量控制，拥塞控制没有参考链接TCP与UDPTCP详解]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>tcp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[右键菜单的新建项中添加办公程序]]></title>
    <url>%2F%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E7%9A%84%E6%96%B0%E5%BB%BA%E9%A1%B9%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%8A%9E%E5%85%AC%E7%A8%8B%E5%BA%8F%2F</url>
    <content type="text"><![CDATA[平时打开办公软件的习惯时，直接右键 &rarr; 新建 &rarr; Word/Excel/PowerPoint等等，桌面上没有办公软件的图标，显得简洁一点。由于，平时一些实验报告要用到markdown来写，所以想到像word这些办公软件一样直接在某个目录下新建，修改名称就可以了，编写的时候直接ctrl+s保存。习惯因人而异，不喜勿喷！！！打开注册表快捷键Win+R，输入regedit找到文件后缀名HKEY_CLASSES_ROOT&rarr; .md右键 &rarr; 新建 &rarr; 项，命名为ShellNew进入shellNew，右键 &rarr; 新建 &rarr; 字符串值，命名为NullFile，即每次打开markdown，都会创建一个空文档。使注册表生效第一种：重启第二种：任务管理器，找到explorer.exe，结束该进程，再启动（运行新任务+explorer.exe）​效果]]></content>
      <categories>
        <category>小技巧</category>
      </categories>
      <tags>
        <tag>windows</tag>
        <tag>tips</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[数组解析]]></title>
    <url>%2F%E6%95%B0%E7%BB%84%E8%A7%A3%E6%9E%90%2F</url>
    <content type="text"><![CDATA[1 数组1.1 定义数组是一组具有相同类型的、连续的内存区域。要引用数组中的一个特定区域或元素，需要通过指定数组名和该元素在数组中的位置编号。1.2 声明12int a[5]; // 大小为5 int b[]; // Error1.3 初始化1234int a[] = &#123;1, 2, 3, 4, 5&#125;; // 初始化，大小为5int a[5] = &#123;1, 2, 3&#125;; // 初始化，1，2，3，0，0int a[5] = &#123;1, 2, 3, 4, 5, 6&#125;; // Error, 数组越界int b[] = a; // Error, 不能直接复制注意：字符串数组，数组大小要比字符数大1，因为字符串数组后面还有一个默认的空字符’\0’1char c[6] = "Hello";2 指针2.1 定义在C++中，数组和指针是密切相关的，两者几乎可以交换使用。可以认为一个数组名就是一个常量指针。2.2 使用12345int b[5];int *bptr;// 数组名不带下标，是一个指向数组第一个元素的指针bptr = b; // bptr = &amp; b[0];// * (bptr+3) 等价于 b[3]2.3 数组指针指向数组的指针。123456int a[2][2] = &#123;1, 2, 3, 4&#125;; // 二维数组int (*p)[2] = a;// a 是一个数组名，指向一维数组的指针，值 &amp;a[0][0]， sizeof(a) = 16// a[0] 是一维数组名，指向整型的指针，值 &amp;a[0][0]// a[1] 是一维数组名，指向整型的指针，值 &amp;a[1][0]// p 是一个数组指针变量，值 &amp;a[0][0], sizeof(p) = 42.4 指针数组存放指针的数组。常见于构成基于指针的字符串的数组。123char *p[2] = &#123;"Hello", "World"&#125;;// p，指向char数组的指针，值 &amp;p[0]，sizeof(p) = 16// p[0] 是一个char数组，值"Hello"3 vector3.1 定义一个封装了动态大小数组的顺序容器（Sequence Container），能够存放任意类型的动态数组。效率：数组&gt;vector，原因是vector的插入删除要消耗更多时间。3.2 初始化12345vector&lt;int&gt; a(3); // 大小为3vector&lt;int&gt; b(3, 0); // 大小为3，初始化为0vector&lt;int&gt; c = &#123;1, 2, 3&#125;; // 大小为3，初始化为1，2，3，等号可以省略vector&lt;int&gt; d = c; // 直接复制vector&lt;int&gt; e(c); // 直接复制3.3 函数3.3.1 构造函数vector():创建一个空vectorvector(int n):创建一个vector，大小为nvector(int n, const t&amp; t):创建一个vector，大小为n，且值均为tvector(const vector&amp; a):复制构造函数vector(a.begin(), a.end()):复制[begin,end)区间内数组a的元素到vector中3.3.2 插入函数a.push_back(const T&amp; x):尾部插入元素a.insert(iterator it, const T&amp; x):指定位置插入3.3.3 删除函数a.erase(iterator it):删除向量中迭代器指向元素a.erase(iterator first, iterator last):删除向量中[first,last)中元素a.pop_back():删除向量中最后一个元素a.clear():清空向量中所有元素3.3.4 其他函数bool empty() const:判断向量是否为空，若为空，则向量中无元素int size() const:返回向量中元素的个数4 array4.1 定义c++11中给数组提供的更加安全的访问方式，是一种容器类型，支持一系列容器操作。效率跟数组相近。4.2 初始化123array&lt;类型, 大小&gt; a; array&lt;int, 3&gt; a = &#123;1, 2, 3&#125;;array&lt;int, 3&gt; b = a; // 大小一致5 总结数组vectorarray备注内存栈（静态）堆（动态）栈（静态）效率高低高索引a[i]a[i] / a.at(i)a[i]i从0开始a.at(i)检查是否越界NYYarray&lt;int, 2&gt;a= { 1,2, };cout &lt;&lt; a.at(-1) &lt;&lt; endl; // Error复制NY，类型相同Y，类型和大小相同大小sizeof(a)/size(类型)，固定a.size()，可变a.size()，固定includeN&lt;vector&gt;&lt;array&gt;初始化赋值YYY插入NYN删除NYN访问数组范围外的数据YYY例如a[-40]或者a[100]]]></content>
      <categories>
        <category>C/C++</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[排序算法总结和归纳]]></title>
    <url>%2F%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E5%92%8C%E5%BD%92%E7%BA%B3%2F</url>
    <content type="text"><![CDATA[非线性时间比较类排序：通过比较来决定元素间的相对次序，由于其时间复杂度不能突破O(nlogn)，因此称为非线性时间比较类排序。线性时间非比较类排序：不通过比较来决定元素间的相对次序，它可以突破基于比较排序的时间下界，以线性时间运行，因此称为线性时间非比较类排序。1 冒泡排序交换排序，最简单的一种排序算法。从第一个元素开始，与之后的元素逐一比较，如果后者小于前者，则交换位置，从而找到最小的元素。12345678910void bubble(int* a, int n)&#123; for(int i=0; i&lt;n; i++) &#123; for (int j=0; j&lt;n-1-i; j++) &#123; if(a[j] &gt; a[j+1]) &#123; swap(a[i], a[j]); &#125; &#125; &#125;&#125;2 快速排序交换排序，是冒泡排序的一种改进算法。通过一次排序将待排数据分割成两部分，前一部分数据均比后一部分数据小，则可分别对这两部分的数据继续排序，从而达到整体有序。123456789101112131415161718192021222324int Partition(int* a, int low, int high)&#123; int i = low, j = high; while(i &lt; j) &#123; while(i &lt; j &amp;&amp; a[i] &lt;= a[j]) j --; // 右侧扫描 if(i &lt; j) &#123; swap(a[i], a[j]); i ++; &#125; while(i &lt; j &amp;&amp; a[i] &lt;= a[j]) i ++; // 左侧扫描 if(i &lt; j) &#123; swap(a[i], a[j]); j --; &#125; &#125; return i;&#125;void Quick(int* a, int low, int high)&#123; if(low &lt; high) &#123; int pivot = Partition(a, low, high); // 一次划分 Quick(a, low, pivot-1); // 前一个子序列排序 Quick(a, pivot+1, high); // 后一个子序列排序 &#125;&#125;3 插入排序简单排序算法。默认第一个元素已经排序好，将下一个元素按大小插入已排好序的列表，重复这样的操作，知道最后一个元素插入。12345678910111213void Insert(int* a, int n)&#123; for(int i=1; i&lt;n-1; i++) &#123; int tmp = a[i]; // 记录待排记录 int j = i - 1; // 与前面排好的序列记录依次比较 while(j &gt;= 0 &amp;&amp; a[j] &gt; tmp) &#123; a[j+1] = a[j]; j --; &#125; a[j+1] = tmp; &#125;&#125;4 希尔排序插入排序的改进，也叫“缩小增量排序”。先将整个待排序列分割成若干个子序列，分别进行插入排序，逐渐缩小划分的间隔，直到最后，间隔为1，对全体进行一次插入排序，得到一个有序序列。1234567891011121314void Shell(int* a, int n)&#123; for(int d=n/2; d&gt;=1; d=d/2) &#123; // 初始间隔为序列大小的一半 for(int i=d; i&lt;n; i++) &#123; int tmp = a[i]; // 记录待排记录 int j = i - d; while(j&gt;=0 &amp;&amp; a[j]&gt;tmp) &#123; // 进行插入排序 a[j+d] = a[j]; j -= d; &#125; a[j+d] = tmp; &#125; &#125;&#125;5 选择排序简单的排序算法。每次在未排序序列中找到最小元素，存放到已排序列。12345678910void Select(int* a, int n)&#123; for(int i=0; i&lt;n-1; i++) &#123; for (int j=i+1; j&lt;n; j++) &#123; if(a[i] &gt; a[j]) &#123; swap(a[i], a[j]); &#125; &#125; &#125;&#125;6 堆排序堆排序利用了大根堆（或小根堆）堆顶记录的关键字最大（或最小）这一特征，使得在当前无序区中选取最大（或最小）关键字的记录变得简单。123456789101112131415161718192021222324252627void Adjust(int* a, int p, int n) //堆调整&#123; for(int i=2*p+1; i&lt;n; i=i*2+1)&#123; //如果右边值大于左边值，指向右边 if(i+1 &lt; n &amp;&amp; a[i] &lt; a[i+1]) i ++; //如果子节点大于父节点，将子节点值赋给父节点,并以新的子节点作为父节点 if(a[p] &gt;= a[i]) break; else &#123; swap(a[p], a[i]); p = i; &#125; &#125;&#125; void Heap(int* a, int n)&#123; // 构建大顶堆 for(int i=n/2-1; i&gt;=0; i--) &#123; Adjust(a, i, n); &#125; // 交换堆顶与末尾元素，重新调整堆 for(int i=n-1; i&gt;0; i--) &#123; swap(a[0], a[i]); Adjust(a, 0, i); &#125;&#125;7 归并排序分治法，将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为2-路归并。1234567891011121314151617181920212223242526272829void Merge(int sourceArr[], int tempArr[], int startIndex, int midIndex, int endIndex)&#123; int i = startIndex, j = midIndex+1, k = startIndex; while(i!=midIndex+1 &amp;&amp; j!=endIndex+1) &#123; if(sourceArr[i] &gt; sourceArr[j]) tempArr[k++] = sourceArr[j++]; else tempArr[k++] = sourceArr[i++]; &#125; while(i != midIndex+1) tempArr[k++] = sourceArr[i++]; while(j != endIndex+1) tempArr[k++] = sourceArr[j++]; for(i=startIndex; i&lt;=endIndex; i++) sourceArr[i] = tempArr[i];&#125; void MergeSort(int sourceArr[], int tempArr[], int startIndex, int endIndex)&#123; int midIndex; if(startIndex &lt; endIndex) &#123; midIndex = (startIndex + endIndex) / 2; // 递归，二路归并 MergeSort(sourceArr, tempArr, startIndex, midIndex); MergeSort(sourceArr, tempArr, midIndex+1, endIndex); // 内部排序 Merge(sourceArr, tempArr, startIndex, midIndex, endIndex); &#125;&#125;8 计数排序计数排序是一个非基于比较的排序算法，它的优势在于在对一定范围内的整数排序时，它的复杂度为Ο(n+k)（其中k是整数的范围），快于任何比较排序算法。当然这是一种牺牲空间换取时间的做法，而且当O(k)&gt;O(nlogn)的时候其效率反而不如基于比较的排序。思路：根据元素大小作为另一个数组的序号，再统计该元素的个数，最后按序输出。1234567891011121314# define MAX 1000int bucket[MAX];void CountSort(int arr[], int n) &#123; for (int i=0; i&lt;n; i++) &#123; bucket[arr[i]]++; &#125; int k = 0; for (int j=0; j&lt;MAX; j++) &#123; while(bucket[j] &gt; 0) &#123; arr[k++] = j; bucket[j] --; &#125; &#125;&#125;9 桶排序计数排序的改进。将数据分到有限数量的桶里，每个桶再分别排序。最好情况下使用线性时间O(n)，桶排序的时间复杂度，取决于对各个桶之间数据进行排序的时间复杂度，因为其它部分的时间复杂度都为O(n)。很显然，桶划分的越小，各个桶之间的数据越少，排序所用的时间也会越少。但相应的空间消耗就会增大。12345678910111213141516171819202122232425#define DEFAULT_BUCKET_SIZE 5void BucketSort(int arr[], int n, int bucketSize) &#123; if(n == 0) return; int minValue = arr[0], maxValue = arr[0]; for(int i = 1; i &lt; n; i++) &#123; if(arr[i] &gt; maxValue) maxValue = arr[i]; if(arr[i] &lt; minValue) minValue = arr[i]; &#125; bucketSize = bucketSize || DEFAULT_BUCKET_SIZE; // 默认每个桶的容量为5 int bucketNum = (maxValue-minValue)/bucketSize + 1;// 桶的数量 vector&lt; vector&lt;int&gt; &gt; buckets(bucketNum); for(int i=0; i&lt;n; i++) buckets[(arr[i]-minValue)/bucketSize].push_back(arr[i]); int sortIndex = 0; for(int i=0; i&lt;buckets.size(); i++) &#123; insertSort(buckets[i]); // 插入排序 for(int j=0; j&lt;buckets[i].size(); j++) arr[sortIndex++] = buckets[i][j]; &#125;&#125;10 基数排序基数排序是按照低位先排序，然后收集；再按照高位排序，然后再收集；依次类推，直到最高位。1234567891011121314151617181920212223242526272829// LSDvoid RedixSort(int arr[], int n, int maxDigit) &#123; int maxValue = arr[0], maxDigit = 0; for (int i=1; i&lt;n; i++) &#123; if (arr[i] &gt; maxValue) maxValue = arr[i]; &#125; while (maxValue) &#123; maxValue /= 10; maxDigit ++; &#125; int mod = 10; int dev = 1; vector&lt; vector&lt;int&gt; &gt; buckets(10); for(int i=0; i&lt;maxDigit; i++, dev*=10, mod*=10) &#123; for(int j=0; j&lt;n; j++) &#123; int bid = arr[j] % mod / dev;//取出对应数位作为桶编号 buckets[bid].push_back(arr[j]); &#125; int sortIndex = 0; for(int i=0; i&lt;buckets.size(); i++) &#123; for(int j=0; j&lt;buckets[i].size(); j++) arr[sortIndex++] = buckets[i][j]; buckets[i].clear(); &#125; &#125;&#125;11 Sortsort并不是简单的快速排序，它对普通的快速排序进行了优化，此外，它还结合了插入排序和推排序。系统会根据你的数据形式和数据量自动选择合适的排序方法，这并不是说它每次排序只选择一种方法，它是在一次完整排序中不同的情况选用不同方法，比如给一个数据量较大的数组排序，开始采用快速排序，分段递归，分段之后每一段的数据量达到一个较小值后它就不继续往下递归，而是选择插入排序，如果递归的太深，他会选择推排序。123456789#include &lt;algorithm&gt; // 头文件sort(a, a+n, cmp);// 自定义排序方式void cmp(int a, int b)&#123; return a &lt; b;&#125;总结稳定：如果a原本在b前面，而a=b，排序之后a仍然在b的前面。时间复杂度：对排序数据的总的操作次数。反映当n变化时，操作次数呈现什么规律。空间复杂度：是指算法在计算机内执行时所需存储空间的度量，它也是数据规模n的函数。参考链接十大经典排序算法sort函数详解]]></content>
      <categories>
        <category>数据结构</category>
      </categories>
      <tags>
        <tag>C/C++</tag>
        <tag>sort</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文章加密TEST1]]></title>
    <url>%2F%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86TEST1%2F</url>
    <content type="text"><![CDATA[这只是一种障眼法文件/themes/next/layout/_partials/head.swig ，添加如下代码12345678910&lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密码错误！'); history.back(); &#125; &#125; &#125;)();&lt;/script&gt;文章属性添加1password: # 你设定的密码​]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>encrypt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文章加密TEST2]]></title>
    <url>%2F%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86TEST2%2F</url>
    <content type="text"><![CDATA[Please enter the password to read. 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]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>encrypt</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（五）Hexo博客优化和补充]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%94%EF%BC%89Hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E5%92%8C%E8%A1%A5%E5%85%85%2F</url>
    <content type="text"><![CDATA[SEOSEO（Search Engine Optimization），汉译为搜索引擎优化。搜索引擎优化是一种利用搜索引擎的搜索规则来提高目前网站在有关搜索引擎内的自然排名的方式。——百度百科1 站点地图站点地图是一个网站所有链接的容器。很多网站的连接层次比较深，爬虫很难抓取到，站点地图可以方便爬虫抓取网站页面，通过抓取网站页面，清晰了解网站的架构，网站地图一般存放在根目录下并命名sitemap，为爬虫指路，增加网站重要内容页面的收录。——百度百科安装插件12$ npm install hexo-generator-sitemap --save $ npm install hexo-generator-baidu-sitemap --save站点配置文件1234567# URL## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'url: http://www.danboard.meroot: /permalink: :title/ # 链接后缀permalink_defaults: # 默认值 lang: enpermalink默认是:year/:month/:day/:title/ ，这样我们的文章生成的连接就会是sitname/year/month/day/title ，网站的连接层次比较深，很难被爬虫抓取，所以可以减少连接的层次验证执行修改后，可以在public目录中看到生成的两个文件sitemap.xml和baidusitemap.xml在浏览器中输入相应地址，如http://www.danboard.me/sitemap.xml来检查是否生成成功​2 谷歌收录效率非常高，但需要翻墙，也就是说你的博客只能在境外才能被搜索到首先检查站点是否被收录尝试使用Google Search Console登录/注册添加站点验证站点提交站点地图抓取 &gt; 站点地图验证收录​3 百度收录同样是，登录/注册 $\rightarrow$ 添加站点 $\rightarrow$ 验证站点 $\rightarrow$ 提交站点地图提交链接效率：主动推送 &gt; 自动推送 &gt; sitemap主动推送安装插件1$ npm install hexo-baidu-url-submit --save站点配置文件，添加12345baidu_url_submit: count: 1 # 提交最新的一个链接 host: www.danboard.me # 你的博客站点 token: your_token # 你的密钥 path: baidu_urls.txt # 新链接存放文档your_token:提交更新发布，使用命令hexo deploy时提交123456deploy:- type: git repo: - 你的github项目地址 branch: master # old- type: baidu_url_submitter # new注意：-属于一部分，注意格式对齐，否则会报错自动推送主题配置文件 ，字段baidu_push12# Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEObaidu_push: ture脚本位置位于themes/next/layout/_third-party/seo/baidu-push.swigsitemap与谷歌提交一致！！！还没有结束，百度收录不仅慢而且也比较麻烦了，因为github屏蔽了百度的爬虫，所以部署在github上的静态站点很难被百度搜索到。解决方法：将静态Pages托管到Coding上，重新解析一个新的二级域名，这样Coding和Github上的Pages就变成了两个独立的博客了。同一域名解析到不同的IP，保持之前的配置不改动，通过配置DNS，使国内的线路流量分配到Coding上，而其他线路分配到GitHub。这样，百度抓取就会跑到Coding上去。4 DNS流量分发Coding配置与GitHub是一致的，创建项目 $\rightarrow$ 开启静态Pages $\rightarrow$ 绑定域名站点配置文件，找到deploy：1234567deploy:- type: git repo: - 你的github项目地址 - 你的coding醒目地址 branch: master # old- type: baidu_url_submitter # newDNSPOD已被腾讯收购，可以登录DNSPOD / 腾讯云修改域名服务器，以GoDaddy域名为例先进入腾讯云控制台 $\rightarrow$ 域名管理，可以看到下方提示登录GoDaddy进入域名DNS管理，修改DNS，选择自定义返回腾讯云，进行域名解析​静态文件加载静态文件是一些js、css、html等文件，一般网站都会调用一大堆这些文件，如果调用的一些静态资源是通用的文件（第三方库），如jquery、fancybox，可以设定成合适的 CDN 地址，从而加速网站的运行。参考：NexT文档主题配置文档，字段vendors12345678910111213141516171819202122232425262728293031323334353637383940414243444546# Script Vendors.# Set a CDN address for the vendor you want to customize.# For example# jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js# Be aware that you should use the same version as internal ones to avoid potential problems.# Please use the https protocol of CDN files when you enable https on your site.vendors: # Internal path prefix. Please do not edit it. _internal: lib # Internal version: 2.1.3 jquery: //cdn.jsdelivr.net/jquery/2.1.3/jquery.min.js # Internal version: 2.1.5 # See: http://fancyapps.com/fancybox/ fancybox: //cdn.jsdelivr.net/fancybox/2.1.5/jquery.fancybox.pack.js fancybox_css: //cdn.jsdelivr.net/fancybox/2.1.5/jquery.fancybox.min.css # Internal version: 1.0.6 # See: https://github.com/ftlabs/fastclick fastclick: //cdn.jsdelivr.net/fastclick/1.0.6/fastclick.min.js # Internal version: 1.9.7 # See: https://github.com/tuupola/jquery_lazyload lazyload: //cdn.jsdelivr.net/jquery.lazyload/1.9.3/jquery.lazyload.min.js # Internal version: 1.2.1 # See: http://VelocityJS.org velocity: //cdn.jsdelivr.net/velocity/1.2.3/velocity.min.js # Internal version: 1.2.1 # See: http://VelocityJS.org velocity_ui: //cdn.jsdelivr.net/velocity/1.2.3/velocity.ui.min.js # Internal version: 0.7.9 # See: https://faisalman.github.io/ua-parser-js/ ua_parser: //cdn.jsdelivr.net/ua-parser.js/0.7.10/ua-parser.min.js # Internal version: 4.6.2 # See: http://fontawesome.io/ fontawesome: //maxcdn.bootstrapcdn.com/font-awesome/4.6.2/css/font-awesome.min.css # Internal version: 1.0.2 # See: https://github.com/HubSpot/pace pace: //cdn.bootcss.com/pace/1.0.2/pace.min.js pace_css: //cdn.bootcss.com/pace/1.0.2/themes/blue/pace-theme-flash.min.cssGoogle引用Google被墙，所以有关谷歌类的引用都会导致引用失败，使网站加载变慢。例如：字体应用fonts.googleapis.com网上看到两种替代的：360：fonts.useso.com中科大： fonts.lug.ustc.edu.cn不过现在，问题来了，谷歌字体库解封了，360好像关了，中科大不稳定，所以呢？修改前还是要甄别一下站长工具如果需要修改，可以查看主题配置文件，字段font 以及文件themes/next/layout/_partials/head/external-fonts.swig博文压缩NexT主题在解析markdown文件时生成的代码会包含大量的空白，增加了文档的大小，影响网站的加载速度。安装插件1$ npm install --save hexo-all-minifierhexo-all-minifier文档主题配置文件，添加12345678910111213141516171819202122232425262728293031323334353637all_minifier: truejs_concator: enable: false bundle_path: '/js/bundle.js' front: false silent: falsehtml_minifier: # html压缩 enable: true ignore_error: false silent: false exclude: css_minifier: # css压缩 enable: true silent: false exclude: - '*.min.css'js_minifier: # js压缩 enable: true mangle: true silent: false output: compress: exclude: - '*.min.js'image_minifier: # 图片压缩 enable: true interlaced: false multipass: false optimizationLevel: 2 pngquant: false progressive: false silent: false​遇到问题1 注意备份之前遇到一个很严重的问题，hexo命令打错了本来是想安装某个插件，用了一下简写命令hexo i xx一不小心就点了回车，hexo i将文件都初始化了，打开链接一片空白自己还庆幸着懂得版本控制，可是一想，我一直用是hexo命令，只是生成了一些静态文件提交到github上，并没，有将整个源文件push上去，一下子头就大了最后，发现只有几个文件清空了，通过版本控制在提交到github的静态文件目录找到了对应的文件，及时修改回来。所以呢，这一波折，就是要告诉我，要时刻做好版本控制。GitHub上的私人仓库是要收费，而我们的源码中又包含了很多密钥，又不能放到公开仓库中。所以，要找替代品，国内有很多平台模仿GitHub的，例如Coding、码云之类，同样可以通过git控制，还提供免费的私人仓库。同时，该项目可以在其他电脑上clone，编辑并上传。2 大小写问题GitHub上好像对大小写不敏感，但是链接却对大小写敏感。我把一个标签or标题字母的大小写改了，结果就404回到GitHub上你可以发现仓库里文件名是没有改变的，所以呢，注意字母大小写问题，改动后的文件可以先不提交，GitHub自动把原来的文件删除后再提交，就不会出错了。3 手机适配电脑的屏幕比较大，同样的页面大小放到手机上坑定就不合适了。NexT主题已经初步适配了手机浏览器模式，但一些我们自定义的布局，还需要自己调整。例如，在前文讲过的GitHub边角问题，我们都可以在/themes/next/source/css/_custom/custom.styl文件中重新定义布局，考虑标签优先权问题，可以加上!important就有绝对优先权了。通过源代码，可以看到一种方便的手机浏览器适配方法，直接在标签内加上+mobile{}，例如我在一篇文章内添加了一个音乐播放器，电脑上宽度是合适的，手机上就爆了，修改如下：12345678.post .aplayer &#123; width: 520px; margin: 0 auto; +mobile() &#123; width: auto; margin: 0 auto; &#125; &#125;4 开发文档开发文档很重要，像Hexo文档提供了配置步骤、目录说明、主题插件等等，了解下开发文档，自定义修改的时候会更加方便。参考链接想让你的博客被更多的人在搜索引擎中搜到吗？Hexo插件之百度主动提交链接百度无法爬取Github Pages静态网站解决方案]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（四）Hexo高阶之第三方插件]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%9B%9B%EF%BC%89Hexo%E9%AB%98%E9%98%B6%E4%B9%8B%E7%AC%AC%E4%B8%89%E6%96%B9%E6%8F%92%E4%BB%B6%2F</url>
    <content type="text"><![CDATA[Hexo 静态站点具有一定的局限性，需要借助第三方插件来扩展站点的功能。网上很多教程都是直接添加某些代码，但现在很多也已经merge到源码了，所以修改就比较方便了，true or false，开启或关闭功能，有些功能可能还需要在第三方服务上注册账号，获取API和APK 。利用Hexo搭建博客的人很多，但不都是千篇一律的，有些好的还是要借鉴的，更好的是能够有自己的风格~~~RSS什么是RSS？简易信息聚合（也叫聚合内容）是一种RSS基于XML标准，在互联网上被广泛采用的内容包装和投递协议。RSS(Really Simple Syndication)是一种描述和同步网站内容的格式，是使用最广泛的XML应用。RSS搭建了信息迅速传播的一个技术平台，使得每个人都成为潜在的信息提供者。发布一个RSS文件后，这个RSS Feed中包含的信息就能直接被其他站点调用，而且由于这些数据都是标准的XML格式，所以也能在其他的终端和服务中使用，是一种描述和同步网站内容的格式。——百度百科1 生成RSS文件安装hexo-generator-feed插件1$ npm install --save hexo-generator-feed打开站点配置文件 ，字段Extensions，添加如下123# Extensions## Plugins: http://hexo.io/plugins/plugins: hexo-generate-feed打开主题配置文件 ，字段rss，添加如下1rss: /atom.xml配置完成，执行下列命令，可以看到/public文件夹中多了一个atom.xml文件1$ hexo g发布之后，在侧边栏会生成一个RSS图标2 RSS迁移安装hexo-migrator-rss插件1$ npm install --save hexo-migrator-rss执行下列命令，从 RSS 迁移所有文章。source 可以是文件路径或网址。1$ hexo migrate rss &lt;source&gt;评论系统NexT支持多款评论系统如果想要取消某个页面or文章的评论，在文章的属性中增加comments: false1 Valine一款基于Leancloud的快速、简洁且高效的无后端评论系统。支持匿名评论效果图：获取APP ID 和 APP KEY点击注册账号点击创建应用进入应用 &gt; 设置 &gt; 应用Key，可以看到APP ID 和 APP KEY配置打开主题配置文件 ，字段Valine12345678910111213# Valine.# You can get your appid and appkey from https://leancloud.cn# more info please open https://valine.js.orgvaline: enable: true appid: # 填写获取的APP ID appkey: # 填写获取的APP KEY notify: true # 邮件提醒 verify: true # 验证码 placeholder: Just go go # 评论提示语 avatar: mm # 头像，具体看Valine官网 guest_info: nick,mail,link # 评论者相关属性 pageSize: 10 # 分页2 畅言需要实名登录，最不能接受的是还要绑定手机获取APP ID 和 APP KEY点击注册账号比较麻烦的是站点需要备案，没有备案只能使用15天有种投机取巧的方式，自行搜索进入 &gt; 后台总览 ，就可以看到了配置打开主题配置文件 ，字段changyan1234changyan: enable: true appid: # 填写获取的APP ID appkey: # 填写获取的APP KEY​访问统计页脚设计：/themes/next/layout/_partials/footer.swig文章设置：/themes/next/layout/_macro/post.swig1 不蒜子统计进入主题配置文件 ，字段busuanzi相关设置文件/themes/next/layout/_third-party/analytics/busuanzi-counter.swig123456789101112131415busuanzi_count: # count values only if the other configs are false enable: true # custom uv span for the whole site 整个网站访问用户量 site_uv: true site_uv_header: 本站访客数 site_uv_footer: 人次 # custom pv span for the whole site 整个网站访问总次数 site_pv: true site_pv_header: 本站总访问量 site_pv_footer: 次 # custom pv span for one page only 一篇文章的阅读次数 page_pv: true page_pv_header: 本文总阅读量 page_pv_footer: 次2 LeanCloud统计1234leancloud_visitors: # 文章阅读次数统计 enable: true appid: # 填写获取的APP ID appkey: # 填写获取的APP KEY3 字数统计安装插件1$ npm install --save hexo-wordcount配置123456post_wordcount: item_text: true wordcount: false # 文章字数 min2read: false # 阅读时长预计 totalcount: true # 全站字数 separated_meta: false # 分行博文置顶修改插件hero-generator-index ，文件node_modules/hexo-generator-index/lib/generator.js12345678910111213141516// var posts = locals.posts.sort(config.index_generator.order_by);// 改为var posts = locals.posts;posts.data = posts.data.sort(function(a, b) &#123; if(a.top &amp;&amp; b.top) &#123; // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 &#125; else if(a.top &amp;&amp; !b.top) &#123; // 只有一篇文章top有定义，将排在最前面 return -1; &#125; else if(!a.top &amp;&amp; b.top) &#123; return 1; &#125; else return b.date - a.date; // 都没定义按照文章日期降序排&#125;);文章属性添加top值，数值越大越靠前1top: # 数值文章搜索安装插件1$ npm install hexo-generator-searchdb --save站点配置文件 ，添加12345search: path: search.xml field: post format: html limit: 10000主题配置文件 ，字段local_search123456789# Local search# Dependencies: https://github.com/flashlab/hexo-generator-searchlocal_search: enable: ture # if auto, trigger search by changing input # if manual, trigger search by pressing enter key or search button trigger: auto # show top n results per article, show all results by setting to -1 top_n_per_article: 1​添加挂件安装插件1$ npm install -save hexo-helper-live2d安装挂件预览1$ npm install --save live2d-widget-model-xxx # xxx为挂件名配置站点配置文件 ，添加123456789101112live2d: enable: true scriptFrom: local model: # 挂件模型 use: live2d-widget-model-hijiki display: # 位置 # position: right width: 80 height: 160 bottom: -120 mobile: # 手机显示 show: false​在线联系基于DaoVoice实现注册账号邀请码 832ef3b6获取API应用设置 &gt; 安装到网站配置文件/themes/next/layout/_partials/head.swig ，添加123456789&#123;% if theme.daovoice %&#125; &lt;script&gt; (function(i,s,o,g,r,a,m)&#123;i["DaoVoiceObject"]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset="utf-8";m.parentNode.insertBefore(a,m)&#125;)(window,document,"script",('https:' == document.location.protocol ? 'https:' : 'http:') + "//widget.daovoice.io/widget/0f81ff2f.js","daovoice") daovoice('init', &#123; app_id: "&#123;&#123;theme.daovoice_app_id&#125;&#125;" &#125;); daovoice('update'); &lt;/script&gt;&#123;% endif %&#125;主题配置文件 ， 添加123# Online contact daovoice: truedaovoice_app_id: # 你获取的API效果 当有人发信息给你的时候，你可以通过DaoVoice在线交流，也可以关注DaoVoice小程序，绑定你的账号添加音乐网易云音乐外链​ 单曲复制代码，粘贴在你想要的位置，可以是文章 或者是 侧边栏歌单自己的歌单是没有生成外链。分享 $\rightarrow$ 动态 $\rightarrow$ 外链效果可以缩放Aplayer引入js文件APlayer.min.js1&lt;script src="https://cdnjs.cloudflare.com/ajax/libs/aplayer/1.6.0/APlayer.min.js"&gt;&lt;/script&gt;位置themes/next/layout/_partials/head.swigMeting.min.js1&lt;script src="https://cdn.jsdelivr.net/npm/meting@1.0.1/dist/Meting.min.js"&gt;&lt;/script&gt;位置themes/next/layout/_partials/footer.swig添加音乐音乐平台1&lt;div class=&quot;aplayer&quot; data-id=&quot;&quot; data-server=&quot;&quot;&gt;&lt;/div&gt;参数解释：data-id: 歌曲/专辑/歌单 IDdata-server: 音乐平台，支持如下参数netease （网易云音乐）tencent （qq音乐）xiami （虾米音乐）kugou （酷狗音乐）baidu （百度音乐）data-type: 请求类型，支持如下参数song （单曲）album （专辑）playlist （歌单）search （搜索）​音乐外链（参数名可能与Aplayer中的不一样）1&lt;div class=&quot;aplayer&quot; data-title=&quot;&quot; data-author=&quot;&quot; data-url=&quot;&quot; data-pic=&quot;&quot; data-lrc=&quot;&quot;&gt;&lt;/div&gt;参数解释：data-title: 歌名data-author: 歌手data-url: 音乐链接data-pic: 音乐封面data-lrc: 歌词​其他参数data-mode: 播放模式random （随机）single （单曲）circulation （列表循环）order （列表）data-autoplay: 自动播放falsetrue​推荐Aplayer自定义比iframe还好，可以加载有版权问题的音乐，墙裂推荐！！！(｡･∀･)ﾉﾞ嗨！一下这部分纯属玩乐，有点酷炫，我把它设置在了头像上，可以点击试一试音乐有点鬼畜，想不有什么好的，节奏可以配上该动画参考来自：Hexo high一下小功能资源js：http://oxv1k8kvi.bkt.clouddn.com/High.js可以自行下载来看一下里面的音乐地址和css可以替换一下mp3：http://oxv1k8kvi.bkt.clouddn.com/harlem-shake.mp3css：http://oxv1k8kvi.bkt.clouddn.com/harlem-shake-style.css配置文件/themes/next/layout/_partials/head.swig，添加1&lt;script type="text/javascript" src="http://oxv1k8kvi.bkt.clouddn.com/High.js"&gt;&lt;/script&gt;然后，在你想要点击实现high一下功能的地方，添加1&lt;a title=&quot;(｡･∀･)ﾉﾞ嗨！一下&quot; style=&quot;underline: none&quot; rel=&quot;alternate&quot; class=&quot;mw-harlem_shake_slow wobble shake&quot; href=&quot;javascript:shake()&quot;&gt; XXX &lt;/a&gt;​参考链接Next文档hexo的next主题个性化配置教程Valine – 一款极简的评论系统hexo-helper-live2dHexo音乐播放完美支持https和多平台AplayerHexo high一下小功能]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（三）Hexo个性化配置进阶]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89Hexo%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E8%BF%9B%E9%98%B6%2F</url>
    <content type="text"><![CDATA[所谓的进阶，无非就是换个主题呀，添加一些小功能……看个人喜好吧！说到底，大部分都是参照网上的~~~主题安装Hexo官网提供了丰富的主题，挑选一款适合自己的，执行以下命令：basic1$ git clone [主题地址] [存放位置]例如我选择的主题是Next1$ git clone https://github.com/iissnan/hexo-theme-next themes/next完成之后，在themes目录下就会多了一个主题next的文件夹点击预览 themes进入站点配置文件 ，找到theme字段，修改为1theme: next进入主题配置文件 ，找到scheme字段，里面有next主题四种模板。12345# Schemesscheme: Muse# scheme: Mist# scheme: Pisces# scheme: Gemini首先使用命令，打开http://localhost:4000在本地预览，切换scheme刷新下页面看看效果1$ hexo s -gNext主题主题目录.├── _config.yml├── languages├── layout├── scripts└── source具体解释基础配置进入站点配置文件 ，字段Site1234567# Sitetitle: Danboard # 网站标题subtitle: 踮起脚尖，另一种高度 # 副标题description: # 描述，显示在侧边栏author: Danboard # 作者language: zh-Hans # 语言timezone: Asia/Shanghai # 时间站点logo进入主题配置文件 ，字段favicon12345favicon: small: /images/favicon-16x16-next.png medium: /images/favicon-32x32-next.png apple_touch_icon: /images/apple-touch-icon-next.png safari_pinned_tab: /images/logo.svg图标推荐：Font Awesome阿里图标下载图标，指定大小，修改名称，存放在source/images/内菜单进入主题配置文件 ，字段menu默认支持Font Awesome图标，所以||后只要跟上图标名就ok，可以自行更换123456789menu: home: / || home #about: /about/ || user #tags: /tags/ || tags #categories: /categories/ || th archives: /archives/ || archive #schedule: /schedule/ || calendar #sitemap: /sitemap.xml || sitemap #commonweal: /404/ || heartbea选择自己想要的菜单项，取消注释新建一个about（关于我）页面1$ hexo new page &quot;about&quot;在hexo/source/下生成about/index.md ，编辑index.md文档新建一个tags（标签）页面1$ hexo new page &quot;tages&quot;在hexo/source/下生成tages/index.md ，修改如下1type: tages新建一个categories（分类）页面1$ hexo new page &quot;categories&quot;在hexo/source/下生成/index.md ，修改如下1type: categories新建一个腾讯公益404页面在hexo/source/下新建一个404.html的文件，内容如下：123456789101112131415161718&lt;!DOCTYPE HTML&gt;&lt;html&gt;&lt;head&gt; &lt;meta http-equiv="content-type" content="text/html;charset=utf-8;"/&gt; &lt;meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" /&gt; &lt;meta name="robots" content="all" /&gt; &lt;meta name="robots" content="index,follow"/&gt; &lt;link rel="stylesheet" type="text/css" href="https://qzone.qq.com/gy/404/style/404style.css"&gt;&lt;/head&gt;&lt;body&gt; &lt;script type="text/plain" src="http://www.qq.com/404/search_children.js" charset="utf-8" homePageUrl="/" homePageName="返回主页"&gt; &lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/data.js" charset="utf-8"&gt;&lt;/script&gt; &lt;script src="https://qzone.qq.com/gy/404/page.js" charset="utf-8"&gt;&lt;/script&gt;&lt;/body&gt;&lt;/html&gt;修改菜单1commonweal: /404.html || heartbea侧边栏进入主题配置文件 ，字段sidebar12345678sidebar: position: left # 靠左 #position: right # 靠右 #display: post # 默认，在文章页面（拥有目录列表）时显示 #display: always # 在所有页面中都显示 display: hide # 在所有页面中都隐藏（可以手动展开） #display: remove # 完全移除头像添加头像进入主题配置文件 ，字段avatar12avatar: /images/avatar.png # 放在source/images/# avatar: http://example.com/avatar.png # 网上链接 url圆形头像文件\themes\next\source\css\_common\components\sidebar\sidebar-author.styl ，添加代码：12345678.site-author-image &#123; /* 头像圆形 */ border-radius: 80px; -webkit-border-radius: 80px; -moz-border-radius: 80px; box-shadow: inset 0 -1px 0 #333sf;&#125;头像旋转同上，添加代码：1234567891011121314151617181920212223242526272829.site-author-image &#123; /* 鼠标经过头像旋转360度 */ -webkit-transition: -webkit-transform 1.5s ease-out; -moz-transition: -moz-transform 1.5s ease-out; transition: transform 1.5s ease-out;&#125;img:hover &#123; /* 鼠标经过头像旋转360度 */ -webkit-transform: rotateZ(360deg); -moz-transform: rotateZ(360deg); transform: rotateZ(360deg);&#125;/* Z 轴旋转动画 */@keyframes play &#123; 0% &#123; transform: rotateZ(0deg); &#125; 100% &#123; transform: rotateZ(-360deg); &#125;&#125;@-webkit-keyframes play &#123; // 同上&#125;@-moz-keyframes play &#123; // 同上&#125;社交链接进入主题配置文件 ，字段social12345678910111213141516social: GitHub: https://github.com/XXX || github #E-Mail: mailto:yourname@gmail.com || envelope #Google: https://plus.google.com/yourname || google #Twitter: https://twitter.com/yourname || twitter #FB Page: https://www.facebook.com/yourname || facebook #VK Group: https://vk.com/yourname || vk #StackOverflow: https://stackoverflow.com/yourname || stack-overflow #YouTube: https://youtube.com/yourname || youtube #Instagram: https://instagram.com/yourname || instagram #Skype: skype:yourname?call|chat || skypesocial_icons: enable: true icons_only: false transition: false推荐阅读 or 友情链接进入主题配置文件 ，字段Blogrolls1234567# Blog rollslinks_icon: linklinks_title: 友情链接# links_layout: block # 块级 分行显示links_layout: inline # 内联 同行显示links: # 添加友链 SYSU: http://www.sysu.edu.cn/GitHub边角效果：文件themes/next/layout/_layout.swig ，复制代码放在&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;下，修改href为自己的github地址因为我是把github的logo放在了左上角，在手机上查看就会发现logo与菜单重和了如果想要修改边角位置，可以在文件themes/next/source/css/_custom/custom.styl 中进行更改12345678svg &#123; float: left; transform: scale(-1, 1); +mobile() &#123; float: right; transform: scale(1, 1); &#125; &#125;GitHub cornerfork me on GitHub​动画效果背景动画进入主题配置文件 ，字段canvas_nest12345# 4种，开启true，关闭falsecanvas_nest: falsethree_waves: falsecanvas_lines: truecanvas_sphere: false进度条进入主题配置文件 ，字段Progress1234# Progress bar in the top during page loading.pace: truepace_theme: pace-theme-flash文章编辑首页预览多篇文章，通过阅读全文打开&lt;!--more--&gt;截断 推荐在想要显示在首页的文字下方添加标签&lt;!--more--&gt;文章属性description123456---title: 文章标题date: 发布时间tages: 文章标签description: 摘要，显示在首页---自动显示进入主题配置文件 ，字段auto_excerpt123auto_excerpt: enable: true length: 150 # 截取长度为150个字符文章背景添加边框阴影，突出文章，打开文件themes/next/source/css/_custom/custom.styl ，该文件可以让自定义一些布局，通过浏览器的开发者工具找到对应标签，就可以进行设置了。12345678.post &#123; margin-top: 60px; margin-bottom: 60px; padding: 25px; background-color: #fff; -webkit-box-shadow: 0 0 10px rgba(202, 203, 204, .5); -moz-box-shadow: 0 0 10px rgba(202, 203, 204, .5);&#125;文章分割线文章添加边框阴影后，分割线就显得有点多余，在custom.styl文件中添加1234.posts-expand .post-eof &#123; margin: 0px; background-color: rgba(255, 255, 255, 0);&#125;代码高亮进入主题配置文件 ，字段highlight123# Available value:# normal | night | night eighties | night blue | night brighthighlight_theme: normal文章打赏进入主题配置文件 ，字段reward，将支付宝or微信收款二维码图片保存到文件夹/themes/next/source/images/下12345# Reward#reward_comment: Donate comment herewechatpay: /images/wechatpay.jpgalipay: /images/alipay.jpg# bitcoin: /images/bitcoin.png文章分享Next这里提供了三种：jiathis、百度、豆瓣，效果都差不多自定义文件都在themes/next/layout/_partials/share/jiathis分享1jiathis: true百度分享1234baidushare: type: button# Available value: # 两种样式 下方 | 侧边# button | slide豆瓣（自己试了，不能用）1duoshuo_share: true文章加密这只是一种障眼法文件/themes/next/layout/_partials/head.swig ，添加如下代码12345678910&lt;script&gt; (function()&#123; if('&#123;&#123; page.password &#125;&#125;')&#123; if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123; alert('密码错误！'); history.back(); &#125; &#125; &#125;)();&lt;/script&gt;文章属性添加1password: # 你设定的密码​参考链接Next文档hexo的next主题个性化配置教程]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
        <tag>next</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[端口占用的解决方法]]></title>
    <url>%2F%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95%2F</url>
    <content type="text"><![CDATA[有时候明明打开了服务器，端口也配置好了，就是不能访问，这时候可能要考虑是否是端口被占用了，端口被占用有时候是没有提示的。解决的话，有两种方法：第一种，改端口；第二种，禁用占用该端口的软件。下面只介绍后者：打开命令管理器，快捷键win+R查找占用端口的程序对应的PID1netstat -ano|findstr [端口号]稍微接解释一下netstat，详细资料可以输入 netstat ? 或是找度娘-a 显示所有连接和侦听端口。-n 以数字形式显示地址和端口号。-o 显示拥有的与每个连接关联的进程 ID。（合并指令 -ano 就是列出所有端口的情况了）findstr 在端口使用情况中找到我们需要的端口根据PID查找端口占用的程序1tasklist|findstr [PID]tasklist：显示在本地或远程机器上当前运行的进程列表解除占用打开任务管理器，选择详细信息 ，点击程序，再点右下方的结束任务就ok了。]]></content>
      <categories>
        <category>计算机网络</category>
      </categories>
      <tags>
        <tag>port</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（二）配置Hexo博客基础框架]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89%E9%85%8D%E7%BD%AEHexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E6%A1%86%E6%9E%B6%2F</url>
    <content type="text"><![CDATA[什么是 Hexo？Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。—来自“Hexo文档”配置环境Node.jsNode.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。Node.js 的包管理器 npm，是全球最大的开源库生态系统。什么是npm？允许用户从NPM服务器下载别人编写的第三方包到本地使用。允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。总而言之，就是要使用npm来安装Hexo​安装Hexo打开Git Bash 或是 命令管理器，执行以下命令就可以了，这样本地就有了hexo的包路径一般在C:/Users/用户名/AppData/Roaming/npm/hexo1$ npm install hexo-cli -g部署博客hexo实例创建一个文件夹，存放blog的配置文件执行hexo命令1$npm init初始完成，可以看到文件夹中多了以下文件：node_modules：依赖包（一些黑操作，官网有相应的包，也可以自己编写）scaffolds：文章模板（post默认、page、draft）source：存放文章（/_post/xx.md）themes：主题（默认landscape，有点丑，hexo官网预览，下载自己心仪的主题）_config.yml：整个博客的配置（themes中也有一个同名文件，为了区分前者称为站点配置文件 ，后者称为主题配置文件）package.json：应用程序的信息部署到github打开站点配置文件 ：_config.yml，Ctrl+F找到deploy，进行如下配置，最后保存1234deploy: type: git repo: 你的github项目地址 branch: master你的github项目地址执行下面命令123$ hexo clean$ hexo generate$ hexo serverhexo文件解释与命令，请参照Hexo文档进行本地预览打开浏览器输入：localhost:4000hexo server默认打开的是4000端口如果不能打开，有可能是4000端口被其他程序给占用了第一种方法，请看端口被占用的解决方法第二种方法，切换端口1$ hexo server -p [端口号]​上传到GitHub服务器如果预览没问题的话，就可以上传到服务器了123$ hexo clean$ hexo generate$ hexo deploy​ 发布文章1$ hexo new [layout] &lt;title&gt;layout：文件夹scaffolds中的文章模板（post默认、page、draft），也可以自定义title：文章标题最后还是一样预览再发布到github服务器就ok啦~​参考链接Hexo文档使用hexo+github搭建免费个人博客详细教程]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[好久不见]]></title>
    <url>%2F%E5%A5%BD%E4%B9%85%E4%B8%8D%E8%A7%81%2F</url>
    <content type="text"><![CDATA[Please enter the password to read. ]]></content>
      <categories>
        <category>你的名字</category>
      </categories>
      <tags>
        <tag>friend</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[使用GitHub+Hexo搭建个人博客（一）GitHub新建一个blog项目]]></title>
    <url>%2F%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%80%EF%BC%89GitHub%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AAblog%E9%A1%B9%E7%9B%AE%2F</url>
    <content type="text"><![CDATA[一个博客就像自己的一片小天地搭建一个属于自己的博客，记录、整理、分享自己的所见所闻、所学所感。网上有许多搭建博客的平台，但个人只了解了github，比较方便，提供域名和服务器，由hexo提供个性模板，如果有自己的域名，还可以解析到博客链接上，更加自主个性。GitHub服务器拥有一个github账号点击注册点击新建一个项目注意：Repository name为自己github账号的名字(例如我的账号YH-Chen) + .github.io，博客地址就是该名字yh-chen.github.io如果是自定义的名称(例如Danboard)，博客的地址就变成yh-chen.github.io/Danboard。设置博客进入项目，选择settings1） 如果Repository name直接是xxx.github.io，直接拉到最后，可以看到GitHub Pages，它已经自动生成博客链接了，打开链接只显示标题xxx.github.io。如果你拥有自己的个性域名，先解析到你的博客地址，再在Custom domain里填写你的域名，就可以使用自己的域名登录自己的博客了。点击choose a theme可以选择github默认的博客主题选择之后，它会打开创建项目时保存的README.md文件，编辑的内容为markdown语言基础，以后的博客也是用markdown来编辑。直接点击commit changes就可以了。2） 如果Repository name是一般的名称，同样在设置中拉到GitHub Pages，将Source改为master branch就可以，其他的就跟上面一样了。编辑博客git工具Git(读音为/gɪt/。)是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。—百度百科点击下载github是一个面向开源软件项目的托管平台。虽然github上提供了文件编辑和上传的功能，但使用起来并不方便，所以将项目clone到本地，在本地进行编辑，再通过git（也可以使用githubDestop桌面客户端）上传到平台，这里就需要了解一下git的基础命令和配置了。clone博客项目到本地点击clone or download，复制链接打开git bash，输入命令1$ git clone https://github.com/XXX/XXX.github.io.git编辑简单的博客1234$ echo &quot;Hello World!&quot; &gt; index.html$ git add index.html$ git commit -m &quot;Init commit&quot;$ git push origin master打开链接之后，发现只有Hello World！了。没有结束！！！现在只是完成初步工作，拥有了一个博客，在本地也备份了一份文件，但博客还是空空的，什么格式都没有，下一步就是要利用Hexo弄出一个博客框架。参考链接GitHub Pages三分钟在GitHub上搭建个人博客]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>github</tag>
      </tags>
  </entry>
</search>
