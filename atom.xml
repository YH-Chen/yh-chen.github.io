<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Danboard</title>
  
  <subtitle>踮起脚尖，另一种高度</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.danboard.me/"/>
  <updated>2018-04-30T00:22:38.517Z</updated>
  <id>http://www.danboard.me/</id>
  
  <author>
    <name>Danboard</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>C++内存管理</title>
    <link href="http://www.danboard.me/c-%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86/"/>
    <id>http://www.danboard.me/c-内存管理/</id>
    <published>2018-04-28T11:20:46.000Z</published>
    <updated>2018-04-30T00:22:38.517Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/18722618.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/18722618.jpg"></p><a id="more"></a><h5 id="1-内存分配"><a href="#1-内存分配" class="headerlink" title="1 内存分配"></a>1 内存分配</h5><ul><li><strong>栈</strong> ：存放函数参数以及局部变量,在出作用域时,将自动被释放.栈内存分配运算内置于处理器的指令集中,效率很高,但分配的内存容量有限.</li><li><strong>堆</strong> ：new分配的内存块(包括数组,类实例等),需delete手动释放.如果未释放,在整个程序结束后,OS会帮你回收掉.</li><li><strong>自由存储区</strong> ： malloc分配的内存块,需free手动释放.它和堆有些相似.</li><li><strong>全局/静态区</strong> ： 全局变量(global)和静态变量(static)存于此处.(在以前的C语言中,全局变量又分为初始化的和未初始化的,C++不分)**</li><li><strong>常量存储区</strong> ： 常量(const)存于此处,此存储区不可修改.</li></ul><h5 id="2"><a href="#2" class="headerlink" title="2"></a>2</h5><h5 id="3"><a href="#3" class="headerlink" title="3"></a>3</h5><h5 id="4"><a href="#4" class="headerlink" title="4"></a>4</h5>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-28/18722618.jpg&quot; alt=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-28/18722618.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="C/C++" scheme="http://www.danboard.me/categories/C-C/"/>
    
    
      <category term="C/C++" scheme="http://www.danboard.me/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>C++面向对象编程</title>
    <link href="http://www.danboard.me/C-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
    <id>http://www.danboard.me/C-面向对象/</id>
    <published>2018-04-28T09:17:22.000Z</published>
    <updated>2018-05-02T14:27:53.303Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link href="/style.css" rel="stylesheet" type="text/css"><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><link href="/display.css" rel="stylesheet" type="text/css"><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" The content is unfinished ! " /> <label for="pass"> The content is unfinished ! </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none"> U2FsdGVkX1+iezhTrcisSsUU1k7El2LOp5JY+GUWPWs= </div>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-23/56493546.jpg&quot;&gt;
    
    </summary>
    
      <category term="C/C++" scheme="http://www.danboard.me/categories/C-C/"/>
    
    
      <category term="C/C++" scheme="http://www.danboard.me/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>C++基础学习笔记</title>
    <link href="http://www.danboard.me/c-%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.danboard.me/c-基础学习笔记/</id>
    <published>2018-04-28T08:54:11.000Z</published>
    <updated>2018-04-30T00:22:38.506Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link href="/style.css" rel="stylesheet" type="text/css"><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><link href="/display.css" rel="stylesheet" type="text/css"><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" The content is unfinished ! " /> <label for="pass"> The content is unfinished ! </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-23/56493546.jpg&quot;&gt;
    
    </summary>
    
      <category term="C/C++" scheme="http://www.danboard.me/categories/C-C/"/>
    
    
      <category term="C/C++" scheme="http://www.danboard.me/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>正方系统抢课程序——Python</title>
    <link href="http://www.danboard.me/%E6%AD%A3%E6%96%B9%E7%B3%BB%E7%BB%9F%E6%8A%A2%E8%AF%BE%E7%A8%8B%E5%BA%8F%E2%80%94%E2%80%94Python/"/>
    <id>http://www.danboard.me/正方系统抢课程序——Python/</id>
    <published>2018-04-27T18:38:01.000Z</published>
    <updated>2018-04-27T18:42:18.635Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-27/79933395.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-27/79933395.jpg"></p><a id="more"></a><blockquote><p>注：该脚本应朋友要求写的，不是本校的教务系统。</p><p>抢课脚本，其实就是模拟选课的过程。所以，首先要了解<a href="http://www.danboard.me/HTTP协议/">HTTP协议</a>，我们输入教务系统为什么会有一个界面显示，这个界面就是一个html，简单来说，浏览器是一个客户端，教务系统在另一端的服务器上，输入教务系统的地址，就是向服务器发送一个请求，当中会有“三次握手”先建立连接，接着发送一个请求得到服务器响应，服务器向客户端传送一个html文件，客户端解析再显示出来。</p></blockquote><h3 id="1-选课流程"><a href="#1-选课流程" class="headerlink" title="1 选课流程"></a>1 选课流程</h3><blockquote><p>通过浏览器开发者工具（F12）观察选课流程的请求与响应。</p></blockquote><h4 id="1-1-登录"><a href="#1-1-登录" class="headerlink" title="1.1 登录"></a>1.1 登录</h4><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/6410489.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/6410489.jpg"></p><p>登录提交表单的地址是<code>http://jwc.gdlgxy.com/default2.aspx</code></p><p><code>Request Headers</code>请求头部中，很多信息都是默认的，Cookie是网站为了辨别用户身份、进行 session 跟踪而储存在用户本地终端上的数据，因为不同浏览器以及生命周期会发生变化，需要记录Cookie的值。</p><p><code>Form Data</code>表单中包含了重要的信息：状态码、学号、密码、验证码。</p><p>cookie、状态码（VIEWSTATE）、验证码（CheckCode），在输入教务地址的时候就可以获取。</p><p>以下是输入教务系统地址，得到的响应文件：</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/60105467.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/60105467.jpg"></p><h4 id="1-2-选课"><a href="#1-2-选课" class="headerlink" title="1.2 选课"></a>1.2 选课</h4><p>第一步，选课类型</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/75337299.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/75337299.jpg"></p><p>第二步，筛选课程</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/83874725.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/83874725.jpg"></p><p>第三步，选择课程，提交</p><p><strong>选课过时了，没来得及保存图片</strong></p><p>在页面上的点击，都是一次请求，每一次的请求状态码VIEWSTATE可能不一致，下一步请求提交的数据中的状态码可以从上一步请求得到的响应文件中查找。</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/199073.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/199073.jpg"></p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/80864375.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/80864375.jpg"></p><p>如何获取上面的信息？</p><ul><li><p>选课类型：代码是固定的，公共选修课<code>N121203</code>，体育选课<code>N121205</code>，院系选修课<code>N121207</code></p></li><li><p>学生姓名编码</p><ul><li><p>输入姓名，再进行URL编码</p></li><li><p>在登录获取的响应中查找</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/81686818.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/81686818.jpg"></p></li></ul></li><li><p>状态码</p><p>在从上一次的响应文件中查找</p></li><li><p>编码问题</p><ul><li>输入中文，例如：<code>&#39;有&#39;.encode(&#39;gbk&#39;)</code></li><li>通过网页工具（<a href="http://tool.chinaz.com/tools/urlencode.aspx" target="_blank" rel="noopener">站长工具</a>）编码</li></ul></li></ul><h3 id="2-模拟抢课"><a href="#2-模拟抢课" class="headerlink" title="2 模拟抢课"></a>2 模拟抢课</h3><blockquote><p>通过浏览器的开发者工具（F12），得到每一次的请求信息（Request Headers和Form Data），模拟登陆、模拟选课就是向教务系统的服务器，发送相同的请求，得到我们需要的响应，即选到心仪的课程。</p></blockquote><h4 id="2-1-登录"><a href="#2-1-登录" class="headerlink" title="2.1 登录"></a>2.1 登录</h4><h5 id="2-1-1-初始化"><a href="#2-1-1-初始化" class="headerlink" title="2.1.1 初始化"></a>2.1.1 初始化</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># self.host = input('输入地址：')</span></span><br><span class="line">self.host = <span class="string">'xxx'</span>        <span class="comment"># 教务系统地址 / IP</span></span><br><span class="line">self.baseUrl = <span class="string">'http://'</span> + self.host</span><br><span class="line">self.checkCodeUrl = self.baseUrl + <span class="string">'/CheckCode.aspx'</span><span class="comment"># 验证码地址 </span></span><br><span class="line">self.loginUrl = self.baseUrl + <span class="string">'/default2.aspx'</span><span class="comment"># 提交表单链接</span></span><br></pre></td></tr></table></figure><h5 id="2-1-2-保存cookie"><a href="#2-1-2-保存cookie" class="headerlink" title="2.1.2 保存cookie"></a>2.1.2 保存cookie</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">self.cookie = http.cookiejar.CookieJar()   <span class="comment"># 声明一个CookieJar对象实例来保存cookie，在打开网页的时候保存cookie</span></span><br><span class="line">self.handler = urllib.request.HTTPCookieProcessor(self.cookie)  <span class="comment"># 创建cookie处理器</span></span><br><span class="line">self.opener = urllib.request.build_opener(self.handler, urllib.request.HTTPHandler) <span class="comment"># 通过handler来构建opener</span></span><br><span class="line"><span class="comment"># 加入默认的首部行</span></span><br><span class="line">self.opener.addheaders = [</span><br><span class="line">    (<span class="string">'Accept'</span>, <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8'</span>),</span><br><span class="line">    (<span class="string">'Accept-Encoding'</span>, <span class="string">'gzip, deflate'</span>),</span><br><span class="line">    (<span class="string">'Accept-Language'</span>, <span class="string">'zh-CN,zh;q=0.9'</span>),</span><br><span class="line">    (<span class="string">'User-Agent'</span>, <span class="string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36'</span>),</span><br><span class="line">    (<span class="string">'Connection'</span>, <span class="string">'keep-alive'</span>),</span><br><span class="line">    (<span class="string">'Content-Type'</span>, <span class="string">'application/x-www-form-urlencoded'</span>),</span><br><span class="line">    (<span class="string">'Cache-Control'</span>, <span class="string">'max-age=0'</span>),</span><br><span class="line">    (<span class="string">'Upgrade-Insecure-Requests'</span>, <span class="string">'1'</span>)]</span><br><span class="line"><span class="comment"># 通过urlopen()来使用opener</span></span><br><span class="line">urllib.request.install_opener(self.opener)</span><br></pre></td></tr></table></figure><h5 id="2-1-3-获取验证码"><a href="#2-1-3-获取验证码" class="headerlink" title="2.1.3 获取验证码"></a>2.1.3 获取验证码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getCheckCode</span><span class="params">(self)</span>:</span></span><br><span class="line">  path = <span class="string">'config/code.gif'</span><span class="comment"># 抓取验证码图片保存到本地</span></span><br><span class="line">  code = <span class="string">''</span></span><br><span class="line">  <span class="keyword">while</span> code <span class="keyword">is</span> <span class="string">''</span>:</span><br><span class="line">    fl = open(path, <span class="string">'wb'</span>)</span><br><span class="line">    <span class="keyword">try</span>:  <span class="comment"># 三秒防刷</span></span><br><span class="line">      fl.write(urllib.request.urlopen(self.checkCodeUrl, timeout=<span class="number">3</span>).read())</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">      print(<span class="string">'the code.aspx has not response'</span>)</span><br><span class="line">      <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">      fl.close()</span><br><span class="line">      code = input(<span class="string">"验证码(回车更新)："</span>)  <span class="comment"># must wait for fl.close()</span></span><br><span class="line"><span class="keyword">return</span> code</span><br></pre></td></tr></table></figure><h5 id="2-1-4-获取状态码"><a href="#2-1-4-获取状态码" class="headerlink" title="2.1.4 获取状态码"></a>2.1.4 获取状态码</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getViewstate1</span><span class="params">(self)</span>:</span></span><br><span class="line">  <span class="comment"># print("---Viewstate1---")</span></span><br><span class="line">  viewstate = <span class="keyword">None</span></span><br><span class="line">  <span class="keyword">while</span> viewstate <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">      html = urllib.request.urlopen(self.loginUrl, timeout=<span class="number">3</span>).read().decode(<span class="string">'gbk'</span>)</span><br><span class="line">      soup = BeautifulSoup(html, <span class="string">'html.parser'</span>)<span class="comment"># 响应得到的html文件</span></span><br><span class="line">      soup = soup.find_all(attrs=&#123;<span class="string">'name'</span>: <span class="string">'__VIEWSTATE'</span>&#125;)[<span class="number">0</span>]<span class="comment"># 在html文件中查找状态吗</span></span><br><span class="line">      viewstate = soup.get(<span class="string">'value'</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">      print(<span class="string">'the login.aspx has not response'</span>)</span><br><span class="line">      <span class="keyword">continue</span></span><br><span class="line">    <span class="comment"># print("viewstate1：", viewstate)</span></span><br><span class="line"><span class="keyword">return</span> viewstate</span><br></pre></td></tr></table></figure><h5 id="2-1-5-提交表单"><a href="#2-1-5-提交表单" class="headerlink" title="2.1.5 提交表单"></a>2.1.5 提交表单</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="comment"># 输入学号密码</span></span><br><span class="line">    xh = input(<span class="string">'输入学号：'</span>)</span><br><span class="line">    pw = input(<span class="string">'输入密码：'</span>)</span><br><span class="line">    <span class="comment"># 输入验证码</span></span><br><span class="line">    code = self.getCheckCode()</span><br><span class="line">    <span class="comment"># 课程归属（默认公共选修课）</span></span><br><span class="line">    lx = <span class="string">'N121203'</span></span><br><span class="line">    self.refUrl = self.baseUrl + <span class="string">'/xs_main.aspx?xh='</span> + xh</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 登录教务系统</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Host'</span>: self.host,</span><br><span class="line">        <span class="string">'Origin'</span>: self.baseUrl,</span><br><span class="line">        <span class="string">'Referer'</span>: self.baseUrl + <span class="string">'/'</span></span><br><span class="line">    &#125; <span class="comment"># Request Headers</span></span><br><span class="line"></span><br><span class="line">    postdata = urllib.parse.urlencode(&#123;</span><br><span class="line">        <span class="string">'__VIEWSTATE'</span>: self.getViewstate1(),</span><br><span class="line">        <span class="string">'txtUserName'</span>: xh,</span><br><span class="line">        <span class="string">'TextBox2'</span>: pw,</span><br><span class="line">        <span class="string">'txtSecretCode'</span>: code,</span><br><span class="line">        <span class="string">'RadioButtonList1'</span>: <span class="string">'学生'</span>.encode(<span class="string">'gbk'</span>),  <span class="comment"># use gbk</span></span><br><span class="line">        <span class="string">'Button1'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'lbLanguage'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'hidPdrs'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'hidsc'</span>: <span class="string">''</span></span><br><span class="line">    &#125;).encode(<span class="string">'utf-8'</span>)<span class="comment"># Form Data</span></span><br><span class="line"></span><br><span class="line">    post = urllib.request.Request(self.loginUrl, postdata, headers)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        page = urllib.request.urlopen(post).read().decode(<span class="string">'gbk'</span>)</span><br><span class="line">        <span class="comment"># 查找错误信息（验证码/密码出错）</span></span><br><span class="line">        error = re.findall(<span class="string">'alert.+?错误！！\'\)'</span>, page)</span><br><span class="line">        <span class="keyword">if</span> error:</span><br><span class="line">            print(error[<span class="number">0</span>])</span><br><span class="line">            self.login()</span><br><span class="line">        <span class="keyword">else</span>:<span class="comment"># 登录信息正确，直接进入到选课界面</span></span><br><span class="line">            <span class="comment"># 课程归属</span></span><br><span class="line">            n = input(<span class="string">'选择课程类型：1.公共选修课 2.体育选课 3.院系选修课\n'</span>)</span><br><span class="line">            <span class="keyword">if</span> n == <span class="string">'1'</span>:</span><br><span class="line">                lx = <span class="string">'N121203'</span></span><br><span class="line">            <span class="keyword">elif</span> n == <span class="string">'2'</span>:</span><br><span class="line">                lx = <span class="string">'N121205'</span></span><br><span class="line">            <span class="keyword">elif</span> n == <span class="string">'3'</span>:</span><br><span class="line">                lx = <span class="string">'N121208'</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                print(<span class="string">'暂不支持该选课类型'</span>)</span><br><span class="line">                exit(<span class="number">0</span>)</span><br><span class="line">            get = urllib.request.Request(self.refUrl, headers=headers)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                f = urllib.request.urlopen(get)</span><br><span class="line">                page = f.read().decode(<span class="string">'gbk'</span>)</span><br><span class="line">                <span class="comment"># 查找学生姓名，也可以通过输入，不过打字有可能比较慢</span></span><br><span class="line">                info = re.findall(<span class="string">r'xf_xsqxxxk.+?gnmkdm='</span>, page)</span><br><span class="line">                <span class="keyword">assert</span> info <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span></span><br><span class="line">                <span class="comment"># 正则表达式，查找中文字符</span></span><br><span class="line">                words = re.findall(<span class="string">u"[\u4e00-\u9fa5]+"</span>, info[<span class="number">0</span>])</span><br><span class="line">                <span class="keyword">assert</span> words <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span></span><br><span class="line">                info = info[<span class="number">0</span>].replace(words[<span class="number">0</span>], parse.quote(words[<span class="number">0</span>].encode(<span class="string">'gbk'</span>)))</span><br><span class="line">                <span class="comment"># 通过获取的信息，组成选课页面的链接</span></span><br><span class="line">                self.chooseUrl = self.baseUrl + <span class="string">'/'</span> + info + lx</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                print(<span class="string">'get chooseUrl failed.'</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        print(<span class="string">'login has no respone.'</span>)</span><br></pre></td></tr></table></figure><h4 id="2-2-选课"><a href="#2-2-选课" class="headerlink" title="2.2 选课"></a>2.2 选课</h4><h5 id="2-2-1-最后一步"><a href="#2-2-1-最后一步" class="headerlink" title="2.2.1 最后一步"></a>2.2.1 最后一步</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">submit</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="comment"># 选课信息（定位课程）</span></span><br><span class="line">    self.course = input(<span class="string">"输入课程："</span>)</span><br><span class="line">    self.date = input(<span class="string">"输入时间："</span>)</span><br><span class="line"></span><br><span class="line">    viewstate3 = self.getViewstate3()<span class="comment"># 获取状态码</span></span><br><span class="line">    postdata = urllib.parse.urlencode(&#123;</span><br><span class="line">        <span class="string">'__EVENTTARGET'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'__EVENTARGUMENT'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'__VIEWSTATE'</span>: viewstate3,</span><br><span class="line">        <span class="string">'ddl_kcxz'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'ddl_ywyl'</span>: <span class="string">'有'</span>.encode(<span class="string">'gbk'</span>),</span><br><span class="line">        <span class="string">'ddl_kcgs'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'ddl_xqbs'</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="string">'ddl_sksj'</span>: self.date.encode(<span class="string">'gbk'</span>),</span><br><span class="line">        <span class="string">'TextBox1'</span>: self.course.encode(<span class="string">'gbk'</span>),</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl2:xk'</span>: <span class="string">'on'</span>,</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl2:jcnr'</span>: <span class="string">'|||'</span>,</span><br><span class="line">        <span class="string">'dpkcmcGrid:txtChoosePage'</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">'dpkcmcGrid:txtPageSize'</span>: <span class="number">15</span>,</span><br><span class="line">        <span class="string">'Button1'</span>: <span class="string">'  提交  '</span>.encode(<span class="string">'gbk'</span>),</span><br><span class="line">        <span class="string">'dpDataGrid2:txtChoosePage'</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">'dpDataGrid2:txtPageSize'</span>: <span class="number">150</span></span><br><span class="line">    &#125;).encode(<span class="string">'utf-8'</span>)<span class="comment"># Form Data</span></span><br><span class="line"></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Host'</span>: self.host,</span><br><span class="line">        <span class="string">'Origin'</span>: self.baseUrl,</span><br><span class="line">        <span class="string">'Referer'</span>: self.chooseUrl</span><br><span class="line">    &#125;<span class="comment"># Request Headers</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        req = urllib.request.Request(self.chooseUrl, postdata, headers)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            f = urllib.request.urlopen(req, timeout=<span class="number">3</span>)</span><br><span class="line">            html = f.read().decode(<span class="string">'gbk'</span>)</span><br><span class="line">            <span class="comment"># 检查是否选课成功，响应文件html中出现"已选课程……xxx"的信息</span></span><br><span class="line">            pat = <span class="string">'&lt;legend&gt;已选课程&lt;/legend&gt;&lt;table.+?'</span> + self.course + <span class="string">'.+?&lt;/table&gt;'</span></span><br><span class="line">            pattern = re.compile(pat, re.S)</span><br><span class="line">            length = len(re.findall(pattern, html))</span><br><span class="line">            <span class="keyword">if</span> (length == <span class="number">1</span>):<span class="comment"># 如果选课成功，则退出，否则继续抢课</span></span><br><span class="line">                print(<span class="string">'选课成功'</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">'submit has no response'</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><h5 id="2-2-2-状态码"><a href="#2-2-2-状态码" class="headerlink" title="2.2.2 状态码"></a>2.2.2 状态码</h5><blockquote><p>最后一步选课的状态码是从上一次筛选条件的请求得到的响应文件中获取的</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">getViewstate3</span><span class="params">(self)</span>:</span></span><br><span class="line">    <span class="comment"># print("---viewstate3---")</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">'Host'</span>: self.host,</span><br><span class="line">        <span class="string">'Origin'</span>: self.baseUrl,</span><br><span class="line">        <span class="string">'Referer'</span>: self.chooseUrl,</span><br><span class="line">    &#125;</span><br><span class="line">    viewstate2 = self.getViewstate2()<span class="comment"># 状态码2是从选课类型请求得到的响应中获取</span></span><br><span class="line">    postdata = urllib.parse.urlencode(&#123;</span><br><span class="line">        <span class="string">'__EVENTTARGET'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'__EVENTARGUMENT'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'__VIEWSTATE'</span>: viewstate2,</span><br><span class="line">        <span class="string">'ddl_kcxz'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'ddl_ywyl'</span>: <span class="string">'有'</span>.encode(<span class="string">'gbk'</span>),</span><br><span class="line">        <span class="string">'ddl_kcgs'</span>: <span class="string">''</span>,</span><br><span class="line">        <span class="string">'ddl_xqbs'</span>: <span class="number">2</span>,</span><br><span class="line">        <span class="string">'ddl_sksj'</span>: self.date.encode(<span class="string">'gbk'</span>),</span><br><span class="line">        <span class="string">'TextBox1'</span>: self.course.encode(<span class="string">'gbk'</span>),</span><br><span class="line">        <span class="string">'Button2'</span>: <span class="string">'确定'</span>.encode(<span class="string">'gbk'</span>),</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl2:jcnr'</span>: <span class="string">'|||'</span>,</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl3:jcnr'</span>: <span class="string">'|||'</span>,</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl4:jcnr'</span>: <span class="string">'|||'</span>,</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl5:jcnr'</span>: <span class="string">'|||'</span>,</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl6:jcnr'</span>: <span class="string">'|||'</span>,</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl7:jcnr'</span>: <span class="string">'|||'</span>,</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl8:jcnr'</span>: <span class="string">'|||'</span>,</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl9:jcnr'</span>: <span class="string">'|||'</span>,</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl10:jcnr'</span>: <span class="string">'|||'</span>,</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl11:jcnr'</span>: <span class="string">'|||'</span>,</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl12:jcnr'</span>: <span class="string">'|||'</span>,</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl13:jcnr'</span>: <span class="string">'|||'</span>,</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl14:jcnr'</span>: <span class="string">'|||'</span>,</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl15:jcnr'</span>: <span class="string">'|||'</span>,</span><br><span class="line">        <span class="string">'kcmcGrid:_ctl16:jcnr'</span>: <span class="string">'|||'</span>,</span><br><span class="line">        <span class="string">'dpkcmcGrid:txtChoosePage'</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">'dpkcmcGrid:txtPageSize'</span>: <span class="number">15</span>,</span><br><span class="line">        <span class="string">'dpDataGrid2:txtChoosePage'</span>: <span class="number">1</span>,</span><br><span class="line">        <span class="string">'dpDataGrid2:txtPageSize'</span>: <span class="number">150</span></span><br><span class="line">    &#125;).encode(<span class="string">'utf-8'</span>)<span class="comment"># Form Data</span></span><br><span class="line"></span><br><span class="line">    req = urllib.request.Request(</span><br><span class="line">        url=self.chooseUrl,</span><br><span class="line">        data=postdata,</span><br><span class="line">        headers=headers)<span class="comment"># Request Headers</span></span><br><span class="line"></span><br><span class="line">    viewstate3 = <span class="keyword">None</span></span><br><span class="line">    <span class="keyword">while</span> viewstate3 <span class="keyword">is</span> <span class="keyword">None</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            f = urllib.request.urlopen(req, timeout=<span class="number">3</span>)</span><br><span class="line">            html = f.read().decode(<span class="string">'gbk'</span>)</span><br><span class="line">            soup = BeautifulSoup(html, <span class="string">'html.parser'</span>)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                soup = soup.find_all(attrs=&#123;<span class="string">'name'</span>: <span class="string">'__VIEWSTATE'</span>&#125;)[<span class="number">0</span>]</span><br><span class="line">                viewstate3 = soup.get(<span class="string">'value'</span>)</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                print(<span class="string">'get response but cant get VIEWSTATE'</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">'get available course has no response'</span>)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">return</span> viewstate3</span><br></pre></td></tr></table></figure><h4 id="2-3-选课结果"><a href="#2-3-选课结果" class="headerlink" title="2.3 选课结果"></a>2.3 选课结果</h4><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/42113824.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/42113824.jpg"></p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/5536397.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-28/5536397.jpg"></p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="https://blog.csdn.net/MASILEJFOAISEGJIAE/article/details/60575892" target="_blank" rel="noopener">C++网络编程之使用Winsock2实现教务系统自动抢课程序</a></li><li><a href="https://blog.csdn.net/idiot_xue/article/details/72626570" target="_blank" rel="noopener">python爬虫之urllib2登录并抓取HTML页面</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-27/79933395.jpg&quot; alt=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-27/79933395.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="脚本" scheme="http://www.danboard.me/categories/%E8%84%9A%E6%9C%AC/"/>
    
    
      <category term="tips" scheme="http://www.danboard.me/tags/tips/"/>
    
      <category term="python" scheme="http://www.danboard.me/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>数据库基础</title>
    <link href="http://www.danboard.me/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%9F%BA%E7%A1%80/"/>
    <id>http://www.danboard.me/数据库基础/</id>
    <published>2018-04-24T15:07:12.000Z</published>
    <updated>2018-04-27T14:46:00.791Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link href="/style.css" rel="stylesheet" type="text/css"><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><link href="/display.css" rel="stylesheet" type="text/css"><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" The content is unfinished ! " /> <label for="pass"> The content is unfinished ! </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-23/56493546.jpg&quot;&gt;
    
    </summary>
    
      <category term="数据库" scheme="http://www.danboard.me/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="SQL" scheme="http://www.danboard.me/tags/SQL/"/>
    
  </entry>
  
  <entry>
    <title>隐藏未完成编辑的文章</title>
    <link href="http://www.danboard.me/%E9%9A%90%E8%97%8F%E6%9C%AA%E5%AE%8C%E6%88%90%E7%BC%96%E8%BE%91%E7%9A%84%E6%96%87%E7%AB%A0/"/>
    <id>http://www.danboard.me/隐藏未完成编辑的文章/</id>
    <published>2018-04-23T18:57:47.000Z</published>
    <updated>2018-04-27T14:47:03.977Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>一般都是博客编辑完成，再发布上去，但有时候可能是同时编辑多篇文章，有些编辑了一半，提交上去，只能看到半成品，所以想了个办法把半成品隐藏了。</p><p>这个修改是基于<code>hexo-blog-encrypt</code>插件的，即将博文加密，只显示“The content is unfinished！”。</p><a id="more"></a><h4 id="1-修改模板"><a href="#1-修改模板" class="headerlink" title="1 修改模板"></a>1 修改模板</h4><p>文件<code>/scaffolds/post.md</code>，添加</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">done: false</span><br></pre></td></tr></table></figure><p>这样每次创建一遍新的博文，front-matter都会添加上面语句，标志未完成编辑，如果编辑完成，只需把false改为true，再发布上去。</p><h4 id="2-修改插件"><a href="#2-修改插件" class="headerlink" title="2 修改插件"></a>2 修改插件</h4><p>文件<code>/node_modules/hexo-blog-encrypt/lib/</code>中添加一个ccs文件<code>display.css</code>，拷贝<code>style.css</code>，再添加下面语句</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-id">#pass</span> &#123;</span><br><span class="line">  display: none;// 隐藏输入</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>文件<code>/node_modules/hexo-blog-encrypt/index.js</code>，修改如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> flag = <span class="literal">false</span>;<span class="comment">// 标志</span></span><br><span class="line">hexo.extend.filter.register(<span class="string">"after_post_render"</span>, <span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 添加</span></span><br><span class="line">      <span class="keyword">if</span> (<span class="string">'done'</span> <span class="keyword">in</span> data &amp;&amp; !data.done) &#123;</span><br><span class="line">        data.password = <span class="string">"123"</span>; <span class="comment">//加密密码</span></span><br><span class="line">        data.abstract = <span class="string">'&lt;img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-23/56493546.jpg"&gt;'</span>;</span><br><span class="line">        <span class="comment">// 前文显示</span></span><br><span class="line">        data.message = <span class="string">"The content is unfinished !"</span>;</span><br><span class="line">        <span class="keyword">if</span> (!(<span class="string">'template'</span> <span class="keyword">in</span> data &amp;&amp; data.template)) &#123;</span><br><span class="line">            data.template = hexo.config.encrypt.default_template;</span><br><span class="line">        &#125;</span><br><span class="line">        data.template = <span class="string">'&lt;link href="'</span> + hexo.config.root + <span class="string">'display.css" rel="stylesheet" type="text/css"&gt;'</span> + data.template;</span><br><span class="line">        flag = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">hexo.on(<span class="string">'exit'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 未完成时，加载display.css；完成时，正常加载style.css</span></span><br><span class="line">    <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">        <span class="keyword">var</span> cssFile = pathFn.join(pathFn.join(pathFn.join(pathFn.join(hexo.base_dir, <span class="string">'node_modules'</span>), <span class="string">'hexo-blog-encrypt'</span>), <span class="string">'lib'</span>), <span class="string">'display.css'</span>);</span><br><span class="line">        fs.readFile(cssFile).then(<span class="function"><span class="keyword">function</span>(<span class="params">content</span>) </span>&#123;</span><br><span class="line">            fs.copyFile(cssFile, pathFn.join(hexo.public_dir, <span class="string">'display.css'</span>));</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> cssFile = pathFn.join(pathFn.join(pathFn.join(pathFn.join(hexo.base_dir, <span class="string">'node_modules'</span>), <span class="string">'hexo-blog-encrypt'</span>), <span class="string">'lib'</span>), <span class="string">'style.css'</span>);</span><br><span class="line">        fs.readFile(cssFile).then(<span class="function"><span class="keyword">function</span>(<span class="params">content</span>) </span>&#123;</span><br><span class="line">            fs.copyFile(cssFile, pathFn.join(hexo.public_dir, <span class="string">'style.css'</span>));</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;一般都是博客编辑完成，再发布上去，但有时候可能是同时编辑多篇文章，有些编辑了一半，提交上去，只能看到半成品，所以想了个办法把半成品隐藏了。&lt;/p&gt;&lt;p&gt;这个修改是基于&lt;code&gt;hexo-blog-encrypt&lt;/code&gt;插件的，即将博文加密，只显示“The content is unfinished！”。&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.danboard.me/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="http://www.danboard.me/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>胡言乱语</title>
    <link href="http://www.danboard.me/%E8%83%A1%E8%A8%80%E4%B9%B1%E8%AF%AD/"/>
    <id>http://www.danboard.me/胡言乱语/</id>
    <published>2018-04-21T17:18:28.000Z</published>
    <updated>2018-04-27T15:20:58.714Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link href="/style.css" rel="stylesheet" type="text/css"><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" Please enter the password to read. " /> <label for="pass"> Please enter the password to read. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-24/35449140.jpg&quot;/&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>HTTP协议</title>
    <link href="http://www.danboard.me/HTTP%E5%8D%8F%E8%AE%AE/"/>
    <id>http://www.danboard.me/HTTP协议/</id>
    <published>2018-04-19T06:59:11.000Z</published>
    <updated>2018-04-27T15:20:04.415Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-20/45716714.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-20/45716714.jpg"></p><a id="more"></a><h3 id="1-概述"><a href="#1-概述" class="headerlink" title="1 概述"></a>1 概述</h3><blockquote><p>HTTP协议（HyperText Transfer Protocol，超文本传输协议）是用于从WWW服务器传输超文本到本地浏览器的传输协议。它可以使浏览器更加高效，使网络传输减少。它不仅保证计算机正确快速地传输超文本文档，还确定传输文档中的哪一部分，以及哪部分内容首先显示(如文本先于图形)等。</p></blockquote><p>特点：</p><ul><li><p>简单快速</p><p>客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。</p></li><li><p>灵活</p><p>HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。</p></li><li><p>无状态</p><p>服务器向客户发送被请求的文件，而不存储任何关于该客户的状态信息。假如某个特定客户在短短几秒内两次请求同一个对象，服务器并不会</p></li></ul><h3 id="2-URL"><a href="#2-URL" class="headerlink" title="2 URL"></a>2 URL</h3><blockquote><p>HTTP使用<code>统一资源标识符</code>（Uniform Resource Identifiers, URI）来传输数据和建立连接。URL是一种特殊类型的URI，包含了用于查找某个资源的足够的信息。</p></blockquote><ul><li>完全格式<img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-21/34406036.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-21/34406036.jpg"></li></ul><ul><li><p>基本格式</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-21/38159930.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-21/38159930.jpg"></p></li></ul><p><strong>URI、URL和URN的区别</strong></p><ul><li>URI ：Uniform Resource Identifier，统一资源标识符，URL、URN是URI的子集；</li><li>URL：Uniform Resource Locator，统一资源定位符；</li><li>URN：Uniform Resource Name，统一资源名称。</li></ul><p>Web上地址的基本形式是URI，它代表统一资源<a href="https://baike.baidu.com/item/%E6%A0%87%E8%AF%86" target="_blank" rel="noopener">标识</a>符。有两种形式：</p><ul><li>URL：目前URI的最普遍形式。</li><li>URN：URL的一种更新形式，不依赖于位置，并且有可能减少失效连接的个数。但是其流行还需假以时日，因为它需要更精密软件的支持。</li></ul><p>URI有绝对和相对之分：</p><ul><li>绝对的URI，如<a href="http://www.danboard.me/HTTP协议/img.png">http://www.danboard.me/HTTP协议/img.png</a></li><li>相对的URI，如<a href="">HTTP协议/img.png</a></li></ul><h3 id="3-非持续-持续连接"><a href="#3-非持续-持续连接" class="headerlink" title="3 非持续/持续连接"></a>3 非持续/持续连接</h3><ul><li><p>非持续连接</p><p>一个WEB站点每天可能要接收到上百万的用户请求，为了提高系统的效率，<code>HTTP 1.0</code>规定浏览器与服务器只保持短暂的连接，浏览器的每次请求都需要与服务器建立一个TCP连接，服务器完成请求处理后立即断开TCP连接，服务器不跟踪每个客户也不记录过去的请求。</p><p>访问一个包含有许多图像的网页文件的整个过程包含了多次请求和响应，每次请求和响应都需要建立一个单独的连接，每次连接只是传输一个文档和图像，上一次和下一次请求完全分离。即使图像文件都很小，但是客户端和服务器端每次建立和关闭连接却是一个相对比较费时的过程，并且会严重影响客户机和服务器的性能。</p><p><strong><code>问题</code></strong> :</p><p>第一，对于每个连接，在客户和服务器中都要分配TCP的缓冲区和保持TCP变量，造成严重负担；</p><p>第二，每一个传输对象都要经受两倍RTT的交付时延，严重影响效率。</p></li><li><p>持续连接</p><p><code>HTTP 1.1</code>支持持久连接，在一个TCP连接上可以传送多个HTTP请求和响应，减少了建立和关闭连接的消耗和延迟。一个包含有许多图像的网页文件的多个请求和应答可以在一个连接中传输，但每个单独的网页文件的请求和应答仍然需要使用各自的连接。HTTP 1.1还允许客户端不用等待上一次请求结果返回，就可以发出下一次请求，但服务器端必须按照接收到客户端请求的<strong>先后顺序</strong> 依次回送响应结果，以保证客户端能够区分出每次请求的响应内容，这样也显著地减少了整个下载过程所需要的时间。</p><p>可以一个接一个地发出对对象的请求，而不必等待未决请求的响应（<code>流水线</code>）。</p><p>一般，如果一条连接经过一定的时间间隔仍未被使用，HTTP服务器就关闭该连接。</p></li></ul><h3 id="4-报文格式"><a href="#4-报文格式" class="headerlink" title="4 报文格式"></a>4 报文格式</h3><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-25/18634039.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-25/18634039.jpg"></p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-25/274966.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-25/274966.jpg"></p><h4 id="4-1-请求Request"><a href="#4-1-请求Request" class="headerlink" title="4.1 请求Request"></a>4.1 请求Request</h4><ol><li><p>组成：请求行、请求头部（首部行）、空行、请求数据</p></li><li><p>请求方法</p><ul><li>GET：请求获取RequestURL所标识的资源，最常用的方法</li><li>POST：在RequestURL所标识的资源后附加新的数据，可以导致新资源的产生和已有资源的更新</li><li>HEAD：请求获取RequestURL所标识的资源的响应消息报头，<u>没有响应体</u></li><li>PUT：请求服务器存储一个资源，并用RequestURL作为其标识</li><li>DELETE：请求服务器删除RequestURL所标识的资源</li></ul><p>GET与POST比较</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-25/70029709.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-25/70029709.jpg"></p></li></ol><ol><li><p>例子</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET /somedir/page.html HTPP/1.1</span><br><span class="line"><span class="attribute">Host</span>: www.someschool.edu</span><br><span class="line"><span class="attribute">Connection</span>: Keep-alive</span><br><span class="line"><span class="attribute">User-agent</span>: Mozilla/5.0</span><br><span class="line"><span class="attribute">Accept-language</span>: fr</span><br></pre></td></tr></table></figure><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">POST /somedir/page.html HTPP/1.1</span><br><span class="line"><span class="attribute">Host</span>: www.someschool.edu</span><br><span class="line"><span class="attribute">Connection</span>: Keep-alive</span><br><span class="line"><span class="attribute">User-agent</span>: Mozilla/5.0</span><br><span class="line"><span class="attribute">Accept-language</span>: fr</span><br><span class="line"></span><br><span class="line">username=STUDENT&amp;password=123456</span><br></pre></td></tr></table></figure></li></ol><h4 id="4-2-响应Response"><a href="#4-2-响应Response" class="headerlink" title="4.2 响应Response"></a>4.2 响应Response</h4><ol><li><p>组成：状态行、消息报头、空行、响应正文</p></li><li><p>例子</p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HTTP/1.1 <span class="number">200</span> OK</span><br><span class="line"><span class="attribute">Date</span>: Fri, 22 May 2009 06:07:21 GMT</span><br><span class="line"><span class="attribute">Content-Type</span>: text/html; charset=UTF-8</span><br></pre></td></tr></table></figure></li><li><p>状态码</p><p>1xx：指示信息，表示请求已接收，继续处理</p><p>2xx：成功，表示请求已被成功接收、理解、接受</p><p>3xx：重定向，要完成请求必须进行更进一步的操作</p><p>4xx：客户端错误，请求有语法错误或请求无法实现</p><p>5xx：服务器端错误，服务器未能实现合法的请求</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-25/73855001.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-25/73855001.jpg"></p></li></ol><h3 id="5-工作原理"><a href="#5-工作原理" class="headerlink" title="5 工作原理"></a>5 工作原理</h3><h4 id="5-1-客户端连接到Web服务器"><a href="#5-1-客户端连接到Web服务器" class="headerlink" title="5.1 客户端连接到Web服务器"></a>5.1 客户端连接到Web服务器</h4><p>一个HTTP客户端，通常是浏览器，与Web服务器的HTTP端口（默认为80）建立一个TCP套接字连接。例如，[<a href="http://www.oakcms.cn]" target="_blank" rel="noopener">http://www.oakcms.cn]</a>(<a href="http://www.oakcms.cn./" target="_blank" rel="noopener">http://www.oakcms.cn./</a></p><h4 id="5-2-发送HTTP请求"><a href="#5-2-发送HTTP请求" class="headerlink" title="5.2 发送HTTP请求"></a>5.2 发送HTTP请求</h4><p>通过TCP套接字，客户端向Web服务器发送一个文本的请求报文，一个请求报文由请求行、请求头部、空行和请求数据4部分组成。</p><h4 id="5-3-服务器接受请求并返回HTTP响应"><a href="#5-3-服务器接受请求并返回HTTP响应" class="headerlink" title="5.3 服务器接受请求并返回HTTP响应"></a>5.3 服务器接受请求并返回HTTP响应</h4><p>Web服务器解析请求，定位请求资源。服务器将资源复本写到TCP套接字，由客户端读取。一个响应由状态行、响应头部、空行和响应数据4部分组成。</p><h4 id="5-4-释放连接TCP连接"><a href="#5-4-释放连接TCP连接" class="headerlink" title="5.4 释放连接TCP连接"></a>5.4 释放连接TCP连接</h4><p>若connection 模式为close，则服务器主动关闭TCP连接，客户端被动关闭连接，释放TCP连接；若connection 模式为keep-alive，则该连接会保持一段时间，在该时间内可以继续接收请求。</p><h4 id="5-5-客户端浏览器解析HTML内容"><a href="#5-5-客户端浏览器解析HTML内容" class="headerlink" title="5.5 客户端浏览器解析HTML内容"></a>5.5 客户端浏览器解析HTML内容</h4><p>客户端浏览器首先解析状态行，查看表明请求是否成功的状态代码。然后解析每一个响应头，响应头告知以下为若干字节的HTML文档和文档的字符集。客户端浏览器读取响应数据HTML，根据HTML的语法对其进行格式化，并在浏览器窗口中显示。</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="https://blog.csdn.net/zhangxiaoxiang/article/details/765082" target="_blank" rel="noopener">HTTP 1.1与HTTP 1.0的比较</a></li><li><a href="http://www.cnblogs.com/ranyonsue/p/5984001.html" target="_blank" rel="noopener">关于HTTP协议，一篇就够了</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-20/45716714.jpg&quot; alt=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-20/45716714.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="计算机网络" scheme="http://www.danboard.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="http" scheme="http://www.danboard.me/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>TCP/UDP</title>
    <link href="http://www.danboard.me/TCP-UDP/"/>
    <id>http://www.danboard.me/TCP-UDP/</id>
    <published>2018-04-19T00:24:57.000Z</published>
    <updated>2018-04-27T14:43:21.988Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>TCP （Transmission Control Protocol，传输控制协议）与 UDP （User Data Protocol，用户数据包协议）是Internet运输层在应用程序端点之间传送应用层报文的两种协议。</p><p>运输层协议为运行在不同主机上的应用进程之间提供了<strong>逻辑通信</strong>。</p></blockquote><h3 id="TCP协议"><a href="#TCP协议" class="headerlink" title="TCP协议"></a>TCP协议</h3><h4 id="1-全双工"><a href="#1-全双工" class="headerlink" title="1 全双工"></a>1 全双工</h4><p>如果一台主机上的进程A与另一台主机上的进程B存在一条TCP连接，那么应用层数据就可以从进程B流向进程A的同时，也从进程A流向进程B。</p><h4 id="2-点对点"><a href="#2-点对点" class="headerlink" title="2 点对点"></a>2 点对点</h4><p>单个发送方与单个接收方之间的连接。</p><h4 id="3-面向连接"><a href="#3-面向连接" class="headerlink" title="3 面向连接"></a>3 面向连接</h4><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-19/79847918.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-19/79847918.jpg"></p><ul><li><p>三次握手（建立连接）</p><ol><li>客户端发送：SYN = 1, SEQ = X, 端口号</li><li>服务器回复：SYN = 1, ACK = X + 1, SEQ = Y</li><li>客户端发送：ACK = Y + 1, SEQ = X + 1</li></ol><blockquote><p>确认应答信号ACK = 收到的SEQ + 1。</p><p>连接建立中，同步信号SYN始终为1。</p><p>连接建立后，同步信号SYN = 0。</p></blockquote><p>为什么要三次握手？</p><p>三次握手是保证双方互相明确对方能收发信息的最低值。</p><blockquote><p><strong>三次握手</strong> ：<br>“喂，你听得到吗？”<br>“我听得到呀，你听得到我吗？”<br>“我能听到你，今天balabala……”</p><p><strong>两次握手</strong>：<br>“喂，你听得到吗？”<br>“我听得到呀”<br>“喂喂，你听得到吗？”<br>“草，我听得到呀！！！！”<br>“你TM能不能听到我讲话啊！！喂！”<br>“……”</p><p><strong>四次握手</strong>：<br>“喂，你听得到吗？”<br>“我听得到呀，你听得到我吗？”<br>“我能听到你，你能听到我吗？”<br>“……不想跟傻逼说话”</p><p>——来自知乎</p></blockquote><p>​</p></li><li><p>四次挥手（断开连接）</p><ol><li>A向B提出停止连接请求，FIN = 1</li><li>B收到，ACK = 1</li><li>B向A提出停止连接请求，FIN = 1</li><li>A收到，ACK = 1</li></ol><p>为什么四次握手？</p><blockquote><p><strong>四次挥手</strong>：<br>“喂，我不说了。”</p><p>“我知道了。等下，上一句还没说完。Balabala…..”</p><p>”好了，说完了，我也不说了。”</p><p>”我知道了。”</p></blockquote></li></ul><h4 id="4-报文段结构"><a href="#4-报文段结构" class="headerlink" title="4 报文段结构"></a>4 报文段结构</h4><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-19/87891251.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-19/87891251.jpg"></p><ul><li><strong>源端口和目的端口</strong> ：各占 2 字节。端口是传输层与应用层的服务接口，传输层的复用和分用功能都要通过端口才能实现</li><li><strong>序号</strong> / <strong>确认号</strong>：占 4 字节。这些字段被TCP发送方和接收方用来实现可靠数据传输服务。</li><li><strong>数据偏移（首部长度）</strong>：占 4 位。它指出 TCP 报文段的数据起始处距离 TCP 报文段的起始处有多远。“数据偏移”的单位是 32 位(以 4 字节为计算单位)</li><li><strong>保留</strong>：占 6 位。保留为今后使用，但目前应置为 0</li><li><strong>标志字段</strong>　<ul><li><strong>URG</strong> ：当 URG=1 时,表明紧急指针字段有效.它告诉系统此报文段中有紧急数据,应尽快传送(相当于高优先级的数据)</li><li><strong>ACK</strong> ：只有当 ACK=1 时确认号字段才有效；当 ACK=0 时,确认号无效</li><li><strong>PSH</strong> ：接收 TCP 收到 PSH = 1 的报文段，就尽快地交付接收应用进程，而不再等到整个缓存都填满了后再向上交付</li><li><strong>RST</strong> ：当 RST=1 时，表明 TCP 连接中出现严重差错（如由于主机崩溃或其他原因），必须释放连接，然后再重新建立运输连接</li><li><strong>SYN</strong> ：同步 SYN = 1 表示这是一个连接请求或连接接受报文</li><li><strong>FIN</strong> ：用来释放一个连接，FIN=1 表明此报文段的发送端的数据已发送完毕，并要求释放运输连接</li></ul></li><li><strong>窗口</strong> ：占2字节。用于流量控制。</li><li><strong>检验和</strong> ：占 2 字节。检验和字段检验的范围包括首部和数据这两部分，在计算检验和时，要在 TCP 报文段的前面加上 12 字节的伪首部</li><li><strong>紧急指针</strong> ：占 16 位。指出在本报文段中紧急数据共有多少个字节（紧急数据放在本报文段数据的最前面）</li><li><strong>选项</strong>：长度可变。TCP 最初只规定了一种选项，即最大报文段长度 MSS。MSS 告诉对方 TCP：“我的缓存所能接收的报文段的数据字段的最大长度是 MSS 个字节.” [MSS(Maximum Segment Size)是 TCP 报文段中的数据字段的最大长度.数据字段加上 TCP 首部才等于整个的 TCP 报文段]</li><li><strong>填充</strong> ：这是为了使整个首部长度是 4 字节的整数倍</li></ul><h4 id="5-可靠数据传输"><a href="#5-可靠数据传输" class="headerlink" title="5 可靠数据传输"></a>5 可靠数据传输</h4><ul><li><p>确认丢失和确认迟到</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-19/75308226.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-19/75308226.jpg"></p></li><li><p>超时重传</p><p>TCP 每发送一个报文段，就对这个报文段设置一次计时器。只要计时器设置的重传时间到但还没有收到确认，就要重传这一报文段。</p></li></ul><h4 id="6-拥塞控制"><a href="#6-拥塞控制" class="headerlink" title="6 拥塞控制"></a>6 拥塞控制</h4><ul><li><p><strong>拥塞窗口</strong></p><p><strong>含义:</strong></p><p>拥塞窗口的大小取决于网络的拥塞程度，并且动态地在变化。发送方让自己的发送窗口等于拥塞窗口，如再考虑到接收方的接收能力，则发送窗口还可能小于拥塞窗口。</p><p><strong>发送方控制拥塞窗口的原则:</strong></p><p>只要网络没有出现拥塞，拥塞窗口就再增大一些，以便把更多的分组发送出去.但只要网络出现拥塞，拥塞窗口就减小一些，以减少注入到网络中的分组数。</p></li><li><p><strong>慢启动</strong></p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-19/30139505.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-19/30139505.jpg"></p><ul><li>在主机刚刚开始发送报文段时可先设置拥塞窗口 cwnd = 1，即设置为一个最大报文段 MSS 的数值</li><li>在每收到一个对新的报文段的确认后,将拥塞窗口加 1，即增加一个 MSS 的数值</li><li>使用慢开始算法后，每经过一个传输轮次(往返时间 RTT)，拥塞窗口 cwnd 就加倍</li></ul></li><li><p><strong>拥塞避免</strong></p><p>拥塞避免状态：cwnd的值大约是上次遇到拥塞是的值的一半</p><p>线性增长，每个RTT只将cwnd的值增加一个MSS</p></li><li><p><strong>快速恢复</strong></p><p>Reno：</p><p>当出现丢包事件时，cwmd值为原来的一半，然后线性增长。</p><p>Tahoe：</p><p>当出现丢包事件时，ssthresh的值设置为cwmd值的一半，cwnd的值被设置为1个MSS，然后继续慢启动、拥塞避免。</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-19/99703705.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-19/99703705.jpg"></p></li></ul><p>拥塞窗口的大小取决于网络的拥塞程度,并且动态地在变化.发送方让自己的发送窗口等于拥塞窗口.如再考虑到接收方的接收能力,则发送窗口还可能小于拥塞窗口</p><p><strong>发送方控制拥塞窗口的原则:</strong></p><p>只要网络没有出现拥塞,拥塞窗口就再增大一些,以便把更多的分组发送出去.但只要网络出现拥塞,拥塞窗口就减小一些,以减少注入到网络中的分组数</p><h4 id="7-优缺点"><a href="#7-优缺点" class="headerlink" title="7 优缺点"></a>7 优缺点</h4><ul><li><p>优点</p><p>可靠、稳定</p></li><li><p>缺点</p><p>效率低、已被攻击（DOS）</p></li></ul><h3 id="UDP协议"><a href="#UDP协议" class="headerlink" title="UDP协议"></a>UDP协议</h3><h4 id="1-面向无连接"><a href="#1-面向无连接" class="headerlink" title="1 面向无连接"></a>1 面向无连接</h4><h4 id="2-优缺点"><a href="#2-优缺点" class="headerlink" title="2 优缺点"></a>2 优缺点</h4><ul><li><p>优点</p><p>传输速率快（适合音、视频传输，容忍丢失）</p></li><li><p>缺点</p><p>不可靠、不稳定（没有拥塞控制）</p><p>​</p></li></ul><h3 id="区别"><a href="#区别" class="headerlink" title="区别"></a>区别</h3><table><thead><tr><th style="text-align:center">TCP</th><th style="text-align:center">UDP</th></tr></thead><tbody><tr><td style="text-align:center">面向<strong>有连接</strong>的通信服务</td><td style="text-align:center">面向<strong>无连接</strong>的通信服务</td></tr><tr><td style="text-align:center">四元组（源IP+端口/目的IP+端口）</td><td style="text-align:center">二元组（目的IP+端口）</td></tr><tr><td style="text-align:center">提供可靠的通信传输</td><td style="text-align:center">不可靠，会丢包</td></tr><tr><td style="text-align:center">保证数据顺序</td><td style="text-align:center">可能乱序</td></tr><tr><td style="text-align:center">数据无边界</td><td style="text-align:center">数据有边界</td></tr><tr><td style="text-align:center">传输速度慢</td><td style="text-align:center">传输速度快</td></tr><tr><td style="text-align:center">面向字节流</td><td style="text-align:center">面向报文</td></tr><tr><td style="text-align:center">一对一</td><td style="text-align:center">可以一对一，或一对多</td></tr><tr><td style="text-align:center">报头至少20字节</td><td style="text-align:center">报头8字节</td></tr><tr><td style="text-align:center">有流量控制，拥塞控制</td><td style="text-align:center">没有</td></tr></tbody></table><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><p><a href="https://github.com/francistao/LearningNotes/blob/master/Part4/Network/TCP%E4%B8%8EUDP.md" target="_blank" rel="noopener">TCP与UDP</a></p></li><li><p><a href="https://www.cnblogs.com/yueminghai/p/6646043.html" target="_blank" rel="noopener">TCP详解</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="计算机网络" scheme="http://www.danboard.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="tcp" scheme="http://www.danboard.me/tags/tcp/"/>
    
  </entry>
  
  <entry>
    <title>右键菜单的新建项中添加办公程序</title>
    <link href="http://www.danboard.me/%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E7%9A%84%E6%96%B0%E5%BB%BA%E9%A1%B9%E4%B8%AD%E6%B7%BB%E5%8A%A0%E5%8A%9E%E5%85%AC%E7%A8%8B%E5%BA%8F/"/>
    <id>http://www.danboard.me/右键菜单的新建项中添加办公程序/</id>
    <published>2018-04-14T01:54:50.000Z</published>
    <updated>2018-04-27T14:47:36.997Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>平时打开办公软件的习惯时，直接右键 <strong>&rarr;</strong> 新建 <strong>&rarr;</strong> Word/Excel/PowerPoint等等，</p><p>桌面上没有办公软件的图标，显得简洁一点。</p><p>由于，平时一些实验报告要用到markdown来写，所以想到像word</p><p>这些办公软件一样直接在某个目录下新建，修改名称就可以了，编写的时候直接ctrl+s保存。</p><p>习惯因人而异，不喜勿喷！！！</p><ol><li><p>打开注册表</p><p>快捷键<code>Win+R</code>，输入regedit</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-14/34832776.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-14/34832776.jpg"></p></li></ol><ol><li><p>找到文件后缀名</p><p><code>HKEY_CLASSES_ROOT</code><strong>&rarr;</strong> <code>.md</code></p><p>右键 <strong>&rarr;</strong> 新建 <strong>&rarr;</strong> 项，命名为<code>ShellNew</code></p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-14/15734195.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-14/15734195.jpg"></p><p>进入<code>shellNew</code>，右键 <strong>&rarr;</strong> 新建 <strong>&rarr;</strong> 字符串值，命名为<code>NullFile</code>，</p><p>即每次打开markdown，都会创建一个空文档。</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-14/99743096.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-14/99743096.jpg"></p></li></ol><ol><li><p>使注册表生效</p><p>第一种：重启</p><p>第二种：任务管理器，找到<code>explorer.exe</code>，结束该进程，再启动（运行新任务+<code>explorer.exe</code>）</p><p>​</p></li><li><p>效果</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-14/56143068.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-14/56143068.jpg"></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="小技巧" scheme="http://www.danboard.me/categories/%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
    
      <category term="windows" scheme="http://www.danboard.me/tags/windows/"/>
    
      <category term="tips" scheme="http://www.danboard.me/tags/tips/"/>
    
      <category term="markdown" scheme="http://www.danboard.me/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>数组解析</title>
    <link href="http://www.danboard.me/%E6%95%B0%E7%BB%84%E8%A7%A3%E6%9E%90/"/>
    <id>http://www.danboard.me/数组解析/</id>
    <published>2018-04-12T05:09:54.000Z</published>
    <updated>2018-04-28T12:58:53.893Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="1-数组"><a href="#1-数组" class="headerlink" title="1 数组"></a>1 数组</h3><h4 id="1-1-定义"><a href="#1-1-定义" class="headerlink" title="1.1 定义"></a>1.1 定义</h4><blockquote><p>数组是一组具有相同类型的、<code>连续</code>的内存区域。要引用数组中的一个特定区域或元素，需要通过指定数组名和该元素在数组中的位置编号。</p></blockquote><h4 id="1-2-声明"><a href="#1-2-声明" class="headerlink" title="1.2 声明"></a>1.2 声明</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">5</span>];<span class="comment">// 大小为5 </span></span><br><span class="line"><span class="keyword">int</span> b[];<span class="comment">// Error</span></span><br></pre></td></tr></table></figure><h4 id="1-3-初始化"><a href="#1-3-初始化" class="headerlink" title="1.3 初始化"></a>1.3 初始化</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;;<span class="comment">// 初始化，大小为5</span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">5</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;<span class="comment">// 初始化，1，2，3，0，0</span></span><br><span class="line"><span class="keyword">int</span> a[<span class="number">5</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>&#125;;<span class="comment">// Error, 数组越界</span></span><br><span class="line"><span class="keyword">int</span> b[] = a;<span class="comment">// Error, 不能直接复制</span></span><br></pre></td></tr></table></figure><p><code>注意</code>：字符串数组，数组大小要比字符数大1，因为字符串数组后面还有一个默认的空字符’\0’</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> c[<span class="number">6</span>] = <span class="string">"Hello"</span>;</span><br></pre></td></tr></table></figure><h4 id="2-指针"><a href="#2-指针" class="headerlink" title="2 指针"></a>2 指针</h4><h4 id="2-1-定义"><a href="#2-1-定义" class="headerlink" title="2.1 定义"></a>2.1 定义</h4><blockquote><p>在C++中，数组和指针是密切相关的，两者几乎可以交换使用。可以认为一个数组名就是一个常量指针。</p></blockquote><h4 id="2-2-使用"><a href="#2-2-使用" class="headerlink" title="2.2 使用"></a>2.2 使用</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> b[<span class="number">5</span>];</span><br><span class="line"><span class="keyword">int</span> *bptr;</span><br><span class="line"><span class="comment">// 数组名不带下标，是一个指向数组第一个元素的指针</span></span><br><span class="line">bptr = b; <span class="comment">// bptr = &amp; b[0];</span></span><br><span class="line"><span class="comment">// * (bptr+3)  等价于 b[3]</span></span><br></pre></td></tr></table></figure><h4 id="2-3-数组指针"><a href="#2-3-数组指针" class="headerlink" title="2.3 数组指针"></a>2.3 数组指针</h4><blockquote><p>指向数组的指针。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> a[<span class="number">2</span>][<span class="number">2</span>] = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;;  <span class="comment">// 二维数组</span></span><br><span class="line"><span class="keyword">int</span> (*p)[<span class="number">2</span>] = a;</span><br><span class="line"><span class="comment">// a 是一个数组名，指向一维数组的指针，值 &amp;a[0][0]， sizeof(a) = 16</span></span><br><span class="line"><span class="comment">// a[0] 是一维数组名，指向整型的指针，值 &amp;a[0][0]</span></span><br><span class="line"><span class="comment">// a[1] 是一维数组名，指向整型的指针，值 &amp;a[1][0]</span></span><br><span class="line"><span class="comment">// p 是一个数组指针变量，值 &amp;a[0][0], sizeof(p) = 4</span></span><br></pre></td></tr></table></figure><h4 id="2-4-指针数组"><a href="#2-4-指针数组" class="headerlink" title="2.4 指针数组"></a>2.4 指针数组</h4><blockquote><p>存放指针的数组。常见于构成基于指针的字符串的数组。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">char</span> *p[<span class="number">2</span>] = &#123;<span class="string">"Hello"</span>, <span class="string">"World"</span>&#125;;</span><br><span class="line"><span class="comment">// p，指向char数组的指针，值 &amp;p[0]，sizeof(p) = 16</span></span><br><span class="line"><span class="comment">// p[0] 是一个char数组，值"Hello"</span></span><br></pre></td></tr></table></figure><h3 id="3-vector"><a href="#3-vector" class="headerlink" title="3 vector"></a>3 vector</h3><h4 id="3-1-定义"><a href="#3-1-定义" class="headerlink" title="3.1 定义"></a>3.1 定义</h4><blockquote><p>一个封装了动态大小数组的顺序容器（Sequence Container），能够存放任意类型的动态数组。</p><p>效率：数组&gt;vector，原因是vector的插入删除要消耗更多时间。</p></blockquote><h4 id="3-2-初始化"><a href="#3-2-初始化" class="headerlink" title="3.2 初始化"></a>3.2 初始化</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; a(<span class="number">3</span>);<span class="comment">// 大小为3</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; b(<span class="number">3</span>, <span class="number">0</span>);<span class="comment">// 大小为3，初始化为0</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; c = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;<span class="comment">// 大小为3，初始化为1，2，3，等号可以省略</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; d = c;<span class="comment">// 直接复制</span></span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; e(c);<span class="comment">// 直接复制</span></span><br></pre></td></tr></table></figure><h4 id="3-3-函数"><a href="#3-3-函数" class="headerlink" title="3.3 函数"></a>3.3 函数</h4><h5 id="3-3-1-构造函数"><a href="#3-3-1-构造函数" class="headerlink" title="3.3.1 构造函数"></a>3.3.1 构造函数</h5><ul><li>vector<t>():创建一个空vector</t></li><li>vector<t>(int n):创建一个vector，大小为n</t></li><li>vector<t>(int n, const t&amp; t):创建一个vector，大小为n，且值均为t</t></li><li>vector<t>(const vector&amp; a):复制构造函数</t></li><li>vector<t>(a.begin(), a.end()):复制[begin,end)区间内数组a的元素到vector中</t></li></ul><h5 id="3-3-2-插入函数"><a href="#3-3-2-插入函数" class="headerlink" title="3.3.2 插入函数"></a>3.3.2 插入函数</h5><ul><li>a.push_back(const T&amp; x):尾部插入元素</li><li>a.insert(iterator it, const T&amp; x):指定位置插入</li></ul><h5 id="3-3-3-删除函数"><a href="#3-3-3-删除函数" class="headerlink" title="3.3.3 删除函数"></a>3.3.3 删除函数</h5><ul><li>a.erase(iterator it):删除向量中迭代器指向元素</li><li>a.erase(iterator first, iterator last):删除向量中[first,last)中元素</li><li>a.pop_back():删除向量中最后一个元素</li><li>a.clear():清空向量中所有元素</li></ul><h5 id="3-3-4-其他函数"><a href="#3-3-4-其他函数" class="headerlink" title="3.3.4 其他函数"></a>3.3.4 其他函数</h5><ul><li>bool empty() const:判断向量是否为空，若为空，则向量中无元素</li><li>int size() const:返回向量中元素的个数</li></ul><h3 id="4-array"><a href="#4-array" class="headerlink" title="4 array"></a>4 array</h3><h4 id="4-1-定义"><a href="#4-1-定义" class="headerlink" title="4.1 定义"></a>4.1 定义</h4><blockquote><p>c++11中给数组提供的更加安全的访问方式，是一种容器类型，支持一系列容器操作。</p><p>效率跟数组相近。</p></blockquote><h4 id="4-2-初始化"><a href="#4-2-初始化" class="headerlink" title="4.2 初始化"></a>4.2 初始化</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">array</span>&lt;类型, 大小&gt; a; </span><br><span class="line"><span class="built_in">array</span>&lt;<span class="keyword">int</span>, 3&gt; a = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;;</span><br><span class="line"><span class="built_in">array</span>&lt;<span class="keyword">int</span>, 3&gt; b = a; <span class="comment">// 大小一致</span></span><br></pre></td></tr></table></figure><h3 id="5-总结"><a href="#5-总结" class="headerlink" title="5 总结"></a>5 总结</h3><table><thead><tr><th></th><th>数组</th><th>vector</th><th>array</th><th>备注</th></tr></thead><tbody><tr><td>内存</td><td>栈（静态）</td><td>堆（动态）</td><td>栈（静态）</td><td></td></tr><tr><td>效率</td><td>高</td><td>低</td><td>高</td><td></td></tr><tr><td>索引</td><td>a[i]</td><td>a[i] / a.at(i)</td><td>a[i]</td><td>i从0开始</td></tr><tr><td>a.at(i)检查是否越界</td><td>N</td><td>Y</td><td>Y</td><td>array&lt;int, 2&gt;a= { 1,2, };cout &lt;&lt; a.at(-1) &lt;&lt; endl; // Error</td></tr><tr><td>复制</td><td>N</td><td>Y，类型相同</td><td>Y，类型和大小相同</td><td></td></tr><tr><td>大小</td><td>sizeof(a)/size(类型)，固定</td><td>a.size()，可变</td><td>a.size()，固定</td><td></td></tr><tr><td>include</td><td>N</td><td><code>&lt;vector&gt;</code></td><td><code>&lt;array&gt;</code></td><td></td></tr><tr><td>初始化赋值</td><td>Y</td><td>Y</td><td>Y</td><td></td></tr><tr><td>插入</td><td>N</td><td>Y</td><td>N</td><td></td></tr><tr><td>删除</td><td>N</td><td>Y</td><td>N</td><td></td></tr><tr><td>访问数组范围外的数据</td><td>Y</td><td>Y</td><td>Y</td><td>例如a[-40]或者a[100]</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="C/C++" scheme="http://www.danboard.me/categories/C-C/"/>
    
    
      <category term="C/C++" scheme="http://www.danboard.me/tags/C-C/"/>
    
  </entry>
  
  <entry>
    <title>排序算法总结和归纳</title>
    <link href="http://www.danboard.me/%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E6%80%BB%E7%BB%93%E5%92%8C%E5%BD%92%E7%BA%B3/"/>
    <id>http://www.danboard.me/排序算法总结和归纳/</id>
    <published>2018-04-12T03:08:08.000Z</published>
    <updated>2018-04-27T14:44:26.137Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-12/62911742.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-12/62911742.jpg"></p><a id="more"></a><blockquote><p><strong>非线性时间比较类排序</strong>：通过比较来决定元素间的相对次序，由于其时间复杂度不能突破O(nlogn)，因此称为非线性时间比较类排序。</p><p><strong>线性时间非比较类排序</strong>：不通过比较来决定元素间的相对次序，它可以突破基于比较排序的时间下界，以线性时间运行，因此称为线性时间非比较类排序。</p></blockquote><h3 id="1-冒泡排序"><a href="#1-冒泡排序" class="headerlink" title="1 冒泡排序"></a>1 冒泡排序</h3><blockquote><p>交换排序，最简单的一种排序算法。</p><p>从第一个元素开始，与之后的元素逐一比较，如果后者小于前者，则交换位置，从而找到最小的元素。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bubble</span><span class="params">(<span class="keyword">int</span>* a, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n<span class="number">-1</span>-i; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[j] &gt; a[j+<span class="number">1</span>])&#123;</span><br><span class="line">swap(a[i], a[j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-快速排序"><a href="#2-快速排序" class="headerlink" title="2 快速排序"></a>2 快速排序</h3><blockquote><p>交换排序，是冒泡排序的一种改进算法。</p><p>通过一次排序将待排数据分割成两部分，前一部分数据均比后一部分数据小，则可分别对这两部分的数据继续排序，从而达到整体有序。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">Partition</span><span class="params">(<span class="keyword">int</span>* a, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i = low, j = high;</span><br><span class="line"><span class="keyword">while</span>(i &lt; j) &#123;</span><br><span class="line"><span class="keyword">while</span>(i &lt; j &amp;&amp; a[i] &lt;= a[j])j --;<span class="comment">// 右侧扫描 </span></span><br><span class="line"><span class="keyword">if</span>(i &lt; j) &#123;</span><br><span class="line">swap(a[i], a[j]);i ++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(i &lt; j &amp;&amp; a[i] &lt;= a[j])i ++;<span class="comment">// 左侧扫描</span></span><br><span class="line"><span class="keyword">if</span>(i &lt; j) &#123;</span><br><span class="line">swap(a[i], a[j]);j --;</span><br><span class="line">&#125; </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Quick</span><span class="params">(<span class="keyword">int</span>* a, <span class="keyword">int</span> low, <span class="keyword">int</span> high)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(low &lt; high) &#123;</span><br><span class="line"><span class="keyword">int</span> pivot = Partition(a, low, high);<span class="comment">// 一次划分 </span></span><br><span class="line">Quick(a, low, pivot<span class="number">-1</span>);<span class="comment">// 前一个子序列排序 </span></span><br><span class="line">Quick(a, pivot+<span class="number">1</span>, high);<span class="comment">// 后一个子序列排序 </span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-插入排序"><a href="#3-插入排序" class="headerlink" title="3 插入排序"></a>3 插入排序</h3><blockquote><p>简单排序算法。</p><p>默认第一个元素已经排序好，将下一个元素按大小插入已排好序的列表，重复这样的操作，知道最后一个元素插入。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Insert</span><span class="params">(<span class="keyword">int</span>* a, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n<span class="number">-1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> tmp = a[i];<span class="comment">// 记录待排记录</span></span><br><span class="line"><span class="keyword">int</span> j = i - <span class="number">1</span>; </span><br><span class="line">      <span class="comment">// 与前面排好的序列记录依次比较</span></span><br><span class="line"><span class="keyword">while</span>(j &gt;= <span class="number">0</span> &amp;&amp; a[j] &gt; tmp) &#123;</span><br><span class="line">a[j+<span class="number">1</span>] = a[j];</span><br><span class="line">j --;</span><br><span class="line">&#125;</span><br><span class="line">a[j+<span class="number">1</span>] = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-希尔排序"><a href="#4-希尔排序" class="headerlink" title="4 希尔排序"></a>4 希尔排序</h3><blockquote><p>插入排序的改进，也叫“缩小增量排序”。</p><p>先将整个待排序列分割成若干个子序列，分别进行插入排序，逐渐缩小划分的间隔，直到最后，间隔为1，对全体进行一次插入排序，得到一个有序序列。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Shell</span><span class="params">(<span class="keyword">int</span>* a, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> d=n/<span class="number">2</span>; d&gt;=<span class="number">1</span>; d=d/<span class="number">2</span>) &#123;<span class="comment">// 初始间隔为序列大小的一半 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=d; i&lt;n; i++) &#123;</span><br><span class="line"><span class="keyword">int</span> tmp = a[i];<span class="comment">// 记录待排记录 </span></span><br><span class="line"><span class="keyword">int</span> j = i - d; </span><br><span class="line"><span class="keyword">while</span>(j&gt;=<span class="number">0</span> &amp;&amp; a[j]&gt;tmp) &#123;<span class="comment">// 进行插入排序 </span></span><br><span class="line">a[j+d] = a[j];</span><br><span class="line">j -= d;</span><br><span class="line">&#125;</span><br><span class="line">a[j+d] = tmp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="5-选择排序"><a href="#5-选择排序" class="headerlink" title="5 选择排序"></a>5 选择排序</h3><blockquote><p>简单的排序算法。</p><p>每次在未排序序列中找到最小元素，存放到已排序列。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Select</span><span class="params">(<span class="keyword">int</span>* a, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n<span class="number">-1</span>; i++) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;n; j++) &#123;</span><br><span class="line"><span class="keyword">if</span>(a[i] &gt; a[j])&#123;</span><br><span class="line">swap(a[i], a[j]);</span><br><span class="line">&#125;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-堆排序"><a href="#6-堆排序" class="headerlink" title="6 堆排序"></a>6 堆排序</h3><blockquote><p>堆排序利用了大根堆（或小根堆）堆顶记录的关键字最大（或最小）这一特征，使得在当前无序区中选取最大（或最小）关键字的记录变得简单。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Adjust</span><span class="params">(<span class="keyword">int</span>* a, <span class="keyword">int</span> p, <span class="keyword">int</span> n)</span> <span class="comment">//堆调整</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">2</span>*p+<span class="number">1</span>; i&lt;n; i=i*<span class="number">2</span>+<span class="number">1</span>)&#123;</span><br><span class="line"><span class="comment">//如果右边值大于左边值，指向右边</span></span><br><span class="line"><span class="keyword">if</span>(i+<span class="number">1</span> &lt; n &amp;&amp; a[i] &lt; a[i+<span class="number">1</span>])i ++;</span><br><span class="line"><span class="comment">//如果子节点大于父节点，将子节点值赋给父节点,并以新的子节点作为父节点 </span></span><br><span class="line"><span class="keyword">if</span>(a[p] &gt;= a[i])<span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">swap(a[p], a[i]);</span><br><span class="line">p = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Heap</span><span class="params">(<span class="keyword">int</span>* a, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// 构建大顶堆 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n/<span class="number">2</span><span class="number">-1</span>; i&gt;=<span class="number">0</span>; i--) &#123;</span><br><span class="line">Adjust(a, i, n); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//  交换堆顶与末尾元素，重新调整堆 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i=n<span class="number">-1</span>; i&gt;<span class="number">0</span>; i--) &#123;</span><br><span class="line">swap(a[<span class="number">0</span>], a[i]);</span><br><span class="line">Adjust(a, <span class="number">0</span>, i);  </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="7-归并排序"><a href="#7-归并排序" class="headerlink" title="7 归并排序"></a>7 归并排序</h3><blockquote><p>分治法，将已有序的子序列合并，得到完全有序的序列；即先使每个子序列有序，再使子序列段间有序。若将两个有序表合并成一个有序表，称为2-路归并。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Merge</span><span class="params">(<span class="keyword">int</span> sourceArr[], <span class="keyword">int</span> tempArr[], <span class="keyword">int</span> startIndex, <span class="keyword">int</span> midIndex, <span class="keyword">int</span> endIndex)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i = startIndex, j = midIndex+<span class="number">1</span>, k = startIndex;</span><br><span class="line">    <span class="keyword">while</span>(i!=midIndex+<span class="number">1</span> &amp;&amp; j!=endIndex+<span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span>(sourceArr[i] &gt; sourceArr[j])</span><br><span class="line">            tempArr[k++] = sourceArr[j++];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            tempArr[k++] = sourceArr[i++];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(i != midIndex+<span class="number">1</span>)</span><br><span class="line">        tempArr[k++] = sourceArr[i++];</span><br><span class="line">    <span class="keyword">while</span>(j != endIndex+<span class="number">1</span>)</span><br><span class="line">        tempArr[k++] = sourceArr[j++];</span><br><span class="line">    <span class="keyword">for</span>(i=startIndex; i&lt;=endIndex; i++)</span><br><span class="line">        sourceArr[i] = tempArr[i];</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">MergeSort</span><span class="params">(<span class="keyword">int</span> sourceArr[], <span class="keyword">int</span> tempArr[], <span class="keyword">int</span> startIndex, <span class="keyword">int</span> endIndex)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> midIndex;</span><br><span class="line">    <span class="keyword">if</span>(startIndex &lt; endIndex) &#123;</span><br><span class="line">        midIndex = (startIndex + endIndex) / <span class="number">2</span>;</span><br><span class="line">        <span class="comment">// 递归，二路归并 </span></span><br><span class="line">        MergeSort(sourceArr, tempArr, startIndex, midIndex);</span><br><span class="line">        MergeSort(sourceArr, tempArr, midIndex+<span class="number">1</span>, endIndex);</span><br><span class="line">        <span class="comment">// 内部排序 </span></span><br><span class="line">        Merge(sourceArr, tempArr, startIndex, midIndex, endIndex);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="8-计数排序"><a href="#8-计数排序" class="headerlink" title="8 计数排序"></a>8 计数排序</h3><blockquote><p>计数排序是一个非基于比较的排序算法，它的优势在于在对一定范围内的整数排序时，它的复杂度为Ο(n+k)（其中k是整数的范围），快于任何比较排序算法。<br>当然这是一种牺牲空间换取时间的做法，而且当O(k)&gt;O(n<em>log</em>n)的时候其效率反而不如基于比较的排序。</p><p>思路：根据元素大小作为另一个数组的序号，再统计该元素的个数，最后按序输出。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># <span class="meta-keyword">define</span> MAX 1000</span></span><br><span class="line"><span class="keyword">int</span> bucket[MAX];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">CountSort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++) &#123;</span><br><span class="line">        bucket[arr[i]]++;</span><br><span class="line">    &#125;</span><br><span class="line"> <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;MAX; j++) &#123;</span><br><span class="line">        <span class="keyword">while</span>(bucket[j] &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            arr[k++] = j;</span><br><span class="line">            bucket[j] --;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="9-桶排序"><a href="#9-桶排序" class="headerlink" title="9 桶排序"></a>9 桶排序</h3><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-27/1529781.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-27/1529781.jpg"></p><blockquote><p>计数排序的改进。将数据分到有限数量的桶里，每个桶再分别排序。</p><p>最好情况下使用线性时间O(n)，桶排序的时间复杂度，取决于对各个桶之间数据进行排序的时间复杂度，因为其它部分的时间复杂度都为O(n)。很显然，桶划分的越小，各个桶之间的数据越少，排序所用的时间也会越少。但相应的空间消耗就会增大。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DEFAULT_BUCKET_SIZE 5</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">BucketSort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> n, <span class="keyword">int</span> bucketSize)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(n == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">int</span> minValue = arr[<span class="number">0</span>], maxValue = arr[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; n; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span>(arr[i] &gt; maxValue) maxValue = arr[i];</span><br><span class="line">        <span class="keyword">if</span>(arr[i] &lt; minValue) minValue = arr[i];</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    bucketSize = bucketSize || DEFAULT_BUCKET_SIZE;<span class="comment">// 默认每个桶的容量为5</span></span><br><span class="line">    <span class="keyword">int</span> bucketNum = (maxValue-minValue)/bucketSize + <span class="number">1</span>;<span class="comment">// 桶的数量</span></span><br><span class="line">    </span><br><span class="line">    <span class="built_in">vector</span>&lt; <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; buckets(bucketNum);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;n; i++)</span><br><span class="line">        buckets[(arr[i]-minValue)/bucketSize].push_back(arr[i]);</span><br><span class="line">        </span><br><span class="line">    <span class="keyword">int</span> sortIndex = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;buckets.size(); i++) &#123;</span><br><span class="line">        insertSort(buckets[i]);<span class="comment">// 插入排序 </span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;buckets[i].size(); j++)</span><br><span class="line">            arr[sortIndex++] = buckets[i][j];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-基数排序"><a href="#10-基数排序" class="headerlink" title="10 基数排序"></a>10 基数排序</h3><blockquote><p>基数排序是按照低位先排序，然后收集；再按照高位排序，然后再收集；依次类推，直到最高位。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// LSD</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">RedixSort</span><span class="params">(<span class="keyword">int</span> arr[], <span class="keyword">int</span> n, <span class="keyword">int</span> maxDigit)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span> maxValue = arr[<span class="number">0</span>], maxDigit = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">1</span>; i&lt;n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (arr[i] &gt; maxValue)maxValue = arr[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (maxValue) &#123;</span><br><span class="line">maxValue /= <span class="number">10</span>;</span><br><span class="line">maxDigit ++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> mod = <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> dev = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">vector</span>&lt; <span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt; &gt; buckets(<span class="number">10</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;maxDigit; i++, dev*=<span class="number">10</span>, mod*=<span class="number">10</span>) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;n; j++) &#123;</span><br><span class="line">            <span class="keyword">int</span> bid = arr[j] % mod / dev;<span class="comment">//取出对应数位作为桶编号</span></span><br><span class="line">            buckets[bid].push_back(arr[j]); </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">int</span> sortIndex = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;buckets.size(); i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>; j&lt;buckets[i].size(); j++)</span><br><span class="line">                arr[sortIndex++] = buckets[i][j];</span><br><span class="line">            buckets[i].clear();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11-Sort"><a href="#11-Sort" class="headerlink" title="11 Sort"></a>11 Sort</h3><blockquote><p>sort并不是简单的<strong>快速排序</strong>，它对普通的快速排序进行了优化，此外，它还结合了<strong>插入排序</strong>和<strong>推排序</strong>。系统会根据你的数据形式和数据量自动选择合适的排序方法，这并不是说它每次排序只选择一种方法，它是在一次完整排序中不同的情况选用不同方法，比如给一个数据量较大的数组排序，开始采用快速排序，分段递归，分段之后每一段的数据量达到一个较小值后它就不继续往下递归，而是选择插入排序，如果递归的太深，他会选择推排序。</p></blockquote><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;// 头文件</span></span></span><br><span class="line"></span><br><span class="line">sort(a, a+n, cmp);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 自定义排序方式</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">cmp</span><span class="params">(<span class="keyword">int</span> a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a &lt; b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-12/3324881.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-12/3324881.jpg"></p><blockquote><p><strong>稳定</strong>：如果a原本在b前面，而a=b，排序之后a仍然在b的前面。</p><p><strong>时间复杂度</strong>：对排序数据的总的操作次数。反映当n变化时，操作次数呈现什么规律。</p><p><strong>空间复杂度：</strong>是指算法在计算机内执行时所需存储空间的度量，它也是数据规模n的函数。</p></blockquote><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><p><a href="https://www.cnblogs.com/onepixel/articles/7674659.html" target="_blank" rel="noopener">十大经典排序算法</a></p></li><li><p><a href="http://www.cnblogs.com/AlvinZH/p/6784862.html" target="_blank" rel="noopener">sort函数详解</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-12/62911742.jpg&quot; alt=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-12/62911742.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="数据结构" scheme="http://www.danboard.me/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="C/C++" scheme="http://www.danboard.me/tags/C-C/"/>
    
      <category term="sort" scheme="http://www.danboard.me/tags/sort/"/>
    
  </entry>
  
  <entry>
    <title>文章加密TEST1</title>
    <link href="http://www.danboard.me/%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86TEST1/"/>
    <id>http://www.danboard.me/文章加密TEST1/</id>
    <published>2018-04-07T09:22:31.000Z</published>
    <updated>2018-04-27T14:46:37.899Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-24/41210940.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-24/41210940.jpg"></p><a id="more"></a><p>这只是一种障眼法</p><p>文件<code>/themes/next/layout/_partials/head.swig</code> ，添加如下代码</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">script</span>&gt;</span><br><span class="line">    (<span class="selector-tag">function</span>()&#123;</span><br><span class="line">        if('&#123;&#123; page.password &#125;&#125;')&#123;</span><br><span class="line">            if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123;</span><br><span class="line">                alert('密码错误！');</span><br><span class="line">                <span class="selector-tag">history</span><span class="selector-class">.back</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>文章属性添加</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password: # 你设定的密码</span><br></pre></td></tr></table></figure><p>​</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-24/41210940.jpg&quot; alt=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-24/41210940.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.danboard.me/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="http://www.danboard.me/tags/hexo/"/>
    
      <category term="encrypt" scheme="http://www.danboard.me/tags/encrypt/"/>
    
  </entry>
  
  <entry>
    <title>文章加密TEST2</title>
    <link href="http://www.danboard.me/%E6%96%87%E7%AB%A0%E5%8A%A0%E5%AF%86TEST2/"/>
    <id>http://www.danboard.me/文章加密TEST2/</id>
    <published>2018-04-07T09:03:15.000Z</published>
    <updated>2018-04-27T14:46:57.374Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link href="/style.css" rel="stylesheet" type="text/css"><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" Please enter the password to read. " /> <label for="pass"> Please enter the password to read. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-24/41210940.jpg&quot;/&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.danboard.me/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="http://www.danboard.me/tags/hexo/"/>
    
      <category term="encrypt" scheme="http://www.danboard.me/tags/encrypt/"/>
    
  </entry>
  
  <entry>
    <title>使用GitHub+Hexo搭建个人博客（五）Hexo博客优化和补充</title>
    <link href="http://www.danboard.me/%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%94%EF%BC%89Hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E5%92%8C%E8%A1%A5%E5%85%85/"/>
    <id>http://www.danboard.me/使用GitHub-Hexo搭建个人博客（五）Hexo博客优化和补充/</id>
    <published>2018-04-01T16:40:29.000Z</published>
    <updated>2018-04-27T14:45:34.535Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-24/23205089.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-24/23205089.jpg"></p><a id="more"></a><h3 id="SEO"><a href="#SEO" class="headerlink" title="SEO"></a>SEO</h3><blockquote><p>SEO（Search Engine Optimization），汉译为搜索引擎优化。搜索引擎优化是一种利用搜索引擎的搜索规则来提高目前网站在有关搜索引擎内的自然排名的方式。——百度百科</p></blockquote><h4 id="1-站点地图"><a href="#1-站点地图" class="headerlink" title="1 站点地图"></a>1 站点地图</h4><blockquote><p>站点地图是一个网站所有链接的容器。很多网站的连接层次比较深，爬虫很难抓取到，站点地图可以方便爬虫抓取网站页面，通过抓取网站页面，清晰了解网站的架构，网站地图一般存放在根目录下并命名sitemap，为爬虫指路，增加网站重要内容页面的收录。——百度百科</p></blockquote><ul><li><p>安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-sitemap --save     </span><br><span class="line">$ npm install hexo-generator-baidu-sitemap --save</span><br></pre></td></tr></table></figure></li><li><p><code>站点配置文件</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># URL</span></span><br><span class="line"><span class="comment">## If your site is put in a subdirectory, set url as 'http://yoursite.com/child' and root as '/child/'</span></span><br><span class="line"><span class="attr">url:</span> <span class="attr">http://www.danboard.me</span></span><br><span class="line"><span class="attr">root:</span> <span class="string">/</span></span><br><span class="line"><span class="attr">permalink:</span> <span class="string">:title/</span><span class="comment"># 链接后缀</span></span><br><span class="line"><span class="attr">permalink_defaults:</span><span class="comment"># 默认值</span></span><br><span class="line"><span class="attr">  lang:</span> <span class="string">en</span></span><br></pre></td></tr></table></figure><p>permalink默认是<code>:year/:month/:day/:title/</code> ，这样我们的文章生成的连接就会是<code>sitname/year/month/day/title</code> ，网站的连接层次比较深，很难被爬虫抓取，所以可以减少连接的层次</p></li><li><p>验证</p><p>执行修改后，可以在public目录中看到生成的两个文件<code>sitemap.xml</code>和<code>baidusitemap.xml</code></p><p>在浏览器中输入相应地址，如<code>http://www.danboard.me/sitemap.xml</code>来检查是否生成成功</p><p>​</p></li></ul><h4 id="2-谷歌收录"><a href="#2-谷歌收录" class="headerlink" title="2 谷歌收录"></a>2 谷歌收录</h4><p>效率非常高，但需要<code>翻墙</code>，也就是说你的博客只能在境外才能被搜索到</p><ul><li><p>首先检查站点是否被收录</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/42569564.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/42569564.jpg"></p></li><li><p>尝试使用Google Search Console</p><ol><li>登录/注册</li><li>添加站点</li></ol><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/26377477.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/26377477.jpg"></p><ol><li>验证站点</li></ol><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/98687379.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/98687379.jpg"></p><ol><li><p>提交站点地图</p><p>抓取 &gt; 站点地图</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/11008804.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/11008804.jpg"></p></li><li><p>验证收录</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/4197760.jpg" alt=""></p><p>​</p></li></ol></li></ul><h4 id="3-百度收录"><a href="#3-百度收录" class="headerlink" title="3 百度收录"></a>3 百度收录</h4><p>同样是，登录/注册 $\rightarrow$ 添加站点 $\rightarrow$ 验证站点 $\rightarrow$ 提交站点地图</p><p>提交链接效率：主动推送 &gt; 自动推送 &gt; sitemap</p><ul><li><p>主动推送</p><ol><li><p>安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-baidu-url-submit --save</span><br></pre></td></tr></table></figure></li><li><p><code>站点配置文件</code>，添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidu_url_submit:</span></span><br><span class="line"><span class="attr">   count:</span> <span class="number">1</span> <span class="comment"># 提交最新的一个链接</span></span><br><span class="line"><span class="attr">   host:</span> <span class="string">www.danboard.me</span><span class="comment"># 你的博客站点</span></span><br><span class="line"><span class="attr">   token:</span> <span class="string">your_token</span> <span class="comment"># 你的密钥</span></span><br><span class="line"><span class="attr">   path:</span> <span class="string">baidu_urls.txt</span> <span class="comment"># 新链接存放文档</span></span><br></pre></td></tr></table></figure><p>your_token:</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/53193568.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/53193568.jpg"></p></li><li><p>提交</p><p>更新发布，使用命令<code>hexo deploy</code>时提交</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">- type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> </span><br><span class="line"><span class="bullet">    -</span> <span class="string">你的github项目地址</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span><span class="comment"># old</span></span><br><span class="line"><span class="attr">- type:</span> <span class="string">baidu_url_submitter</span>  <span class="comment"># new</span></span><br></pre></td></tr></table></figure><p><strong>注意</strong>：<code>-</code>属于一部分，注意格式对齐，否则会报错</p></li></ol></li></ul><ul><li><p>自动推送</p><p><code>主题配置文件</code> ，字段baidu_push</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Enable baidu push so that the blog will push the url to baidu automatically which is very helpful for SEO</span></span><br><span class="line"><span class="attr">baidu_push:</span> <span class="string">ture</span></span><br></pre></td></tr></table></figure><p>脚本位置位于<code>themes/next/layout/_third-party/seo/baidu-push.swig</code></p></li><li><p>sitemap</p><p>与谷歌提交一致</p></li></ul><p>！！！还没有结束，百度收录不仅慢而且也比较麻烦了，因为github屏蔽了百度的爬虫，所以部署在github上的静态站点很难被百度搜索到。</p><p>解决方法：</p><ul><li>将静态Pages托管到Coding上，重新解析一个新的二级域名，这样Coding和Github上的Pages就变成了两个独立的博客了。</li><li>同一域名解析到不同的IP，保持之前的配置不改动，通过配置DNS，使国内的线路流量分配到Coding上，而其他线路分配到GitHub。这样，百度抓取就会跑到Coding上去。</li></ul><h4 id="4-DNS流量分发"><a href="#4-DNS流量分发" class="headerlink" title="4 DNS流量分发"></a>4 DNS流量分发</h4><ul><li><p>Coding</p><p>配置与GitHub是一致的，创建项目 $\rightarrow$ 开启静态Pages $\rightarrow$ 绑定域名</p><p><code>站点配置文件</code>，找到deploy：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">- type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> </span><br><span class="line"><span class="bullet">    -</span> <span class="string">你的github项目地址</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">你的coding醒目地址</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span><span class="comment"># old</span></span><br><span class="line"><span class="attr">- type:</span> <span class="string">baidu_url_submitter</span>  <span class="comment"># new</span></span><br></pre></td></tr></table></figure></li><li><p>DNSPOD</p><p>已被腾讯收购，可以登录DNSPOD / 腾讯云</p><ol><li><p>修改域名服务器，以GoDaddy域名为例</p><p>先进入腾讯云控制台 $\rightarrow$ 域名管理，可以看到下方提示</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/79995561.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/79995561.jpg"></p></li><li><p>登录GoDaddy</p><p>进入域名DNS管理，修改DNS，选择自定义</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/62462219.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/62462219.jpg"></p></li><li><p>返回腾讯云，进行域名解析</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/32300687.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/32300687.jpg"></p><p>​</p></li></ol></li></ul><h3 id="静态文件加载"><a href="#静态文件加载" class="headerlink" title="静态文件加载"></a>静态文件加载</h3><blockquote><p>静态文件是一些js、css、html等文件，一般网站都会调用一大堆这些文件，如果调用的一些静态资源是通用的文件（第三方库），如jquery、fancybox，可以设定成合适的 CDN 地址，从而加速网站的运行。</p></blockquote><p>参考：<a href="http://theme-next.iissnan.com/advanced-settings.html" target="_blank" rel="noopener">NexT文档</a></p><p><code>主题配置文档</code>，字段vendors</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Script Vendors.</span></span><br><span class="line"><span class="comment"># Set a CDN address for the vendor you want to customize.</span></span><br><span class="line"><span class="comment"># For example</span></span><br><span class="line"><span class="comment">#    jquery: https://ajax.googleapis.com/ajax/libs/jquery/2.2.0/jquery.min.js</span></span><br><span class="line"><span class="comment"># Be aware that you should use the same version as internal ones to avoid potential problems.</span></span><br><span class="line"><span class="comment"># Please use the https protocol of CDN files when you enable https on your site.</span></span><br><span class="line"><span class="attr">vendors:</span></span><br><span class="line">  <span class="comment"># Internal path prefix. Please do not edit it.</span></span><br><span class="line"><span class="attr">  _internal:</span> <span class="string">lib</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Internal version: 2.1.3</span></span><br><span class="line"><span class="attr">  jquery:</span> <span class="string">//cdn.jsdelivr.net/jquery/2.1.3/jquery.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Internal version: 2.1.5</span></span><br><span class="line">  <span class="comment"># See: http://fancyapps.com/fancybox/</span></span><br><span class="line"><span class="attr">  fancybox:</span> <span class="string">//cdn.jsdelivr.net/fancybox/2.1.5/jquery.fancybox.pack.js</span></span><br><span class="line"><span class="attr">  fancybox_css:</span> <span class="string">//cdn.jsdelivr.net/fancybox/2.1.5/jquery.fancybox.min.css</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Internal version: 1.0.6</span></span><br><span class="line">  <span class="comment"># See: https://github.com/ftlabs/fastclick</span></span><br><span class="line"><span class="attr">  fastclick:</span> <span class="string">//cdn.jsdelivr.net/fastclick/1.0.6/fastclick.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Internal version: 1.9.7</span></span><br><span class="line">  <span class="comment"># See: https://github.com/tuupola/jquery_lazyload</span></span><br><span class="line"><span class="attr">  lazyload:</span> <span class="string">//cdn.jsdelivr.net/jquery.lazyload/1.9.3/jquery.lazyload.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Internal version: 1.2.1</span></span><br><span class="line">  <span class="comment"># See: http://VelocityJS.org</span></span><br><span class="line"><span class="attr">  velocity:</span> <span class="string">//cdn.jsdelivr.net/velocity/1.2.3/velocity.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Internal version: 1.2.1</span></span><br><span class="line">  <span class="comment"># See: http://VelocityJS.org</span></span><br><span class="line"><span class="attr">  velocity_ui:</span> <span class="string">//cdn.jsdelivr.net/velocity/1.2.3/velocity.ui.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Internal version: 0.7.9</span></span><br><span class="line">  <span class="comment"># See: https://faisalman.github.io/ua-parser-js/</span></span><br><span class="line"><span class="attr">  ua_parser:</span> <span class="string">//cdn.jsdelivr.net/ua-parser.js/0.7.10/ua-parser.min.js</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Internal version: 4.6.2</span></span><br><span class="line">  <span class="comment"># See: http://fontawesome.io/</span></span><br><span class="line"><span class="attr">  fontawesome:</span> <span class="string">//maxcdn.bootstrapcdn.com/font-awesome/4.6.2/css/font-awesome.min.css</span></span><br><span class="line"></span><br><span class="line">  <span class="comment"># Internal version: 1.0.2</span></span><br><span class="line">  <span class="comment"># See: https://github.com/HubSpot/pace</span></span><br><span class="line"><span class="attr">  pace:</span> <span class="string">//cdn.bootcss.com/pace/1.0.2/pace.min.js</span></span><br><span class="line"><span class="attr">  pace_css:</span> <span class="string">//cdn.bootcss.com/pace/1.0.2/themes/blue/pace-theme-flash.min.css</span></span><br></pre></td></tr></table></figure><h3 id="Google引用"><a href="#Google引用" class="headerlink" title="Google引用"></a>Google引用</h3><blockquote><p>Google被墙，所以有关谷歌类的引用都会导致引用失败，使网站加载变慢。</p></blockquote><p>例如：字体应用<code>fonts.googleapis.com</code></p><p>网上看到两种替代的：</p><ul><li>360：fonts.useso.com</li><li>中科大： fonts.lug.ustc.edu.cn</li></ul><p>不过现在，问题来了，谷歌字体库解封了，360好像关了，中科大不稳定，所以呢？修改前还是要甄别一下</p><p><a href="http://tool.chinaz.com/speedcom/fonts.googleapis.com-fonts.lug.ustc.edu.cn" target="_blank" rel="noopener">站长工具</a></p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/80934192.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/80934192.jpg"></p><p>如果需要修改，可以查看<code>主题配置文件</code>，字段font 以及文件<code>themes/next/layout/_partials/head/external-fonts.swig</code></p><h3 id="博文压缩"><a href="#博文压缩" class="headerlink" title="博文压缩"></a>博文压缩</h3><blockquote><p>NexT主题在解析markdown文件时生成的代码会包含大量的空白，增加了文档的大小，影响网站的加载速度。</p></blockquote><ul><li><p>安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-all-minifier</span><br></pre></td></tr></table></figure><p><a href="https://github.com/chenzhutian/hexo-all-minifier" target="_blank" rel="noopener">hexo-all-minifier文档</a></p></li><li><p><code>主题配置文件</code>，添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">all_minifier:</span> <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="attr">js_concator:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  bundle_path:</span> <span class="string">'/js/bundle.js'</span></span><br><span class="line"><span class="attr">  front:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  silent:</span> <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="attr">html_minifier:</span><span class="comment"># html压缩</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  ignore_error:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  silent:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  exclude:</span> </span><br><span class="line"></span><br><span class="line"><span class="attr">css_minifier:</span><span class="comment"># css压缩</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  silent:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  exclude:</span> </span><br><span class="line"><span class="bullet">    -</span> <span class="string">'*.min.css'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">js_minifier:</span><span class="comment"># js压缩</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  mangle:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  silent:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  output:</span></span><br><span class="line"><span class="attr">  compress:</span></span><br><span class="line"><span class="attr">  exclude:</span> </span><br><span class="line"><span class="bullet">    -</span> <span class="string">'*.min.js'</span></span><br><span class="line"></span><br><span class="line"><span class="attr">image_minifier:</span><span class="comment"># 图片压缩</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  interlaced:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  multipass:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  optimizationLevel:</span> <span class="number">2</span></span><br><span class="line"><span class="attr">  pngquant:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  progressive:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  silent:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>​</p></li></ul><h3 id="遇到问题"><a href="#遇到问题" class="headerlink" title="遇到问题"></a>遇到问题</h3><h4 id="1-注意备份"><a href="#1-注意备份" class="headerlink" title="1 注意备份"></a>1 注意备份</h4><blockquote><p>之前遇到一个很严重的问题，hexo命令打错了</p><p>本来是想安装某个插件，用了一下简写命令<code>hexo i xx</code></p><p>一不小心就点了回车，<code>hexo i</code>将文件都初始化了，打开链接一片空白</p><p>自己还庆幸着懂得版本控制，可是一想，我一直用是hexo命令，只是生成了一些静态文件提交到github上，并没，有将整个源文件push上去，一下子头就大了</p><p>最后，发现只有几个文件清空了，通过版本控制在提交到github的静态文件目录找到了对应的文件，及时修改回来。</p><p>所以呢，这一波折，就是要告诉我，要时刻做好版本控制。</p></blockquote><p>GitHub上的私人仓库是要收费，而我们的源码中又包含了很多密钥，又不能放到公开仓库中。所以，要找替代品，国内有很多平台模仿GitHub的，例如Coding、码云之类，同样可以通过git控制，还提供免费的私人仓库。</p><p>同时，该项目可以在其他电脑上clone，编辑并上传。</p><h4 id="2-大小写问题"><a href="#2-大小写问题" class="headerlink" title="2 大小写问题"></a>2 大小写问题</h4><p>GitHub上好像对大小写不敏感，但是链接却对大小写敏感。</p><p>我把一个标签or标题字母的大小写改了，结果就404</p><p>回到GitHub上你可以发现仓库里文件名是没有改变的，所以呢，注意字母大小写问题，改动后的文件可以先不提交，GitHub自动把原来的文件删除后再提交，就不会出错了。</p><h4 id="3-手机适配"><a href="#3-手机适配" class="headerlink" title="3 手机适配"></a>3 手机适配</h4><p>电脑的屏幕比较大，同样的页面大小放到手机上坑定就不合适了。</p><p>NexT主题已经初步适配了手机浏览器模式，但一些我们自定义的布局，还需要自己调整。</p><p>例如，在前文讲过的GitHub边角问题，我们都可以在<code>/themes/next/source/css/_custom/custom.styl</code>文件中重新定义布局，考虑标签优先权问题，可以加上<code>!important</code>就有绝对优先权了。</p><p>通过源代码，可以看到一种方便的手机浏览器适配方法，直接在标签内加上<code>+mobile{}</code>，例如我在一篇文章内添加了一个音乐播放器，电脑上宽度是合适的，手机上就爆了，修改如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post</span> <span class="selector-class">.aplayer</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">520px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">    +mobile() &#123; </span><br><span class="line">        <span class="selector-tag">width</span>: <span class="selector-tag">auto</span>;</span><br><span class="line">        <span class="selector-tag">margin</span>: 0 <span class="selector-tag">auto</span>;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-开发文档"><a href="#4-开发文档" class="headerlink" title="4 开发文档"></a>4 开发文档</h4><p>开发文档很重要，像<code>Hexo文档</code>提供了配置步骤、目录说明、主题插件等等，了解下开发文档，自定义修改的时候会更加方便。</p><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><p><a href="http://cherryblog.site/hexo-3.html" target="_blank" rel="noopener">想让你的博客被更多的人在搜索引擎中搜到吗？</a></p></li><li><p><a href="https://hui-wang.info/2016/10/23/Hexo%E6%8F%92%E4%BB%B6%E4%B9%8B%E7%99%BE%E5%BA%A6%E4%B8%BB%E5%8A%A8%E6%8F%90%E4%BA%A4%E9%93%BE%E6%8E%A5/" target="_blank" rel="noopener">Hexo插件之百度主动提交链接</a></p></li><li><p><a href="http://guochenglai.com/2016/09/26/baidu-crow-github-page/" target="_blank" rel="noopener">百度无法爬取Github Pages静态网站解决方案</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-24/23205089.jpg&quot; alt=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-4-24/23205089.jpg&quot;&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.danboard.me/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="http://www.danboard.me/tags/hexo/"/>
    
      <category term="github" scheme="http://www.danboard.me/tags/github/"/>
    
      <category term="next" scheme="http://www.danboard.me/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>使用GitHub+Hexo搭建个人博客（四）Hexo高阶之第三方插件</title>
    <link href="http://www.danboard.me/%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E5%9B%9B%EF%BC%89Hexo%E9%AB%98%E9%98%B6%E4%B9%8B%E7%AC%AC%E4%B8%89%E6%96%B9%E6%8F%92%E4%BB%B6/"/>
    <id>http://www.danboard.me/使用GitHub-Hexo搭建个人博客（四）Hexo高阶之第三方插件/</id>
    <published>2018-04-01T07:22:30.000Z</published>
    <updated>2018-04-27T14:45:17.674Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>Hexo 静态站点具有一定的局限性，需要借助第三方插件来扩展站点的功能。</p><p>网上很多教程都是直接添加某些代码，但现在很多也已经merge到源码了，所以修改就比较方便了，<code>true</code> or <code>false</code>，开启或关闭功能，有些功能可能还需要在第三方服务上注册账号，获取<code>API</code>和<code>APK</code> 。</p><p>利用Hexo搭建博客的人很多，但不都是千篇一律的，有些好的还是要借鉴的，更好的是能够有自己的风格~~~</p><a id="more"></a><h3 id="RSS"><a href="#RSS" class="headerlink" title="RSS"></a>RSS</h3><blockquote><p>什么是RSS？</p><p>简易信息聚合（也叫聚合内容）是一种RSS基于XML标准，在互联网上被广泛采用的内容包装和投递协议。RSS(Really Simple Syndication)是一种描述和同步网站内容的格式，是使用最广泛的XML应用。RSS搭建了信息迅速传播的一个技术平台，使得每个人都成为潜在的信息提供者。发布一个RSS文件后，这个RSS Feed中包含的信息就能<code>直接被其他站点调用</code>，而且由于这些数据都是标准的XML格式，所以也能在其他的终端和服务中使用，是一种描述和同步网站内容的格式。——百度百科</p></blockquote><h4 id="1-生成RSS文件"><a href="#1-生成RSS文件" class="headerlink" title="1 生成RSS文件"></a>1 生成RSS文件</h4><p>安装<code>hexo-generator-feed</code>插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure><p>打开<code>站点配置文件</code> ，字段Extensions，添加如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Extensions</span></span><br><span class="line"><span class="comment">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line"><span class="attr">plugins:</span> <span class="string">hexo-generate-feed</span></span><br></pre></td></tr></table></figure><p>打开<code>主题配置文件</code> ，字段rss，添加如下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">rss:</span> <span class="string">/atom.xml</span></span><br></pre></td></tr></table></figure><p>配置完成，执行下列命令，可以看到<code>/public</code>文件夹中多了一个<code>atom.xml</code>文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g</span><br></pre></td></tr></table></figure><p>发布之后，在侧边栏会生成一个RSS图标</p><h4 id="2-RSS迁移"><a href="#2-RSS迁移" class="headerlink" title="2 RSS迁移"></a>2 RSS迁移</h4><p>安装<code>hexo-migrator-rss</code>插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save hexo-migrator-rss</span><br></pre></td></tr></table></figure><p>执行下列命令，从 RSS 迁移所有文章。<code>source</code> 可以是文件路径或网址。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo migrate rss &lt;source&gt;</span><br></pre></td></tr></table></figure><h3 id="评论系统"><a href="#评论系统" class="headerlink" title="评论系统"></a>评论系统</h3><blockquote><p>NexT支持多款评论系统</p><p>如果想要取消某个页面or文章的评论，在文章的属性中增加<code>comments: false</code></p></blockquote><h4 id="1-Valine"><a href="#1-Valine" class="headerlink" title="1 Valine"></a>1 Valine</h4><blockquote><p>一款基于<a href="http://leancloud.cn/" target="_blank" rel="noopener">Leancloud</a>的快速、简洁且高效的无后端评论系统。</p><p>支持匿名评论</p></blockquote><ul><li>效果图：</li></ul><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-2/25599553.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-2/25599553.jpg"></p><ul><li><p>获取<code>APP ID</code> 和 <code>APP KEY</code></p><p><a href="http://leancloud.cn/" target="_blank" rel="noopener">点击注册账号</a></p><p><a href="https://leancloud.cn/dashboard/applist.html#/newapp" target="_blank" rel="noopener">点击创建应用</a></p><p>进入应用 &gt; 设置 &gt; 应用Key，可以看到<code>APP ID</code> 和 <code>APP KEY</code></p><p><img src="https://ws1.sinaimg.cn/large/006qRazegy1fibactm2csj30x80f2dhn.jpg" alt="https://ws1.sinaimg.cn/large/006qRazegy1fibactm2csj30x80f2dhn.jpg"></p></li><li><p>配置</p><p>打开<code>主题配置文件</code> ，字段Valine</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Valine.</span></span><br><span class="line"><span class="comment"># You can get your appid and appkey from https://leancloud.cn</span></span><br><span class="line"><span class="comment"># more info please open https://valine.js.org</span></span><br><span class="line"><span class="attr">valine:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  appid:</span>  <span class="comment"># 填写获取的APP ID</span></span><br><span class="line"><span class="attr">  appkey:</span> <span class="comment"># 填写获取的APP KEY</span></span><br><span class="line"><span class="attr">  notify:</span> <span class="literal">true</span> <span class="comment"># 邮件提醒</span></span><br><span class="line"><span class="attr">  verify:</span> <span class="literal">true</span> <span class="comment"># 验证码</span></span><br><span class="line"><span class="attr">  placeholder:</span> <span class="string">Just</span> <span class="string">go</span> <span class="string">go</span> <span class="comment"># 评论提示语</span></span><br><span class="line"><span class="attr">  avatar:</span> <span class="string">mm</span> <span class="comment"># 头像，具体看Valine官网</span></span><br><span class="line"><span class="attr">  guest_info:</span> <span class="string">nick,mail,link</span> <span class="comment"># 评论者相关属性</span></span><br><span class="line"><span class="attr">  pageSize:</span> <span class="number">10</span> <span class="comment"># 分页</span></span><br></pre></td></tr></table></figure></li></ul><h4 id="2-畅言"><a href="#2-畅言" class="headerlink" title="2 畅言"></a>2 畅言</h4><blockquote><p>需要实名登录，最不能接受的是还要绑定手机</p></blockquote><ul><li><p>获取<code>APP ID</code> 和 <code>APP KEY</code></p><p><a href="https://changyan.sohu.com/" target="_blank" rel="noopener">点击注册账号</a></p><p>比较麻烦的是站点需要备案，没有备案只能使用15天</p><p>有种投机取巧的方式，自行搜索</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-2/63931001.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-2/63931001.jpg"></p><p>进入 &gt; <code>后台总览</code> ，就可以看到了</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-2/79876695.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-2/79876695.jpg"></p></li><li><p>配置</p><p>打开<code>主题配置文件</code> ，字段changyan</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">changyan:</span><br><span class="line">  enable: true</span><br><span class="line">  appid:  # 填写获取的APP ID</span><br><span class="line">  appkey: # 填写获取的APP KEY</span><br></pre></td></tr></table></figure><p>​</p></li></ul><h3 id="访问统计"><a href="#访问统计" class="headerlink" title="访问统计"></a>访问统计</h3><p>页脚设计：<code>/themes/next/layout/_partials/footer.swig</code></p><p>文章设置：<code>/themes/next/layout/_macro/post.swig</code></p><h4 id="1-不蒜子统计"><a href="#1-不蒜子统计" class="headerlink" title="1 不蒜子统计"></a>1 不蒜子统计</h4><p>进入<code>主题配置文件</code> ，字段busuanzi</p><p>相关设置文件<code>/themes/next/layout/_third-party/analytics/busuanzi-counter.swig</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">busuanzi_count:</span></span><br><span class="line">  <span class="comment"># count values only if the other configs are false</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># custom uv span for the whole site整个网站访问用户量</span></span><br><span class="line"><span class="attr">  site_uv:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  site_uv_header:</span> <span class="string">本站访客数</span></span><br><span class="line"><span class="attr">  site_uv_footer:</span> <span class="string">人次</span></span><br><span class="line">  <span class="comment"># custom pv span for the whole site整个网站访问总次数</span></span><br><span class="line"><span class="attr">  site_pv:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  site_pv_header:</span> <span class="string">本站总访问量</span></span><br><span class="line"><span class="attr">  site_pv_footer:</span> <span class="string">次</span></span><br><span class="line">  <span class="comment"># custom pv span for one page only一篇文章的阅读次数</span></span><br><span class="line"><span class="attr">  page_pv:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  page_pv_header:</span> <span class="string">本文总阅读量</span></span><br><span class="line"><span class="attr">  page_pv_footer:</span> <span class="string">次</span></span><br></pre></td></tr></table></figure><h4 id="2-LeanCloud统计"><a href="#2-LeanCloud统计" class="headerlink" title="2 LeanCloud统计"></a>2 LeanCloud统计</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">leancloud_visitors:</span>  <span class="comment"># 文章阅读次数统计</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  appid:</span>  <span class="comment"># 填写获取的APP ID</span></span><br><span class="line"><span class="attr">  appkey:</span> <span class="comment"># 填写获取的APP KEY</span></span><br></pre></td></tr></table></figure><h4 id="3-字数统计"><a href="#3-字数统计" class="headerlink" title="3 字数统计"></a>3 字数统计</h4><ul><li><p>安装插件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">$</span> <span class="string">npm</span> <span class="string">install</span> <span class="bullet">--save</span> <span class="string">hexo-wordcount</span></span><br></pre></td></tr></table></figure></li><li><p>配置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">post_wordcount:</span></span><br><span class="line"><span class="attr">  item_text:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  wordcount:</span> <span class="literal">false</span><span class="comment"># 文章字数</span></span><br><span class="line"><span class="attr">  min2read:</span> <span class="literal">false</span><span class="comment"># 阅读时长预计</span></span><br><span class="line"><span class="attr">  totalcount:</span> <span class="literal">true</span><span class="comment"># 全站字数</span></span><br><span class="line"><span class="attr">  separated_meta:</span> <span class="literal">false</span><span class="comment"># 分行</span></span><br></pre></td></tr></table></figure></li></ul><h3 id="博文置顶"><a href="#博文置顶" class="headerlink" title="博文置顶"></a>博文置顶</h3><p>修改插件<code>hero-generator-index</code> ，文件<code>node_modules/hexo-generator-index/lib/generator.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var posts = locals.posts.sort(config.index_generator.order_by);</span></span><br><span class="line"><span class="comment">// 改为</span></span><br><span class="line"><span class="keyword">var</span> posts = locals.posts;</span><br><span class="line">posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></span><br><span class="line">    <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// top值一样则按照文章日期降序排</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 只有一篇文章top有定义，将排在最前面</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>文章属性添加<code>top</code>值，数值越大越靠前</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">top: # 数值</span><br></pre></td></tr></table></figure><h3 id="文章搜索"><a href="#文章搜索" class="headerlink" title="文章搜索"></a>文章搜索</h3><ul><li><p>安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li><li><p><code>站点配置文件</code> ，添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line"><span class="attr">  path:</span> <span class="string">search.xml</span></span><br><span class="line"><span class="attr">  field:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">  format:</span> <span class="string">html</span></span><br><span class="line"><span class="attr">  limit:</span> <span class="number">10000</span></span><br></pre></td></tr></table></figure></li><li><p><code>主题配置文件</code> ，字段local_search</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/flashlab/hexo-generator-search</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="string">ture</span></span><br><span class="line">  <span class="comment"># if auto, trigger search by changing input</span></span><br><span class="line">  <span class="comment"># if manual, trigger search by pressing enter key or search button</span></span><br><span class="line"><span class="attr">  trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># show top n results per article, show all results by setting to -1</span></span><br><span class="line"><span class="attr">  top_n_per_article:</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><p>​</p></li></ul><h3 id="添加挂件"><a href="#添加挂件" class="headerlink" title="添加挂件"></a>添加挂件</h3><ul><li><p>安装插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -save hexo-helper-live2d</span><br></pre></td></tr></table></figure></li><li><p>安装挂件</p><p><a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">预览</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save live2d-widget-model-xxx   # xxx为挂件名</span><br></pre></td></tr></table></figure></li><li><p>配置</p><p><code>站点配置文件</code> ，添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">live2d:</span><br><span class="line">  enable: true</span><br><span class="line">  scriptFrom: local</span><br><span class="line">  model:# 挂件模型</span><br><span class="line">    use: live2d-widget-model-hijiki</span><br><span class="line">  display:# 位置</span><br><span class="line">    # position: right</span><br><span class="line">    width: 80</span><br><span class="line">    height: 160</span><br><span class="line">    bottom: -120</span><br><span class="line">  mobile:# 手机显示</span><br><span class="line">    show: false</span><br></pre></td></tr></table></figure><p>​</p></li></ul><h3 id="在线联系"><a href="#在线联系" class="headerlink" title="在线联系"></a>在线联系</h3><blockquote><p>基于<a href="https://account.daocloud.io/" target="_blank" rel="noopener">DaoVoice</a>实现</p></blockquote><ul><li><p>注册账号</p><p>邀请码 <code>832ef3b6</code></p></li><li><p>获取API</p><p>应用设置 &gt; 安装到网站</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-2/20924917.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-2/20924917.jpg"></p></li><li><p>配置</p><p>文件<code>/themes/next/layout/_partials/head.swig</code> ，添加</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#123;%</span> <span class="string">if</span> <span class="string">theme.daovoice</span> <span class="string">%&#125;</span></span><br><span class="line">  <span class="string">&lt;script&gt;</span></span><br><span class="line">  <span class="string">(function(i,s,o,g,r,a,m)&#123;i["DaoVoiceObject"]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new</span> <span class="string">Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset="utf-8";m.parentNode.insertBefore(a,m)&#125;)(window,document,"script",('https:'</span> <span class="string">==</span> <span class="string">document.location.protocol</span> <span class="string">?</span> <span class="string">'https:'</span> <span class="string">:</span> <span class="string">'http:'</span><span class="string">)</span> <span class="string">+</span> <span class="string">"//widget.daovoice.io/widget/0f81ff2f.js"</span><span class="string">,"daovoice")</span></span><br><span class="line">  <span class="string">daovoice('init',</span> <span class="string">&#123;</span></span><br><span class="line"><span class="attr">      app_id:</span> <span class="string">"<span class="template-variable">&#123;&#123;theme.daovoice_app_id&#125;&#125;</span>"</span></span><br><span class="line">    <span class="string">&#125;);</span></span><br><span class="line">  <span class="string">daovoice('update');</span></span><br><span class="line">  <span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&#123;%</span> <span class="string">endif</span> <span class="string">%&#125;</span></span><br></pre></td></tr></table></figure><p><code>主题配置文件</code> ， 添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Online contact </span><br><span class="line">daovoice: true</span><br><span class="line">daovoice_app_id: # 你获取的API</span><br></pre></td></tr></table></figure></li><li><p>效果</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-2/95982243.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-2/95982243.jpg"> <img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-2/853236.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-2/853236.jpg"></p><p>当有人发信息给你的时候，你可以通过<a href="https://account.daocloud.io/" target="_blank" rel="noopener">DaoVoice</a>在线交流，也可以关注DaoVoice小程序，绑定你的账号</p></li></ul><h3 id="添加音乐"><a href="#添加音乐" class="headerlink" title="添加音乐"></a>添加音乐</h3><h4 id="网易云音乐外链"><a href="#网易云音乐外链" class="headerlink" title="网易云音乐外链"></a>网易云音乐外链</h4><ol><li><p>​ 单曲</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/76191555.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/76191555.jpg"></p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/25749304.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/25749304.jpg"></p><p>复制代码，粘贴在你想要的位置，可以是文章 或者是 侧边栏</p></li><li><p>歌单</p><p>自己的歌单是没有生成外链。分享 $\rightarrow$ 动态 $\rightarrow$ 外链</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/91677535.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/91677535.jpg"></p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/63702029.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/63702029.jpg"></p></li></ol><ol><li><p>效果</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/11355888.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/11355888.jpg"></p><p>可以缩放</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/47115796.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-7/47115796.jpg"></p></li></ol><h4 id="Aplayer"><a href="#Aplayer" class="headerlink" title="Aplayer"></a>Aplayer</h4><ol><li><p>引入js文件</p><ul><li><p>APlayer.min.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://cdnjs.cloudflare.com/ajax/libs/aplayer/1.6.0/APlayer.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>位置<code>themes/next/layout/_partials/head.swig</code></p></li><li><p>Meting.min.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">"https://cdn.jsdelivr.net/npm/meting@1.0.1/dist/Meting.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>位置<code>themes/next/layout/_partials/footer.swig</code></p></li></ul></li><li><p>添加音乐</p><ul><li><p>音乐平台</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;aplayer&quot; data-id=&quot;&quot; data-server=&quot;&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>参数解释：</p><ul><li>data-id: 歌曲/专辑/歌单 ID</li><li>data-server: 音乐平台，支持如下参数<ul><li>netease （网易云音乐）</li><li>tencent （qq音乐）</li><li>xiami （虾米音乐）</li><li>kugou （酷狗音乐）</li><li>baidu （百度音乐）</li></ul></li><li><p>data-type: 请求类型，支持如下参数</p><ul><li><p>song （单曲）</p></li><li><p>album （专辑）</p></li><li><p>playlist （歌单）</p></li><li><p>search （搜索）</p><p>​</p></li></ul></li></ul></li><li><p>音乐外链（参数名可能与Aplayer中的不一样）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;aplayer&quot; data-title=&quot;&quot; data-author=&quot;&quot; data-url=&quot;&quot; data-pic=&quot;&quot; data-lrc=&quot;&quot;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>参数解释：</p><ul><li><p>data-title: 歌名</p></li><li><p>data-author: 歌手</p></li><li><p>data-url: 音乐链接</p></li><li><p>data-pic: 音乐封面</p></li><li><p>data-lrc: 歌词</p><p>​</p></li></ul></li><li><p>其他参数</p><ul><li>data-mode: 播放模式<ul><li>random （随机）</li><li>single （单曲）</li><li>circulation （列表循环）</li><li>order （列表）</li></ul></li><li><p>data-autoplay: 自动播放</p><ul><li><p>false</p></li><li><p>true</p><p>​</p></li></ul></li></ul></li></ul></li><li><p>推荐</p><p>Aplayer自定义比iframe还好，可以加载有版权问题的音乐，墙裂推荐！！！</p></li></ol><h3 id="｡･∀･-ﾉﾞ嗨！一下"><a href="#｡･∀･-ﾉﾞ嗨！一下" class="headerlink" title="(｡･∀･)ﾉﾞ嗨！一下"></a>(｡･∀･)ﾉﾞ嗨！一下</h3><blockquote><p>这部分纯属玩乐，有点酷炫，我把它设置在了头像上，可以点击试一试</p><p>音乐有点鬼畜，想不有什么好的，节奏可以配上该动画</p><p>参考来自：<a href="https://www.jianshu.com/p/748622c7bb20" target="_blank" rel="noopener">Hexo high一下小功能</a></p></blockquote><ul><li><p>资源</p><p>js：<a href="http://oxv1k8kvi.bkt.clouddn.com/High.js" target="_blank" rel="noopener">http://oxv1k8kvi.bkt.clouddn.com/High.js</a></p><p>可以自行下载来看一下</p><p>里面的音乐地址和css可以替换一下</p><p>mp3：<a href="http://oxv1k8kvi.bkt.clouddn.com/harlem-shake.mp3" target="_blank" rel="noopener">http://oxv1k8kvi.bkt.clouddn.com/harlem-shake.mp3</a></p><p>css：<a href="http://oxv1k8kvi.bkt.clouddn.com/harlem-shake-style.css" target="_blank" rel="noopener">http://oxv1k8kvi.bkt.clouddn.com/harlem-shake-style.css</a></p></li><li><p>配置</p><p>文件<code>/themes/next/layout/_partials/head.swig</code>，添加</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"http://oxv1k8kvi.bkt.clouddn.com/High.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p>然后，在你想要点击实现<code>high一下</code>功能的地方，添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a title=&quot;(｡･∀･)ﾉﾞ嗨！一下&quot; style=&quot;underline: none&quot; rel=&quot;alternate&quot; class=&quot;mw-harlem_shake_slow wobble shake&quot; href=&quot;javascript:shake()&quot;&gt; XXX &lt;/a&gt;</span><br></pre></td></tr></table></figure><p>​</p></li></ul><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">Next文档</a></li><li><a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">hexo的next主题个性化配置教程</a></li><li><a href="https://ioliu.cn/2017/add-valine-comments-to-your-blog/" target="_blank" rel="noopener">Valine – 一款极简的评论系统</a></li><li><a href="https://github.com/EYHN/hexo-helper-live2d" target="_blank" rel="noopener">hexo-helper-live2d</a></li><li><a href="https://www.tiexo.cn/aplayer/" target="_blank" rel="noopener">Hexo音乐播放完美支持https和多平台</a></li><li><a href="https://aplayer.js.org/#/zh-Hans/" target="_blank" rel="noopener">Aplayer</a></li><li><a href="https://www.jianshu.com/p/748622c7bb20" target="_blank" rel="noopener">Hexo high一下小功能</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Hexo 静态站点具有一定的局限性，需要借助第三方插件来扩展站点的功能。&lt;/p&gt;&lt;p&gt;网上很多教程都是直接添加某些代码，但现在很多也已经merge到源码了，所以修改就比较方便了，&lt;code&gt;true&lt;/code&gt; or &lt;code&gt;false&lt;/code&gt;，开启或关闭功能，有些功能可能还需要在第三方服务上注册账号，获取&lt;code&gt;API&lt;/code&gt;和&lt;code&gt;APK&lt;/code&gt; 。&lt;/p&gt;&lt;p&gt;利用Hexo搭建博客的人很多，但不都是千篇一律的，有些好的还是要借鉴的，更好的是能够有自己的风格~~~&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.danboard.me/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="http://www.danboard.me/tags/hexo/"/>
    
      <category term="github" scheme="http://www.danboard.me/tags/github/"/>
    
      <category term="next" scheme="http://www.danboard.me/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>使用GitHub+Hexo搭建个人博客（三）Hexo个性化配置进阶</title>
    <link href="http://www.danboard.me/%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%B8%89%EF%BC%89Hexo%E4%B8%AA%E6%80%A7%E5%8C%96%E9%85%8D%E7%BD%AE%E8%BF%9B%E9%98%B6/"/>
    <id>http://www.danboard.me/使用GitHub-Hexo搭建个人博客（三）Hexo个性化配置进阶/</id>
    <published>2018-03-31T15:47:31.000Z</published>
    <updated>2018-04-27T14:45:01.071Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>所谓的进阶，无非就是换个主题呀，添加一些小功能……</p><p>看个人喜好吧！</p><p>说到底，大部分都是参照网上的~~~</p><a id="more"></a><h3 id="主题安装"><a href="#主题安装" class="headerlink" title="主题安装"></a>主题安装</h3><ul><li><p>Hexo官网提供了丰富的主题，挑选一款适合自己的，执行以下命令：</p><figure class="highlight plain"><figcaption><span>basic</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone [主题地址] [存放位置]</span><br></pre></td></tr></table></figure><p>例如我选择的主题是Next</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>完成之后，在themes目录下就会多了一个主题next的文件夹</p><p>点击预览 <a href="https://hexo.io/themes/" target="_blank" rel="noopener">themes</a></p></li></ul><ul><li><p>进入<code>站点配置文件</code> ，找到theme字段，修改为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: next</span><br></pre></td></tr></table></figure></li><li><p>进入<code>主题配置文件</code> ，找到scheme字段，里面有next主题四种模板。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Schemes</span></span><br><span class="line"><span class="attr">scheme:</span> <span class="string">Muse</span></span><br><span class="line"><span class="comment"># scheme: Mist</span></span><br><span class="line"><span class="comment"># scheme: Pisces</span></span><br><span class="line"><span class="comment"># scheme: Gemini</span></span><br></pre></td></tr></table></figure><p>首先使用命令，打开<a href="http://localhost:4000在本地预览，切换scheme刷新下页面看看效果" target="_blank" rel="noopener">http://localhost:4000在本地预览，切换scheme刷新下页面看看效果</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo s -g</span><br></pre></td></tr></table></figure></li></ul><h3 id="Next主题"><a href="#Next主题" class="headerlink" title="Next主题"></a>Next主题</h3><h4 id="主题目录"><a href="#主题目录" class="headerlink" title="主题目录"></a>主题目录</h4><blockquote><p>.<br>├── _config.yml<br>├── languages<br>├── layout<br>├── scripts<br>└── source</p></blockquote><p><a href="https://hexo.io/zh-cn/docs/themes.html" target="_blank" rel="noopener">具体解释</a></p><h4 id="基础配置"><a href="#基础配置" class="headerlink" title="基础配置"></a>基础配置</h4><p>进入<code>站点配置文件</code> ，字段Site</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Site</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Danboard</span><span class="comment"># 网站标题</span></span><br><span class="line"><span class="attr">subtitle:</span> <span class="string">踮起脚尖，另一种高度</span> <span class="comment"># 副标题</span></span><br><span class="line"><span class="attr">description:</span> <span class="comment"># 描述，显示在侧边栏</span></span><br><span class="line"><span class="attr">author:</span> <span class="string">Danboard</span><span class="comment"># 作者</span></span><br><span class="line"><span class="attr">language:</span> <span class="string">zh-Hans</span><span class="comment"># 语言</span></span><br><span class="line"><span class="attr">timezone:</span> <span class="string">Asia/Shanghai</span> <span class="comment"># 时间</span></span><br></pre></td></tr></table></figure><h4 id="站点logo"><a href="#站点logo" class="headerlink" title="站点logo"></a>站点logo</h4><p>进入<code>主题配置文件</code> ，字段favicon</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">favicon:</span></span><br><span class="line"><span class="attr">  small:</span> <span class="string">/images/favicon-16x16-next.png</span></span><br><span class="line"><span class="attr">  medium:</span> <span class="string">/images/favicon-32x32-next.png</span></span><br><span class="line"><span class="attr">  apple_touch_icon:</span> <span class="string">/images/apple-touch-icon-next.png</span></span><br><span class="line"><span class="attr">  safari_pinned_tab:</span> <span class="string">/images/logo.svg</span></span><br></pre></td></tr></table></figure><p>图标推荐：</p><p><a href="https://fontawesome.com/" target="_blank" rel="noopener">Font Awesome</a></p><p><a href="http://www.iconfont.cn/" target="_blank" rel="noopener">阿里图标</a></p><p>下载图标，指定大小，修改名称，存放在<code>source/images/</code>内</p><h4 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h4><p>进入<code>主题配置文件</code> ，字段menu</p><p>默认支持<a href="https://fontawesome.com/" target="_blank" rel="noopener">Font Awesome</a>图标，所以<code>||</code>后只要跟上图标名就ok，可以自行更换</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line"><span class="attr">  home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">home</span></span><br><span class="line">  <span class="comment">#about: /about/ || user</span></span><br><span class="line">  <span class="comment">#tags: /tags/ || tags</span></span><br><span class="line">  <span class="comment">#categories: /categories/ || th</span></span><br><span class="line"><span class="attr">  archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || heartbea</span></span><br></pre></td></tr></table></figure><p>选择自己想要的菜单项，取消注释</p><ol><li><p>新建一个about（关于我）页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure><p>在<code>hexo/source/</code>下生成<code>about/index.md</code> ，编辑index.md文档</p></li><li><p>新建一个tags（标签）页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page &quot;tages&quot;</span><br></pre></td></tr></table></figure><p>在<code>hexo/source/</code>下生成<code>tages/index.md</code> ，修改如下</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type: tages</span><br></pre></td></tr></table></figure></li><li><p>新建一个categories（分类）页面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new page &quot;categories&quot;</span><br></pre></td></tr></table></figure><p>在<code>hexo/source/</code>下生成<code>/index.md</code> ，修改如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">type: categories</span><br></pre></td></tr></table></figure></li><li><p>新建一个腾讯公益404页面</p><p>在<code>hexo/source/</code>下新建一个404.html的文件，内容如下：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE HTML&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"content-type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8;"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge,chrome=1"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"all"</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"robots"</span> <span class="attr">content</span>=<span class="string">"index,follow"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"https://qzone.qq.com/gy/404/style/404style.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/plain"</span> <span class="attr">src</span>=<span class="string">"http://www.qq.com/404/search_children.js"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">charset</span>=<span class="string">"utf-8"</span> <span class="attr">homePageUrl</span>=<span class="string">"/"</span></span></span><br><span class="line"><span class="tag">          <span class="attr">homePageName</span>=<span class="string">"返回主页"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://qzone.qq.com/gy/404/data.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://qzone.qq.com/gy/404/page.js"</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改菜单</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">commonweal:</span> <span class="string">/404.html</span> <span class="string">||</span> <span class="string">heartbea</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="侧边栏"><a href="#侧边栏" class="headerlink" title="侧边栏"></a>侧边栏</h4><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-1/77995899.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-1/77995899.jpg"></p><ol><li><p>进入<code>主题配置文件</code> ，字段sidebar</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">sidebar:</span></span><br><span class="line"><span class="attr">  position:</span> <span class="string">left</span><span class="comment"># 靠左</span></span><br><span class="line">  <span class="comment">#position: right# 靠右</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#display: post# 默认，在文章页面（拥有目录列表）时显示</span></span><br><span class="line">  <span class="comment">#display: always# 在所有页面中都显示</span></span><br><span class="line"><span class="attr">  display:</span> <span class="string">hide</span><span class="comment"># 在所有页面中都隐藏（可以手动展开）</span></span><br><span class="line">  <span class="comment">#display: remove# 完全移除</span></span><br></pre></td></tr></table></figure></li><li><p>头像</p><ul><li><p>添加头像</p><p>进入<code>主题配置文件</code> ，字段avatar</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">avatar:</span> <span class="string">/images/avatar.png</span><span class="comment"># 放在source/images/</span></span><br><span class="line"><span class="comment"># avatar: http://example.com/avatar.png# 网上链接 url</span></span><br></pre></td></tr></table></figure></li><li><p>圆形头像</p><p>文件<code>\themes\next\source\css\_common\components\sidebar\sidebar-author.styl</code> ，添加代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">/* 头像圆形 */</span></span><br><span class="line">  <span class="attribute">border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-webkit-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">-moz-border-radius</span>: <span class="number">80px</span>;</span><br><span class="line">  <span class="attribute">box-shadow</span>: inset <span class="number">0</span> -<span class="number">1px</span> <span class="number">0</span> <span class="number">#333</span>sf;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>头像旋转</p><p>同上，添加代码：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.site-author-image</span> &#123;</span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  <span class="attribute">-webkit-transition</span>: -webkit-transform <span class="number">1.5s</span> ease-out;</span><br><span class="line">  <span class="attribute">-moz-transition</span>: -moz-transform <span class="number">1.5s</span> ease-out;</span><br><span class="line">  <span class="attribute">transition</span>: transform <span class="number">1.5s</span> ease-out;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">img</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="comment">/* 鼠标经过头像旋转360度 */</span></span><br><span class="line">  <span class="attribute">-webkit-transform</span>: <span class="built_in">rotateZ</span>(360deg);</span><br><span class="line">  <span class="attribute">-moz-transform</span>: <span class="built_in">rotateZ</span>(360deg);</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(360deg);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Z 轴旋转动画 */</span></span><br><span class="line">@<span class="keyword">keyframes</span> play &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  100% &#123;</span><br><span class="line">    <span class="attribute">transform</span>: <span class="built_in">rotateZ</span>(-360deg);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@-<span class="keyword">webkit</span>-<span class="keyword">keyframes</span> play &#123;</span><br><span class="line">// 同上</span><br><span class="line">&#125;</span><br><span class="line">@-<span class="keyword">moz</span>-<span class="keyword">keyframes</span> play &#123;</span><br><span class="line">// 同上</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul></li><li><p>社交链接</p><p>进入<code>主题配置文件</code> ，字段social</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line"><span class="attr">  GitHub:</span> <span class="attr">https://github.com/XXX</span> <span class="string">||</span> <span class="string">github</span></span><br><span class="line">  <span class="comment">#E-Mail: mailto:yourname@gmail.com || envelope</span></span><br><span class="line">  <span class="comment">#Google: https://plus.google.com/yourname || google</span></span><br><span class="line">  <span class="comment">#Twitter: https://twitter.com/yourname || twitter</span></span><br><span class="line">  <span class="comment">#FB Page: https://www.facebook.com/yourname || facebook</span></span><br><span class="line">  <span class="comment">#VK Group: https://vk.com/yourname || vk</span></span><br><span class="line">  <span class="comment">#StackOverflow: https://stackoverflow.com/yourname || stack-overflow</span></span><br><span class="line">  <span class="comment">#YouTube: https://youtube.com/yourname || youtube</span></span><br><span class="line">  <span class="comment">#Instagram: https://instagram.com/yourname || instagram</span></span><br><span class="line">  <span class="comment">#Skype: skype:yourname?call|chat || skype</span></span><br><span class="line"></span><br><span class="line"><span class="attr">social_icons:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  icons_only:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">  transition:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>推荐阅读 or 友情链接</p><p>进入<code>主题配置文件</code> ，字段Blogrolls</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Blog rolls</span></span><br><span class="line"><span class="attr">links_icon:</span> <span class="string">link</span></span><br><span class="line"><span class="attr">links_title:</span> <span class="string">友情链接</span></span><br><span class="line"><span class="comment"># links_layout: block# 块级分行显示</span></span><br><span class="line"><span class="attr">links_layout:</span> <span class="string">inline</span><span class="comment"># 内联同行显示</span></span><br><span class="line"><span class="attr">links:</span><span class="comment"># 添加友链</span></span><br><span class="line"><span class="attr">  SYSU:</span> <span class="attr">http://www.sysu.edu.cn/</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="GitHub边角"><a href="#GitHub边角" class="headerlink" title="GitHub边角"></a>GitHub边角</h4><p>效果：</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-1/73895753.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-1/73895753.jpg"></p><p>文件<code>themes/next/layout/_layout.swig</code> ，复制代码放在<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>下，修改<code>href</code>为自己的github地址</p><blockquote><p>因为我是把github的logo放在了左上角，在手机上查看就会发现logo与菜单重和了</p><p>如果想要修改边角位置，可以在文件<code>themes/next/source/css/_custom/custom.styl</code> 中进行更改</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">svg</span> &#123;</span><br><span class="line">  <span class="attribute">float</span>: left;</span><br><span class="line">  <span class="attribute">transform</span>: <span class="built_in">scale</span>(-1, 1);</span><br><span class="line">  +mobile() &#123; </span><br><span class="line">      <span class="selector-tag">float</span>: <span class="selector-tag">right</span>;</span><br><span class="line">      <span class="selector-tag">transform</span>: <span class="selector-tag">scale</span>(1, 1);</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">GitHub corner</a></p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-1/68389182.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-1/68389182.jpg"></p></li><li><p><a href="https://blog.github.com/2008-12-19-github-ribbons/" target="_blank" rel="noopener">fork me on GitHub</a></p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-1/38578141.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-1/38578141.jpg"></p><p>​</p></li></ul><h4 id="动画效果"><a href="#动画效果" class="headerlink" title="动画效果"></a>动画效果</h4><ol><li><p>背景动画</p><p>进入<code>主题配置文件</code> ，字段canvas_nest</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 4种，开启true，关闭false</span></span><br><span class="line"><span class="attr">canvas_nest:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">three_waves:</span> <span class="literal">false</span></span><br><span class="line"><span class="attr">canvas_lines:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">canvas_sphere:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure></li><li><p>进度条</p><p>进入<code>主题配置文件</code> ，字段Progress</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Progress bar in the top during page loading.</span></span><br><span class="line"><span class="attr">pace:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">pace_theme:</span> </span><br><span class="line">  <span class="string">pace-theme-flash</span></span><br></pre></td></tr></table></figure></li></ol><h4 id="文章编辑"><a href="#文章编辑" class="headerlink" title="文章编辑"></a>文章编辑</h4><ol><li><p>首页预览多篇文章，通过<strong>阅读全文</strong>打开</p><ul><li><p><code>&lt;!--more--&gt;</code>截断 <strong><em><code>推荐</code></em></strong></p><p>在想要显示在首页的文字下方添加标签<code>&lt;!--more--&gt;</code></p></li><li><p>文章属性description</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章标题</span><br><span class="line">date: 发布时间</span><br><span class="line">tages: 文章标签</span><br><span class="line">description: 摘要，显示在首页</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li><li><p>自动显示</p><p>进入<code>主题配置文件</code> ，字段auto_excerpt</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">auto_excerpt:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">  length:</span> <span class="number">150</span><span class="comment"># 截取长度为150个字符</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>文章背景</p><p>添加边框阴影，突出文章，打开文件<code>themes/next/source/css/_custom/custom.styl</code> ，该文件可以让自定义一些布局，通过浏览器的开发者工具找到对应标签，就可以进行设置了。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.post</span> &#123;</span><br><span class="line">  <span class="attribute">margin-top</span>: <span class="number">60px</span>;</span><br><span class="line">  <span class="attribute">margin-bottom</span>: <span class="number">60px</span>;</span><br><span class="line">  <span class="attribute">padding</span>: <span class="number">25px</span>;</span><br><span class="line">  <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">  <span class="attribute">-webkit-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(202, 203, 204, .5);</span><br><span class="line">  <span class="attribute">-moz-box-shadow</span>: <span class="number">0</span> <span class="number">0</span> <span class="number">10px</span> <span class="built_in">rgba</span>(202, 203, 204, .5);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>文章分割线</p><p>文章添加边框阴影后，分割线就显得有点多余，在<code>custom.styl</code>文件中添加</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.posts-expand</span> <span class="selector-class">.post-eof</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(255, 255, 255, 0);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>代码高亮</p><p>进入<code>主题配置文件</code> ，字段highlight</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># Available value:</span><br><span class="line">#    normal | night | night eighties | night blue | night bright</span><br><span class="line">highlight_theme: normal</span><br></pre></td></tr></table></figure><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-4-1/58128679.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-4-1/58128679.jpg"></p></li><li><p>文章打赏</p><p>进入<code>主题配置文件</code> ，字段reward，将支付宝or微信收款二维码图片保存到文件夹<code>/themes/next/source/images/</code>下</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Reward</span></span><br><span class="line"><span class="comment">#reward_comment: Donate comment here</span></span><br><span class="line"><span class="attr">wechatpay:</span> <span class="string">/images/wechatpay.jpg</span></span><br><span class="line"><span class="attr">alipay:</span> <span class="string">/images/alipay.jpg</span></span><br><span class="line"><span class="comment"># bitcoin: /images/bitcoin.png</span></span><br></pre></td></tr></table></figure></li><li><p>文章分享</p><p>Next这里提供了三种：jiathis、百度、豆瓣，效果都差不多</p><p>自定义文件都在<code>themes/next/layout/_partials/share/</code></p><ul><li><p>jiathis分享</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jiathis: true</span><br></pre></td></tr></table></figure></li><li><p>百度分享</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">baidushare:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">button</span></span><br><span class="line"><span class="comment"># Available value:  # 两种样式  下方 | 侧边</span></span><br><span class="line"><span class="comment">#    button | slide</span></span><br></pre></td></tr></table></figure></li><li><p>豆瓣（自己试了，不能用）</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">duoshuo_share:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure></li></ul></li><li><p>文章加密</p><blockquote><p>这只是一种障眼法</p></blockquote><p>文件<code>/themes/next/layout/_partials/head.swig</code> ，添加如下代码</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="selector-tag">script</span>&gt;</span><br><span class="line">    (<span class="selector-tag">function</span>()&#123;</span><br><span class="line">        if('&#123;&#123; page.password &#125;&#125;')&#123;</span><br><span class="line">            if (prompt('请输入文章密码') !== '&#123;&#123; page.password &#125;&#125;')&#123;</span><br><span class="line">                alert('密码错误！');</span><br><span class="line">                <span class="selector-tag">history</span><span class="selector-class">.back</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)();</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>文章属性添加</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">password: # 你设定的密码</span><br></pre></td></tr></table></figure><p>​</p></li></ol><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">Next文档</a></li><li><a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">hexo的next主题个性化配置教程</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;所谓的进阶，无非就是换个主题呀，添加一些小功能……&lt;/p&gt;&lt;p&gt;看个人喜好吧！&lt;/p&gt;&lt;p&gt;说到底，大部分都是参照网上的~~~&lt;/p&gt;
    
    </summary>
    
      <category term="Hexo" scheme="http://www.danboard.me/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="http://www.danboard.me/tags/hexo/"/>
    
      <category term="github" scheme="http://www.danboard.me/tags/github/"/>
    
      <category term="next" scheme="http://www.danboard.me/tags/next/"/>
    
  </entry>
  
  <entry>
    <title>端口占用的解决方法</title>
    <link href="http://www.danboard.me/%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
    <id>http://www.danboard.me/端口占用的解决方法/</id>
    <published>2018-03-31T14:37:03.000Z</published>
    <updated>2018-04-27T14:43:36.056Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>有时候明明打开了服务器，端口也配置好了，就是不能访问，这时候可能要考虑是否是端口被占用了，端口被占用有时候是没有提示的。解决的话，有两种方法：第一种，改端口；第二种，禁用占用该端口的软件。下面只介绍后者：</p><a id="more"></a><ol><li><p>打开命令管理器，快捷键<code>win+R</code></p></li><li><p>查找占用端口的程序对应的PID</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">netstat -ano|findstr [端口号]</span><br></pre></td></tr></table></figure><p>稍微接解释一下netstat，详细资料可以输入 <code>netstat ?</code> 或是找度娘</p><blockquote><p>-a 显示所有连接和侦听端口。</p><p>-n 以数字形式显示地址和端口号。</p><p>-o 显示拥有的与每个连接关联的进程 ID。</p><p>（合并指令 -ano 就是列出所有端口的情况了）</p><p>findstr 在端口使用情况中找到我们需要的端口</p></blockquote></li><li><p>根据PID查找端口占用的程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tasklist|findstr [PID]</span><br></pre></td></tr></table></figure><blockquote><p>tasklist：显示在本地或远程机器上当前运行的进程列表</p></blockquote></li><li><p>解除占用</p><p>打开任务管理器，选择<code>详细信息</code> ，点击程序，再点右下方的结束任务就ok了。</p><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-3-31/8876291.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-3-31/8876291.jpg"></p></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有时候明明打开了服务器，端口也配置好了，就是不能访问，这时候可能要考虑是否是端口被占用了，端口被占用有时候是没有提示的。解决的话，有两种方法：第一种，改端口；第二种，禁用占用该端口的软件。下面只介绍后者：&lt;/p&gt;
    
    </summary>
    
      <category term="计算机网络" scheme="http://www.danboard.me/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
      <category term="port" scheme="http://www.danboard.me/tags/port/"/>
    
  </entry>
  
  <entry>
    <title>使用GitHub+Hexo搭建个人博客（二）配置Hexo博客基础框架</title>
    <link href="http://www.danboard.me/%E4%BD%BF%E7%94%A8GitHub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%88%E4%BA%8C%EF%BC%89%E9%85%8D%E7%BD%AEHexo%E5%8D%9A%E5%AE%A2%E5%9F%BA%E7%A1%80%E6%A1%86%E6%9E%B6/"/>
    <id>http://www.danboard.me/使用GitHub-Hexo搭建个人博客（二）配置Hexo博客基础框架/</id>
    <published>2018-03-31T12:06:57.000Z</published>
    <updated>2018-04-27T14:44:43.568Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><p>什么是 Hexo？</p><blockquote><p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。—来自“Hexo文档”</p></blockquote><h3 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h3><ol><li><p><a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js</a></p><blockquote><p>Node.js 是一个基于 Chrome V8 引擎的 JavaScript 运行环境。<br>Node.js 使用了一个事件驱动、非阻塞式 I/O 的模型，使其轻量又高效。<br>Node.js 的包管理器 npm，是全球最大的开源库生态系统。</p></blockquote><p>什么是npm？</p><blockquote><p>允许用户从NPM服务器下载别人编写的第三方包到本地使用。</p><p>允许用户从NPM服务器下载并安装别人编写的命令行程序到本地使用。</p><p>允许用户将自己编写的包或命令行程序上传到NPM服务器供别人使用。</p></blockquote><p>总而言之，就是要使用npm来安装Hexo</p><p>​</p></li><li><p>安装Hexo</p><p>打开Git Bash 或是 命令管理器，执行以下命令就可以了，这样本地就有了hexo的包</p><p>路径一般在<code>C:/Users/用户名/AppData/Roaming/npm/hexo</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure></li></ol><h3 id="部署博客"><a href="#部署博客" class="headerlink" title="部署博客"></a>部署博客</h3><ol><li><p>hexo实例</p><ul><li><p>创建一个文件夹，存放blog的配置文件</p></li><li><p>执行hexo命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$npm init</span><br></pre></td></tr></table></figure></li><li><p>初始完成，可以看到文件夹中多了以下文件：<img src="http://oxv1k8kvi.bkt.clouddn.com/18-3-31/54678877.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-3-31/54678877.jpg"></p><blockquote><p>node_modules：依赖包（一些黑操作，官网有相应的包，也可以自己编写）<br>scaffolds：文章模板（post默认、page、draft）<br>source：存放文章（/_post/xx.md）<br>themes：主题（默认landscape，有点丑，hexo官网预览，下载自己心仪的主题）<br>_config.yml：整个博客的配置（themes中也有一个同名文件，为了区分前者称为<code>站点配置文件</code> ，后者称为<code>主题配置文件</code>）<br>package.json：应用程序的信息</p></blockquote></li></ul></li></ol><ol><li><p>部署到github</p><ul><li><p>打开<code>站点配置文件</code> ：_config.yml，<code>Ctrl+F</code>找到deploy，进行如下配置，最后保存</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">你的github项目地址</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>你的github项目地址</p></li></ul><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-3-31/49030858.jpg" alt="http://oxv1k8kvi.bkt.clouddn.com/18-3-31/49030858.jpg"></p><ul><li><p>执行下面命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>hexo文件解释与命令，请参照<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo文档</a></p></li><li><p>进行本地预览</p><p>打开浏览器输入：<code>localhost:4000</code></p><p><code>hexo server</code>默认打开的是4000端口</p><p>如果不能打开，有可能是4000端口被其他程序给占用了</p><p>第一种方法，请看<a href="http://www.danboard.me/2018/03/31/%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/#more">端口被占用的解决方法</a></p><p>第二种方法，切换端口</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server -p [端口号]</span><br></pre></td></tr></table></figure><p><img src="http://oxv1k8kvi.bkt.clouddn.com/18-3-31/85839736.jpg" alt="http://localhost:4000"></p><p>​</p></li><li><p>上传到GitHub服务器</p><p>如果预览没问题的话，就可以上传到服务器了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br><span class="line">$ hexo generate</span><br><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure></li></ul></li><li><p>​ 发布文章</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new [layout] &lt;title&gt;</span><br></pre></td></tr></table></figure><blockquote><p>layout：文件夹scaffolds中的文章模板（post默认、page、draft），也可以自定义</p><p>title：文章标题</p></blockquote><p>最后还是一样预览再发布到github服务器就ok啦~</p><p>​</p></li></ol><h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><ul><li><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo文档</a></li><li><a href="http://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">使用hexo+github搭建免费个人博客详细教程</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; cla
      
    
    </summary>
    
      <category term="Hexo" scheme="http://www.danboard.me/categories/Hexo/"/>
    
    
      <category term="hexo" scheme="http://www.danboard.me/tags/hexo/"/>
    
      <category term="github" scheme="http://www.danboard.me/tags/github/"/>
    
  </entry>
  
  <entry>
    <title>好久不见</title>
    <link href="http://www.danboard.me/%E5%A5%BD%E4%B9%85%E4%B8%8D%E8%A7%81/"/>
    <id>http://www.danboard.me/好久不见/</id>
    <published>2018-03-30T14:00:00.000Z</published>
    <updated>2018-04-27T15:20:48.128Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><link href="/style.css" rel="stylesheet" type="text/css"><script src="/crypto-js.js"></script><script src="/mcommon.js"></script><script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script> <br/> <div class="aplayer" data-title="从前慢" data-author="刘胡轶" data-url="http://oxv1k8kvi.bkt.clouddn.com/%E4%BB%8E%E5%89%8D%E6%85%A2.M4A" data-lrc="http://oxv1k8kvi.bkt.clouddn.com/liuhuyi.lrc" data-pic="http://oxv1k8kvi.bkt.clouddn.com/18-4-2/49973905.jpg" data-autoplay="true"> </div> <br/> <div id="security"> <div class="input-container"> <input type="password" class="form-control" id="pass" placeholder=" Please enter the password to read. " /> <label for="pass"> Please enter the password to read. </label> <div class="bottom-line"></div> </div> </div> <div id="encrypt-blog" style="display:none">  </div>]]></content>
    
    <summary type="html">
    
      &lt;img src=&quot;http://oxv1k8kvi.bkt.clouddn.com/18-3-31/54948649.jpg&quot;/&gt;
    
    </summary>
    
      <category term="你的名字" scheme="http://www.danboard.me/categories/%E4%BD%A0%E7%9A%84%E5%90%8D%E5%AD%97/"/>
    
    
      <category term="friend" scheme="http://www.danboard.me/tags/friend/"/>
    
  </entry>
  
</feed>
